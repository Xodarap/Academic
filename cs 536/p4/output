void declaredTwice(int, double -> void)(int x(int), double y(double)) {
}
double glob(double);
void badDecl(int -> void)(int x(int)) {
 int y(int);
 int k(int);
 int glob(int);
 if( x(int)) {
  int ifvar(int);
  glob(int) = (ifvar(int) + y(int));
  while( y(int)) {
   int z(int);
  }
 }
 else {
  double elsevar(double);
 }
}
void doubleDeclarations(int, double, double, double -> void)(int x(int), double y(double), double z(double), double z(double)) {
 double x(double);
 int y(int);
 int x(int);
 double y(double);
 if( x(int)) {
  while( y(double)) {
   int x(int);
  }
 }
 else {
  double y(double);
 }
}
void undeclared(int, double -> void)(int x(int), double y(double)) {
 int z(int);
 return (z(int)++);
 return (z(int)--);
 return (!z(int));
 return (z(int) && x(int));
 return (x(int) && z(int));
 return (z(int) || x(int));
 return (x(int) || z(int));
 return (x(int) == z(int));
 return (x(int) != z(int));
 return (x(int) < z(int));
 return (x(int) > z(int));
 return (x(int) <= z(int));
 return (x(int) >= z(int));
 x(int) = z(int);
 z(int) = 5;
 x(int) = (-z(int));
 z(int) = x(int);
 return (x(int) + z(int));
 return (z(int) + x(int));
 return (x(int) - z(int));
 return (z(int) - x(int));
 return (x(int) * z(int));
 return (z(int) * x(int));
 return (x(int) / z(int));
 return (z(int) / x(int));
 printf("%d", z(int));
 printf("%f", z(int));
 scanf("%d", &z(int));
 scanf("%f", &z(int));
}
