void declaredTwice(int x, double y) {
}
double glob;
void badDecl(int x) {
 int y;
 int k;
 int glob;
 doubleDeclarations(int, double, double -> void)(x(int), y(int));
 if( x(int)) {
  int ifvar;
  glob(int) = ((ifvar(int) + y(int)) + lateDeclared(double));
  while( y(int)) {
   int z;
   z(int) = ((k(int) / 3) + lateDeclared(double));
  }
 }
 else {
  double elsevar;
  elsevar(double) = ((glob(int) * 3) + lateDeclared(double));
 }
}
void doubleDeclarations(int x, double y, double z) {
 if( x(int)) {
  while( y(double)) {
   int k;
   k(int)++;
   k(int) = (2 + lateDeclared(double));
  }
 }
 else {
  double yz;
  yz(double) = (5 + lateDeclared(double));
 }
}
void undeclared(int x, double y) {
 int z;
 return (z(int)++);
 lateDeclared(double) = 5;
 return (z(int)--);
 --x(int);
 ++y(double);
 undeclared(int, double -> void)(glob(double), y(double));
 return (!z(int));
 return (z(int) && x(int));
 return (x(int) && z(int));
 return (z(int) || x(int));
 return (x(int) || z(int));
 return (x(int) == z(int));
 return (x(int) != z(int));
 return (x(int) < z(int));
 return (x(int) > z(int));
 return (x(int) <= z(int));
 return (x(int) >= z(int));
 x(int) = z(int);
 z(int) = 5;
 x(int) = (-z(int));
 z(int) = x(int);
 return (x(int) + z(int));
 return (z(int) + x(int));
 return (x(int) - z(int));
 return (z(int) - x(int));
 return (x(int) * z(int));
 return (z(int) * x(int));
 return (x(int) / z(int));
 return (z(int) / x(int));
 printf("%d", z(int));
 printf("%f", z(int));
 scanf("%d", &z(int));
 scanf("%f", &z(int));
}
double lateDeclared;
