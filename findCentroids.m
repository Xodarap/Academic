%
% This program is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this program.  If not, see <http://www.gnu.org/licenses/>.
%
% Finds the centroids of a data set, using clusters generated by mapper
% Parameters:
%	data - matrix of values; each row is a sample
%	nodeInfo - nodeInfo cell returned by mapper
%	attrList - which columns in data to find the center of
% Returns:
%	An array centroids where:
%	centroids(i,j) = the average value for the jth attribute in the ith cluster
%
% 
function centroids=findCentroids(data, nodeInfo, attrList)

centroids = zeros(length(nodeInfo), length(attrList));

for i=1:length(nodeInfo)
	attrs = zeros(length(attrList),1);
	setSize = length(nodeInfo{i}.set);
	% we can't just use an internal method like sum(), since set contains a list of which nodes to
	% look at. So we have to implement our own sort of sum
	for j=1:setSize
		for k=1:length(attrList)
			attrs(k) = attrs(k) + data(nodeInfo{i}.set(j),attrList(k));
		end
	end
	attrs = attrs ./ setSize;
	centroids(i,:) = attrs;
end

