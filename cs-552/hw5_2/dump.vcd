$date
	Tue Apr 19 03:07:42 2011
$end
$version
	ModelSim Version 5.8b
$end
$timescale
	1ns
$end
$scope module mem_system_perfbench $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var reg 16 3 Addr [15:0] $end
$var reg 16 4 DataIn [15:0] $end
$var reg 1 5 Rd $end
$var reg 1 6 Wr $end
$var reg 2048 7 addr_trace_file_name [2048:1] $end
$var wire 1 8 clk $end
$var wire 1 9 rst $end
$var wire 1 : CacheHit $end
$var wire 1 ; DataOut_ref [15] $end
$var wire 1 < DataOut_ref [14] $end
$var wire 1 = DataOut_ref [13] $end
$var wire 1 > DataOut_ref [12] $end
$var wire 1 ? DataOut_ref [11] $end
$var wire 1 @ DataOut_ref [10] $end
$var wire 1 A DataOut_ref [9] $end
$var wire 1 B DataOut_ref [8] $end
$var wire 1 C DataOut_ref [7] $end
$var wire 1 D DataOut_ref [6] $end
$var wire 1 E DataOut_ref [5] $end
$var wire 1 F DataOut_ref [4] $end
$var wire 1 G DataOut_ref [3] $end
$var wire 1 H DataOut_ref [2] $end
$var wire 1 I DataOut_ref [1] $end
$var wire 1 J DataOut_ref [0] $end
$var wire 1 K Done_ref $end
$var wire 1 L Stall_ref $end
$var wire 1 M CacheHit_ref $end
$var reg 1 N reg_readorwrite $end
$var integer 32 O n_requests $end
$var integer 32 P n_replies $end
$var integer 32 Q n_cache_hits $end
$var reg 1 R test_success $end
$var integer 32 S req_cycle $end
$var integer 32 T fd $end
$var integer 32 U rval $end
$scope task read_line $end
$var reg 1024 V line [1023:0] $end
$var integer 32 W rval $end
$upscope $end
$scope task end_simulation $end
$upscope $end
$scope module DUT $end
$var parameter 32 X mem_type $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$scope module clkgen $end
$var reg 1 !! clk $end
$var reg 1 "! rst $end
$var wire 1 | err $end
$var integer 32 #! cycle_count $end
$upscope $end
$scope module m0 $end
$var parameter 32 $! mem_type $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 %! busy [3] $end
$var wire 1 &! busy [2] $end
$var wire 1 '! busy [1] $end
$var wire 1 (! busy [0] $end
$var wire 1 )! comp $end
$var wire 1 *! data_out [15] $end
$var wire 1 +! data_out [14] $end
$var wire 1 ,! data_out [13] $end
$var wire 1 -! data_out [12] $end
$var wire 1 .! data_out [11] $end
$var wire 1 /! data_out [10] $end
$var wire 1 0! data_out [9] $end
$var wire 1 1! data_out [8] $end
$var wire 1 2! data_out [7] $end
$var wire 1 3! data_out [6] $end
$var wire 1 4! data_out [5] $end
$var wire 1 5! data_out [4] $end
$var wire 1 6! data_out [3] $end
$var wire 1 7! data_out [2] $end
$var wire 1 8! data_out [1] $end
$var wire 1 9! data_out [0] $end
$var wire 1 :! dirty $end
$var wire 1 ;! enable $end
$var wire 1 <! index [7] $end
$var wire 1 =! index [6] $end
$var wire 1 >! index [5] $end
$var wire 1 ?! index [4] $end
$var wire 1 @! index [3] $end
$var wire 1 A! index [2] $end
$var wire 1 B! index [1] $end
$var wire 1 C! index [0] $end
$var wire 1 D! tag [4] $end
$var wire 1 E! tag [3] $end
$var wire 1 F! tag [2] $end
$var wire 1 G! tag [1] $end
$var wire 1 H! tag [0] $end
$var wire 1 I! tag_out [4] $end
$var wire 1 J! tag_out [3] $end
$var wire 1 K! tag_out [2] $end
$var wire 1 L! tag_out [1] $end
$var wire 1 M! tag_out [0] $end
$var wire 1 N! valid $end
$var wire 1 O! word [1] $end
$var wire 1 P! word [0] $end
$var wire 1 Q! mem_word [1] $end
$var wire 1 R! mem_word [0] $end
$var wire 1 S! write $end
$var wire 1 T! writesrc $end
$var wire 1 U! offsetsel $end
$var wire 1 V! memRd $end
$var wire 1 W! memWr $end
$var wire 1 X! cacheWr $end
$var wire 1 Y! memStall $end
$var wire 1 Z! cacheHitInternal $end
$var wire 1 [! offset [2] $end
$var wire 1 \! offset [1] $end
$var wire 1 ]! offset [0] $end
$var wire 1 ^! C2M $end
$var wire 1 _! M2C $end
$var wire 1 `! H $end
$scope module c0 $end
$var parameter 32 a! cache_id $end
$var wire 1 ;! enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 D! tag_in [4] $end
$var wire 1 E! tag_in [3] $end
$var wire 1 F! tag_in [2] $end
$var wire 1 G! tag_in [1] $end
$var wire 1 H! tag_in [0] $end
$var wire 1 <! index [7] $end
$var wire 1 =! index [6] $end
$var wire 1 >! index [5] $end
$var wire 1 ?! index [4] $end
$var wire 1 @! index [3] $end
$var wire 1 A! index [2] $end
$var wire 1 B! index [1] $end
$var wire 1 C! index [0] $end
$var wire 1 b! offset [2] $end
$var wire 1 c! offset [1] $end
$var wire 1 d! offset [0] $end
$var wire 1 e! data_in [15] $end
$var wire 1 f! data_in [14] $end
$var wire 1 g! data_in [13] $end
$var wire 1 h! data_in [12] $end
$var wire 1 i! data_in [11] $end
$var wire 1 j! data_in [10] $end
$var wire 1 k! data_in [9] $end
$var wire 1 l! data_in [8] $end
$var wire 1 m! data_in [7] $end
$var wire 1 n! data_in [6] $end
$var wire 1 o! data_in [5] $end
$var wire 1 p! data_in [4] $end
$var wire 1 q! data_in [3] $end
$var wire 1 r! data_in [2] $end
$var wire 1 s! data_in [1] $end
$var wire 1 t! data_in [0] $end
$var wire 1 )! comp $end
$var wire 1 X! write $end
$var wire 1 u! valid_in $end
$var wire 1 I! tag_out_final [4] $end
$var wire 1 J! tag_out_final [3] $end
$var wire 1 K! tag_out_final [2] $end
$var wire 1 L! tag_out_final [1] $end
$var wire 1 M! tag_out_final [0] $end
$var wire 1 ! data_out_final [15] $end
$var wire 1 " data_out_final [14] $end
$var wire 1 # data_out_final [13] $end
$var wire 1 $ data_out_final [12] $end
$var wire 1 % data_out_final [11] $end
$var wire 1 & data_out_final [10] $end
$var wire 1 ' data_out_final [9] $end
$var wire 1 ( data_out_final [8] $end
$var wire 1 ) data_out_final [7] $end
$var wire 1 * data_out_final [6] $end
$var wire 1 + data_out_final [5] $end
$var wire 1 , data_out_final [4] $end
$var wire 1 - data_out_final [3] $end
$var wire 1 . data_out_final [2] $end
$var wire 1 / data_out_final [1] $end
$var wire 1 0 data_out_final [0] $end
$var wire 1 Z! hit_final $end
$var wire 1 :! dirty_final $end
$var wire 1 N! valid_final $end
$var wire 1 | err_final $end
$var wire 1 v! data_out [15] $end
$var wire 1 w! data_out [14] $end
$var wire 1 x! data_out [13] $end
$var wire 1 y! data_out [12] $end
$var wire 1 z! data_out [11] $end
$var wire 1 {! data_out [10] $end
$var wire 1 |! data_out [9] $end
$var wire 1 }! data_out [8] $end
$var wire 1 ~! data_out [7] $end
$var wire 1 !" data_out [6] $end
$var wire 1 "" data_out [5] $end
$var wire 1 #" data_out [4] $end
$var wire 1 $" data_out [3] $end
$var wire 1 %" data_out [2] $end
$var wire 1 &" data_out [1] $end
$var wire 1 '" data_out [0] $end
$var wire 1 (" dirty $end
$var wire 1 )" err $end
$var wire 1 *" hit $end
$var wire 1 +" tag_out [4] $end
$var wire 1 ," tag_out [3] $end
$var wire 1 -" tag_out [2] $end
$var wire 1 ." tag_out [1] $end
$var wire 1 /" tag_out [0] $end
$var wire 1 0" valid $end
$var wire 1 1" data_out2 [15] $end
$var wire 1 2" data_out2 [14] $end
$var wire 1 3" data_out2 [13] $end
$var wire 1 4" data_out2 [12] $end
$var wire 1 5" data_out2 [11] $end
$var wire 1 6" data_out2 [10] $end
$var wire 1 7" data_out2 [9] $end
$var wire 1 8" data_out2 [8] $end
$var wire 1 9" data_out2 [7] $end
$var wire 1 :" data_out2 [6] $end
$var wire 1 ;" data_out2 [5] $end
$var wire 1 <" data_out2 [4] $end
$var wire 1 =" data_out2 [3] $end
$var wire 1 >" data_out2 [2] $end
$var wire 1 ?" data_out2 [1] $end
$var wire 1 @" data_out2 [0] $end
$var wire 1 A" dirty2 $end
$var wire 1 B" err2 $end
$var wire 1 C" hit2 $end
$var wire 1 D" tag_out2 [4] $end
$var wire 1 E" tag_out2 [3] $end
$var wire 1 F" tag_out2 [2] $end
$var wire 1 G" tag_out2 [1] $end
$var wire 1 H" tag_out2 [0] $end
$var wire 1 I" valid2 $end
$var wire 1 J" cachetowriteto $end
$var wire 1 K" write1 $end
$var wire 1 L" write2 $end
$var wire 1 M" victim $end
$scope module c0 $end
$var parameter 32 N" cache_id $end
$var wire 1 ;! enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 D! tag_in [4] $end
$var wire 1 E! tag_in [3] $end
$var wire 1 F! tag_in [2] $end
$var wire 1 G! tag_in [1] $end
$var wire 1 H! tag_in [0] $end
$var wire 1 <! index [7] $end
$var wire 1 =! index [6] $end
$var wire 1 >! index [5] $end
$var wire 1 ?! index [4] $end
$var wire 1 @! index [3] $end
$var wire 1 A! index [2] $end
$var wire 1 B! index [1] $end
$var wire 1 C! index [0] $end
$var wire 1 b! offset [2] $end
$var wire 1 c! offset [1] $end
$var wire 1 d! offset [0] $end
$var wire 1 e! data_in [15] $end
$var wire 1 f! data_in [14] $end
$var wire 1 g! data_in [13] $end
$var wire 1 h! data_in [12] $end
$var wire 1 i! data_in [11] $end
$var wire 1 j! data_in [10] $end
$var wire 1 k! data_in [9] $end
$var wire 1 l! data_in [8] $end
$var wire 1 m! data_in [7] $end
$var wire 1 n! data_in [6] $end
$var wire 1 o! data_in [5] $end
$var wire 1 p! data_in [4] $end
$var wire 1 q! data_in [3] $end
$var wire 1 r! data_in [2] $end
$var wire 1 s! data_in [1] $end
$var wire 1 t! data_in [0] $end
$var wire 1 )! comp $end
$var wire 1 K" write $end
$var wire 1 u! valid_in $end
$var wire 1 +" tag_out [4] $end
$var wire 1 ," tag_out [3] $end
$var wire 1 -" tag_out [2] $end
$var wire 1 ." tag_out [1] $end
$var wire 1 /" tag_out [0] $end
$var wire 1 v! data_out [15] $end
$var wire 1 w! data_out [14] $end
$var wire 1 x! data_out [13] $end
$var wire 1 y! data_out [12] $end
$var wire 1 z! data_out [11] $end
$var wire 1 {! data_out [10] $end
$var wire 1 |! data_out [9] $end
$var wire 1 }! data_out [8] $end
$var wire 1 ~! data_out [7] $end
$var wire 1 !" data_out [6] $end
$var wire 1 "" data_out [5] $end
$var wire 1 #" data_out [4] $end
$var wire 1 $" data_out [3] $end
$var wire 1 %" data_out [2] $end
$var wire 1 &" data_out [1] $end
$var wire 1 '" data_out [0] $end
$var wire 1 *" hit $end
$var wire 1 (" dirty $end
$var wire 1 0" valid $end
$var wire 1 )" err $end
$var wire 1 O" ram0_id [4] $end
$var wire 1 P" ram0_id [3] $end
$var wire 1 Q" ram0_id [2] $end
$var wire 1 R" ram0_id [1] $end
$var wire 1 S" ram0_id [0] $end
$var wire 1 T" ram1_id [4] $end
$var wire 1 U" ram1_id [3] $end
$var wire 1 V" ram1_id [2] $end
$var wire 1 W" ram1_id [1] $end
$var wire 1 X" ram1_id [0] $end
$var wire 1 Y" ram2_id [4] $end
$var wire 1 Z" ram2_id [3] $end
$var wire 1 [" ram2_id [2] $end
$var wire 1 \" ram2_id [1] $end
$var wire 1 ]" ram2_id [0] $end
$var wire 1 ^" ram3_id [4] $end
$var wire 1 _" ram3_id [3] $end
$var wire 1 `" ram3_id [2] $end
$var wire 1 a" ram3_id [1] $end
$var wire 1 b" ram3_id [0] $end
$var wire 1 c" ram4_id [4] $end
$var wire 1 d" ram4_id [3] $end
$var wire 1 e" ram4_id [2] $end
$var wire 1 f" ram4_id [1] $end
$var wire 1 g" ram4_id [0] $end
$var wire 1 h" ram5_id [4] $end
$var wire 1 i" ram5_id [3] $end
$var wire 1 j" ram5_id [2] $end
$var wire 1 k" ram5_id [1] $end
$var wire 1 l" ram5_id [0] $end
$var wire 1 m" w0 [15] $end
$var wire 1 n" w0 [14] $end
$var wire 1 o" w0 [13] $end
$var wire 1 p" w0 [12] $end
$var wire 1 q" w0 [11] $end
$var wire 1 r" w0 [10] $end
$var wire 1 s" w0 [9] $end
$var wire 1 t" w0 [8] $end
$var wire 1 u" w0 [7] $end
$var wire 1 v" w0 [6] $end
$var wire 1 w" w0 [5] $end
$var wire 1 x" w0 [4] $end
$var wire 1 y" w0 [3] $end
$var wire 1 z" w0 [2] $end
$var wire 1 {" w0 [1] $end
$var wire 1 |" w0 [0] $end
$var wire 1 }" w1 [15] $end
$var wire 1 ~" w1 [14] $end
$var wire 1 !# w1 [13] $end
$var wire 1 "# w1 [12] $end
$var wire 1 ## w1 [11] $end
$var wire 1 $# w1 [10] $end
$var wire 1 %# w1 [9] $end
$var wire 1 &# w1 [8] $end
$var wire 1 '# w1 [7] $end
$var wire 1 (# w1 [6] $end
$var wire 1 )# w1 [5] $end
$var wire 1 *# w1 [4] $end
$var wire 1 +# w1 [3] $end
$var wire 1 ,# w1 [2] $end
$var wire 1 -# w1 [1] $end
$var wire 1 .# w1 [0] $end
$var wire 1 /# w2 [15] $end
$var wire 1 0# w2 [14] $end
$var wire 1 1# w2 [13] $end
$var wire 1 2# w2 [12] $end
$var wire 1 3# w2 [11] $end
$var wire 1 4# w2 [10] $end
$var wire 1 5# w2 [9] $end
$var wire 1 6# w2 [8] $end
$var wire 1 7# w2 [7] $end
$var wire 1 8# w2 [6] $end
$var wire 1 9# w2 [5] $end
$var wire 1 :# w2 [4] $end
$var wire 1 ;# w2 [3] $end
$var wire 1 <# w2 [2] $end
$var wire 1 =# w2 [1] $end
$var wire 1 ># w2 [0] $end
$var wire 1 ?# w3 [15] $end
$var wire 1 @# w3 [14] $end
$var wire 1 A# w3 [13] $end
$var wire 1 B# w3 [12] $end
$var wire 1 C# w3 [11] $end
$var wire 1 D# w3 [10] $end
$var wire 1 E# w3 [9] $end
$var wire 1 F# w3 [8] $end
$var wire 1 G# w3 [7] $end
$var wire 1 H# w3 [6] $end
$var wire 1 I# w3 [5] $end
$var wire 1 J# w3 [4] $end
$var wire 1 K# w3 [3] $end
$var wire 1 L# w3 [2] $end
$var wire 1 M# w3 [1] $end
$var wire 1 N# w3 [0] $end
$var wire 1 O# go $end
$var wire 1 P# match $end
$var wire 1 Q# wr_word0 $end
$var wire 1 R# wr_word1 $end
$var wire 1 S# wr_word2 $end
$var wire 1 T# wr_word3 $end
$var wire 1 U# wr_dirty $end
$var wire 1 V# wr_tag $end
$var wire 1 W# wr_valid $end
$var wire 1 X# dirty_in $end
$var wire 1 Y# dirtybit $end
$var wire 1 Z# validbit $end
$scope module mem_w0 $end
$var parameter 32 [# Size $end
$var wire 1 m" data_out [15] $end
$var wire 1 n" data_out [14] $end
$var wire 1 o" data_out [13] $end
$var wire 1 p" data_out [12] $end
$var wire 1 q" data_out [11] $end
$var wire 1 r" data_out [10] $end
$var wire 1 s" data_out [9] $end
$var wire 1 t" data_out [8] $end
$var wire 1 u" data_out [7] $end
$var wire 1 v" data_out [6] $end
$var wire 1 w" data_out [5] $end
$var wire 1 x" data_out [4] $end
$var wire 1 y" data_out [3] $end
$var wire 1 z" data_out [2] $end
$var wire 1 {" data_out [1] $end
$var wire 1 |" data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 e! data_in [15] $end
$var wire 1 f! data_in [14] $end
$var wire 1 g! data_in [13] $end
$var wire 1 h! data_in [12] $end
$var wire 1 i! data_in [11] $end
$var wire 1 j! data_in [10] $end
$var wire 1 k! data_in [9] $end
$var wire 1 l! data_in [8] $end
$var wire 1 m! data_in [7] $end
$var wire 1 n! data_in [6] $end
$var wire 1 o! data_in [5] $end
$var wire 1 p! data_in [4] $end
$var wire 1 q! data_in [3] $end
$var wire 1 r! data_in [2] $end
$var wire 1 s! data_in [1] $end
$var wire 1 t! data_in [0] $end
$var wire 1 Q# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 O" file_id [4] $end
$var wire 1 P" file_id [3] $end
$var wire 1 Q" file_id [2] $end
$var wire 1 R" file_id [1] $end
$var wire 1 S" file_id [0] $end
$var integer 32 \# mcd $end
$var integer 32 ]# i $end
$upscope $end
$scope module mem_w1 $end
$var parameter 32 ^# Size $end
$var wire 1 }" data_out [15] $end
$var wire 1 ~" data_out [14] $end
$var wire 1 !# data_out [13] $end
$var wire 1 "# data_out [12] $end
$var wire 1 ## data_out [11] $end
$var wire 1 $# data_out [10] $end
$var wire 1 %# data_out [9] $end
$var wire 1 &# data_out [8] $end
$var wire 1 '# data_out [7] $end
$var wire 1 (# data_out [6] $end
$var wire 1 )# data_out [5] $end
$var wire 1 *# data_out [4] $end
$var wire 1 +# data_out [3] $end
$var wire 1 ,# data_out [2] $end
$var wire 1 -# data_out [1] $end
$var wire 1 .# data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 e! data_in [15] $end
$var wire 1 f! data_in [14] $end
$var wire 1 g! data_in [13] $end
$var wire 1 h! data_in [12] $end
$var wire 1 i! data_in [11] $end
$var wire 1 j! data_in [10] $end
$var wire 1 k! data_in [9] $end
$var wire 1 l! data_in [8] $end
$var wire 1 m! data_in [7] $end
$var wire 1 n! data_in [6] $end
$var wire 1 o! data_in [5] $end
$var wire 1 p! data_in [4] $end
$var wire 1 q! data_in [3] $end
$var wire 1 r! data_in [2] $end
$var wire 1 s! data_in [1] $end
$var wire 1 t! data_in [0] $end
$var wire 1 R# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 T" file_id [4] $end
$var wire 1 U" file_id [3] $end
$var wire 1 V" file_id [2] $end
$var wire 1 W" file_id [1] $end
$var wire 1 X" file_id [0] $end
$var integer 32 _# mcd $end
$var integer 32 `# i $end
$upscope $end
$scope module mem_w2 $end
$var parameter 32 a# Size $end
$var wire 1 /# data_out [15] $end
$var wire 1 0# data_out [14] $end
$var wire 1 1# data_out [13] $end
$var wire 1 2# data_out [12] $end
$var wire 1 3# data_out [11] $end
$var wire 1 4# data_out [10] $end
$var wire 1 5# data_out [9] $end
$var wire 1 6# data_out [8] $end
$var wire 1 7# data_out [7] $end
$var wire 1 8# data_out [6] $end
$var wire 1 9# data_out [5] $end
$var wire 1 :# data_out [4] $end
$var wire 1 ;# data_out [3] $end
$var wire 1 <# data_out [2] $end
$var wire 1 =# data_out [1] $end
$var wire 1 ># data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 e! data_in [15] $end
$var wire 1 f! data_in [14] $end
$var wire 1 g! data_in [13] $end
$var wire 1 h! data_in [12] $end
$var wire 1 i! data_in [11] $end
$var wire 1 j! data_in [10] $end
$var wire 1 k! data_in [9] $end
$var wire 1 l! data_in [8] $end
$var wire 1 m! data_in [7] $end
$var wire 1 n! data_in [6] $end
$var wire 1 o! data_in [5] $end
$var wire 1 p! data_in [4] $end
$var wire 1 q! data_in [3] $end
$var wire 1 r! data_in [2] $end
$var wire 1 s! data_in [1] $end
$var wire 1 t! data_in [0] $end
$var wire 1 S# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 Y" file_id [4] $end
$var wire 1 Z" file_id [3] $end
$var wire 1 [" file_id [2] $end
$var wire 1 \" file_id [1] $end
$var wire 1 ]" file_id [0] $end
$var integer 32 b# mcd $end
$var integer 32 c# i $end
$upscope $end
$scope module mem_w3 $end
$var parameter 32 d# Size $end
$var wire 1 ?# data_out [15] $end
$var wire 1 @# data_out [14] $end
$var wire 1 A# data_out [13] $end
$var wire 1 B# data_out [12] $end
$var wire 1 C# data_out [11] $end
$var wire 1 D# data_out [10] $end
$var wire 1 E# data_out [9] $end
$var wire 1 F# data_out [8] $end
$var wire 1 G# data_out [7] $end
$var wire 1 H# data_out [6] $end
$var wire 1 I# data_out [5] $end
$var wire 1 J# data_out [4] $end
$var wire 1 K# data_out [3] $end
$var wire 1 L# data_out [2] $end
$var wire 1 M# data_out [1] $end
$var wire 1 N# data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 e! data_in [15] $end
$var wire 1 f! data_in [14] $end
$var wire 1 g! data_in [13] $end
$var wire 1 h! data_in [12] $end
$var wire 1 i! data_in [11] $end
$var wire 1 j! data_in [10] $end
$var wire 1 k! data_in [9] $end
$var wire 1 l! data_in [8] $end
$var wire 1 m! data_in [7] $end
$var wire 1 n! data_in [6] $end
$var wire 1 o! data_in [5] $end
$var wire 1 p! data_in [4] $end
$var wire 1 q! data_in [3] $end
$var wire 1 r! data_in [2] $end
$var wire 1 s! data_in [1] $end
$var wire 1 t! data_in [0] $end
$var wire 1 T# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ^" file_id [4] $end
$var wire 1 _" file_id [3] $end
$var wire 1 `" file_id [2] $end
$var wire 1 a" file_id [1] $end
$var wire 1 b" file_id [0] $end
$var integer 32 e# mcd $end
$var integer 32 f# i $end
$upscope $end
$scope module mem_tg $end
$var parameter 32 g# Size $end
$var wire 1 +" data_out [4] $end
$var wire 1 ," data_out [3] $end
$var wire 1 -" data_out [2] $end
$var wire 1 ." data_out [1] $end
$var wire 1 /" data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 D! data_in [4] $end
$var wire 1 E! data_in [3] $end
$var wire 1 F! data_in [2] $end
$var wire 1 G! data_in [1] $end
$var wire 1 H! data_in [0] $end
$var wire 1 V# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 c" file_id [4] $end
$var wire 1 d" file_id [3] $end
$var wire 1 e" file_id [2] $end
$var wire 1 f" file_id [1] $end
$var wire 1 g" file_id [0] $end
$var integer 32 h# mcd $end
$var integer 32 i# i $end
$upscope $end
$scope module mem_dr $end
$var parameter 32 j# Size $end
$var wire 1 Y# data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 X# data_in [0] $end
$var wire 1 U# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 h" file_id [4] $end
$var wire 1 i" file_id [3] $end
$var wire 1 j" file_id [2] $end
$var wire 1 k" file_id [1] $end
$var wire 1 l" file_id [0] $end
$var integer 32 k# mcd $end
$var integer 32 l# i $end
$upscope $end
$scope module mem_vl $end
$var wire 1 Z# data_out $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 u! data_in $end
$var wire 1 W# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 O" file_id [4] $end
$var wire 1 P" file_id [3] $end
$var wire 1 Q" file_id [2] $end
$var wire 1 R" file_id [1] $end
$var wire 1 S" file_id [0] $end
$var integer 32 m# mcd $end
$var integer 32 n# i $end
$upscope $end
$upscope $end
$scope module c1 $end
$var parameter 32 o# cache_id $end
$var wire 1 ;! enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 D! tag_in [4] $end
$var wire 1 E! tag_in [3] $end
$var wire 1 F! tag_in [2] $end
$var wire 1 G! tag_in [1] $end
$var wire 1 H! tag_in [0] $end
$var wire 1 <! index [7] $end
$var wire 1 =! index [6] $end
$var wire 1 >! index [5] $end
$var wire 1 ?! index [4] $end
$var wire 1 @! index [3] $end
$var wire 1 A! index [2] $end
$var wire 1 B! index [1] $end
$var wire 1 C! index [0] $end
$var wire 1 b! offset [2] $end
$var wire 1 c! offset [1] $end
$var wire 1 d! offset [0] $end
$var wire 1 e! data_in [15] $end
$var wire 1 f! data_in [14] $end
$var wire 1 g! data_in [13] $end
$var wire 1 h! data_in [12] $end
$var wire 1 i! data_in [11] $end
$var wire 1 j! data_in [10] $end
$var wire 1 k! data_in [9] $end
$var wire 1 l! data_in [8] $end
$var wire 1 m! data_in [7] $end
$var wire 1 n! data_in [6] $end
$var wire 1 o! data_in [5] $end
$var wire 1 p! data_in [4] $end
$var wire 1 q! data_in [3] $end
$var wire 1 r! data_in [2] $end
$var wire 1 s! data_in [1] $end
$var wire 1 t! data_in [0] $end
$var wire 1 )! comp $end
$var wire 1 L" write $end
$var wire 1 u! valid_in $end
$var wire 1 D" tag_out [4] $end
$var wire 1 E" tag_out [3] $end
$var wire 1 F" tag_out [2] $end
$var wire 1 G" tag_out [1] $end
$var wire 1 H" tag_out [0] $end
$var wire 1 1" data_out [15] $end
$var wire 1 2" data_out [14] $end
$var wire 1 3" data_out [13] $end
$var wire 1 4" data_out [12] $end
$var wire 1 5" data_out [11] $end
$var wire 1 6" data_out [10] $end
$var wire 1 7" data_out [9] $end
$var wire 1 8" data_out [8] $end
$var wire 1 9" data_out [7] $end
$var wire 1 :" data_out [6] $end
$var wire 1 ;" data_out [5] $end
$var wire 1 <" data_out [4] $end
$var wire 1 =" data_out [3] $end
$var wire 1 >" data_out [2] $end
$var wire 1 ?" data_out [1] $end
$var wire 1 @" data_out [0] $end
$var wire 1 C" hit $end
$var wire 1 A" dirty $end
$var wire 1 I" valid $end
$var wire 1 B" err $end
$var wire 1 p# ram0_id [4] $end
$var wire 1 q# ram0_id [3] $end
$var wire 1 r# ram0_id [2] $end
$var wire 1 s# ram0_id [1] $end
$var wire 1 t# ram0_id [0] $end
$var wire 1 u# ram1_id [4] $end
$var wire 1 v# ram1_id [3] $end
$var wire 1 w# ram1_id [2] $end
$var wire 1 x# ram1_id [1] $end
$var wire 1 y# ram1_id [0] $end
$var wire 1 z# ram2_id [4] $end
$var wire 1 {# ram2_id [3] $end
$var wire 1 |# ram2_id [2] $end
$var wire 1 }# ram2_id [1] $end
$var wire 1 ~# ram2_id [0] $end
$var wire 1 !$ ram3_id [4] $end
$var wire 1 "$ ram3_id [3] $end
$var wire 1 #$ ram3_id [2] $end
$var wire 1 $$ ram3_id [1] $end
$var wire 1 %$ ram3_id [0] $end
$var wire 1 &$ ram4_id [4] $end
$var wire 1 '$ ram4_id [3] $end
$var wire 1 ($ ram4_id [2] $end
$var wire 1 )$ ram4_id [1] $end
$var wire 1 *$ ram4_id [0] $end
$var wire 1 +$ ram5_id [4] $end
$var wire 1 ,$ ram5_id [3] $end
$var wire 1 -$ ram5_id [2] $end
$var wire 1 .$ ram5_id [1] $end
$var wire 1 /$ ram5_id [0] $end
$var wire 1 0$ w0 [15] $end
$var wire 1 1$ w0 [14] $end
$var wire 1 2$ w0 [13] $end
$var wire 1 3$ w0 [12] $end
$var wire 1 4$ w0 [11] $end
$var wire 1 5$ w0 [10] $end
$var wire 1 6$ w0 [9] $end
$var wire 1 7$ w0 [8] $end
$var wire 1 8$ w0 [7] $end
$var wire 1 9$ w0 [6] $end
$var wire 1 :$ w0 [5] $end
$var wire 1 ;$ w0 [4] $end
$var wire 1 <$ w0 [3] $end
$var wire 1 =$ w0 [2] $end
$var wire 1 >$ w0 [1] $end
$var wire 1 ?$ w0 [0] $end
$var wire 1 @$ w1 [15] $end
$var wire 1 A$ w1 [14] $end
$var wire 1 B$ w1 [13] $end
$var wire 1 C$ w1 [12] $end
$var wire 1 D$ w1 [11] $end
$var wire 1 E$ w1 [10] $end
$var wire 1 F$ w1 [9] $end
$var wire 1 G$ w1 [8] $end
$var wire 1 H$ w1 [7] $end
$var wire 1 I$ w1 [6] $end
$var wire 1 J$ w1 [5] $end
$var wire 1 K$ w1 [4] $end
$var wire 1 L$ w1 [3] $end
$var wire 1 M$ w1 [2] $end
$var wire 1 N$ w1 [1] $end
$var wire 1 O$ w1 [0] $end
$var wire 1 P$ w2 [15] $end
$var wire 1 Q$ w2 [14] $end
$var wire 1 R$ w2 [13] $end
$var wire 1 S$ w2 [12] $end
$var wire 1 T$ w2 [11] $end
$var wire 1 U$ w2 [10] $end
$var wire 1 V$ w2 [9] $end
$var wire 1 W$ w2 [8] $end
$var wire 1 X$ w2 [7] $end
$var wire 1 Y$ w2 [6] $end
$var wire 1 Z$ w2 [5] $end
$var wire 1 [$ w2 [4] $end
$var wire 1 \$ w2 [3] $end
$var wire 1 ]$ w2 [2] $end
$var wire 1 ^$ w2 [1] $end
$var wire 1 _$ w2 [0] $end
$var wire 1 `$ w3 [15] $end
$var wire 1 a$ w3 [14] $end
$var wire 1 b$ w3 [13] $end
$var wire 1 c$ w3 [12] $end
$var wire 1 d$ w3 [11] $end
$var wire 1 e$ w3 [10] $end
$var wire 1 f$ w3 [9] $end
$var wire 1 g$ w3 [8] $end
$var wire 1 h$ w3 [7] $end
$var wire 1 i$ w3 [6] $end
$var wire 1 j$ w3 [5] $end
$var wire 1 k$ w3 [4] $end
$var wire 1 l$ w3 [3] $end
$var wire 1 m$ w3 [2] $end
$var wire 1 n$ w3 [1] $end
$var wire 1 o$ w3 [0] $end
$var wire 1 p$ go $end
$var wire 1 q$ match $end
$var wire 1 r$ wr_word0 $end
$var wire 1 s$ wr_word1 $end
$var wire 1 t$ wr_word2 $end
$var wire 1 u$ wr_word3 $end
$var wire 1 v$ wr_dirty $end
$var wire 1 w$ wr_tag $end
$var wire 1 x$ wr_valid $end
$var wire 1 y$ dirty_in $end
$var wire 1 z$ dirtybit $end
$var wire 1 {$ validbit $end
$scope module mem_w0 $end
$var parameter 32 |$ Size $end
$var wire 1 0$ data_out [15] $end
$var wire 1 1$ data_out [14] $end
$var wire 1 2$ data_out [13] $end
$var wire 1 3$ data_out [12] $end
$var wire 1 4$ data_out [11] $end
$var wire 1 5$ data_out [10] $end
$var wire 1 6$ data_out [9] $end
$var wire 1 7$ data_out [8] $end
$var wire 1 8$ data_out [7] $end
$var wire 1 9$ data_out [6] $end
$var wire 1 :$ data_out [5] $end
$var wire 1 ;$ data_out [4] $end
$var wire 1 <$ data_out [3] $end
$var wire 1 =$ data_out [2] $end
$var wire 1 >$ data_out [1] $end
$var wire 1 ?$ data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 e! data_in [15] $end
$var wire 1 f! data_in [14] $end
$var wire 1 g! data_in [13] $end
$var wire 1 h! data_in [12] $end
$var wire 1 i! data_in [11] $end
$var wire 1 j! data_in [10] $end
$var wire 1 k! data_in [9] $end
$var wire 1 l! data_in [8] $end
$var wire 1 m! data_in [7] $end
$var wire 1 n! data_in [6] $end
$var wire 1 o! data_in [5] $end
$var wire 1 p! data_in [4] $end
$var wire 1 q! data_in [3] $end
$var wire 1 r! data_in [2] $end
$var wire 1 s! data_in [1] $end
$var wire 1 t! data_in [0] $end
$var wire 1 r$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 p# file_id [4] $end
$var wire 1 q# file_id [3] $end
$var wire 1 r# file_id [2] $end
$var wire 1 s# file_id [1] $end
$var wire 1 t# file_id [0] $end
$var integer 32 }$ mcd $end
$var integer 32 ~$ i $end
$upscope $end
$scope module mem_w1 $end
$var parameter 32 !% Size $end
$var wire 1 @$ data_out [15] $end
$var wire 1 A$ data_out [14] $end
$var wire 1 B$ data_out [13] $end
$var wire 1 C$ data_out [12] $end
$var wire 1 D$ data_out [11] $end
$var wire 1 E$ data_out [10] $end
$var wire 1 F$ data_out [9] $end
$var wire 1 G$ data_out [8] $end
$var wire 1 H$ data_out [7] $end
$var wire 1 I$ data_out [6] $end
$var wire 1 J$ data_out [5] $end
$var wire 1 K$ data_out [4] $end
$var wire 1 L$ data_out [3] $end
$var wire 1 M$ data_out [2] $end
$var wire 1 N$ data_out [1] $end
$var wire 1 O$ data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 e! data_in [15] $end
$var wire 1 f! data_in [14] $end
$var wire 1 g! data_in [13] $end
$var wire 1 h! data_in [12] $end
$var wire 1 i! data_in [11] $end
$var wire 1 j! data_in [10] $end
$var wire 1 k! data_in [9] $end
$var wire 1 l! data_in [8] $end
$var wire 1 m! data_in [7] $end
$var wire 1 n! data_in [6] $end
$var wire 1 o! data_in [5] $end
$var wire 1 p! data_in [4] $end
$var wire 1 q! data_in [3] $end
$var wire 1 r! data_in [2] $end
$var wire 1 s! data_in [1] $end
$var wire 1 t! data_in [0] $end
$var wire 1 s$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 u# file_id [4] $end
$var wire 1 v# file_id [3] $end
$var wire 1 w# file_id [2] $end
$var wire 1 x# file_id [1] $end
$var wire 1 y# file_id [0] $end
$var integer 32 "% mcd $end
$var integer 32 #% i $end
$upscope $end
$scope module mem_w2 $end
$var parameter 32 $% Size $end
$var wire 1 P$ data_out [15] $end
$var wire 1 Q$ data_out [14] $end
$var wire 1 R$ data_out [13] $end
$var wire 1 S$ data_out [12] $end
$var wire 1 T$ data_out [11] $end
$var wire 1 U$ data_out [10] $end
$var wire 1 V$ data_out [9] $end
$var wire 1 W$ data_out [8] $end
$var wire 1 X$ data_out [7] $end
$var wire 1 Y$ data_out [6] $end
$var wire 1 Z$ data_out [5] $end
$var wire 1 [$ data_out [4] $end
$var wire 1 \$ data_out [3] $end
$var wire 1 ]$ data_out [2] $end
$var wire 1 ^$ data_out [1] $end
$var wire 1 _$ data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 e! data_in [15] $end
$var wire 1 f! data_in [14] $end
$var wire 1 g! data_in [13] $end
$var wire 1 h! data_in [12] $end
$var wire 1 i! data_in [11] $end
$var wire 1 j! data_in [10] $end
$var wire 1 k! data_in [9] $end
$var wire 1 l! data_in [8] $end
$var wire 1 m! data_in [7] $end
$var wire 1 n! data_in [6] $end
$var wire 1 o! data_in [5] $end
$var wire 1 p! data_in [4] $end
$var wire 1 q! data_in [3] $end
$var wire 1 r! data_in [2] $end
$var wire 1 s! data_in [1] $end
$var wire 1 t! data_in [0] $end
$var wire 1 t$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 z# file_id [4] $end
$var wire 1 {# file_id [3] $end
$var wire 1 |# file_id [2] $end
$var wire 1 }# file_id [1] $end
$var wire 1 ~# file_id [0] $end
$var integer 32 %% mcd $end
$var integer 32 &% i $end
$upscope $end
$scope module mem_w3 $end
$var parameter 32 '% Size $end
$var wire 1 `$ data_out [15] $end
$var wire 1 a$ data_out [14] $end
$var wire 1 b$ data_out [13] $end
$var wire 1 c$ data_out [12] $end
$var wire 1 d$ data_out [11] $end
$var wire 1 e$ data_out [10] $end
$var wire 1 f$ data_out [9] $end
$var wire 1 g$ data_out [8] $end
$var wire 1 h$ data_out [7] $end
$var wire 1 i$ data_out [6] $end
$var wire 1 j$ data_out [5] $end
$var wire 1 k$ data_out [4] $end
$var wire 1 l$ data_out [3] $end
$var wire 1 m$ data_out [2] $end
$var wire 1 n$ data_out [1] $end
$var wire 1 o$ data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 e! data_in [15] $end
$var wire 1 f! data_in [14] $end
$var wire 1 g! data_in [13] $end
$var wire 1 h! data_in [12] $end
$var wire 1 i! data_in [11] $end
$var wire 1 j! data_in [10] $end
$var wire 1 k! data_in [9] $end
$var wire 1 l! data_in [8] $end
$var wire 1 m! data_in [7] $end
$var wire 1 n! data_in [6] $end
$var wire 1 o! data_in [5] $end
$var wire 1 p! data_in [4] $end
$var wire 1 q! data_in [3] $end
$var wire 1 r! data_in [2] $end
$var wire 1 s! data_in [1] $end
$var wire 1 t! data_in [0] $end
$var wire 1 u$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 !$ file_id [4] $end
$var wire 1 "$ file_id [3] $end
$var wire 1 #$ file_id [2] $end
$var wire 1 $$ file_id [1] $end
$var wire 1 %$ file_id [0] $end
$var integer 32 (% mcd $end
$var integer 32 )% i $end
$upscope $end
$scope module mem_tg $end
$var parameter 32 *% Size $end
$var wire 1 D" data_out [4] $end
$var wire 1 E" data_out [3] $end
$var wire 1 F" data_out [2] $end
$var wire 1 G" data_out [1] $end
$var wire 1 H" data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 D! data_in [4] $end
$var wire 1 E! data_in [3] $end
$var wire 1 F! data_in [2] $end
$var wire 1 G! data_in [1] $end
$var wire 1 H! data_in [0] $end
$var wire 1 w$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 &$ file_id [4] $end
$var wire 1 '$ file_id [3] $end
$var wire 1 ($ file_id [2] $end
$var wire 1 )$ file_id [1] $end
$var wire 1 *$ file_id [0] $end
$var integer 32 +% mcd $end
$var integer 32 ,% i $end
$upscope $end
$scope module mem_dr $end
$var parameter 32 -% Size $end
$var wire 1 z$ data_out [0] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 y$ data_in [0] $end
$var wire 1 v$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 +$ file_id [4] $end
$var wire 1 ,$ file_id [3] $end
$var wire 1 -$ file_id [2] $end
$var wire 1 .$ file_id [1] $end
$var wire 1 /$ file_id [0] $end
$var integer 32 .% mcd $end
$var integer 32 /% i $end
$upscope $end
$scope module mem_vl $end
$var wire 1 {$ data_out $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 u! data_in $end
$var wire 1 x$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 p# file_id [4] $end
$var wire 1 q# file_id [3] $end
$var wire 1 r# file_id [2] $end
$var wire 1 s# file_id [1] $end
$var wire 1 t# file_id [0] $end
$var integer 32 0% mcd $end
$var integer 32 1% i $end
$upscope $end
$upscope $end
$scope module victimizer $end
$var wire 1 M" readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 2% writedata $end
$var wire 1 *" write $end
$var wire 1 3% actualWrite $end
$scope module data $end
$var wire 1 M" q $end
$var wire 1 3% d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4% state $end
$upscope $end
$upscope $end
$upscope $end
$scope module c0ctl $end
$var parameter 4 5% RESET $end
$var parameter 4 6% COMPREAD $end
$var parameter 4 7% COMPWRITE $end
$var parameter 4 8% CACHE2MEM0 $end
$var parameter 4 9% CACHE2MEM1 $end
$var parameter 4 :% CACHE2MEM2 $end
$var parameter 4 ;% CACHE2MEM3 $end
$var parameter 4 <% CACHE2MEM4 $end
$var parameter 4 =% MEM2CACHE0 $end
$var parameter 4 >% MEM2CACHE1 $end
$var parameter 4 ?% MEM2CACHE2 $end
$var parameter 4 @% MEM2CACHE3 $end
$var parameter 4 A% MEM2CACHE4 $end
$var parameter 4 B% MEM2CACHE5 $end
$var parameter 4 C% DONE $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 y rd $end
$var wire 1 z wr $end
$var wire 1 _! M2C $end
$var wire 1 ^! C2M $end
$var wire 1 `! H $end
$var wire 1 D% stall $end
$var wire 1 Y addr [15] $end
$var wire 1 Z addr [14] $end
$var wire 1 [ addr [13] $end
$var wire 1 \ addr [12] $end
$var wire 1 ] addr [11] $end
$var wire 1 ^ addr [10] $end
$var wire 1 _ addr [9] $end
$var wire 1 ` addr [8] $end
$var wire 1 a addr [7] $end
$var wire 1 b addr [6] $end
$var wire 1 c addr [5] $end
$var wire 1 d addr [4] $end
$var wire 1 e addr [3] $end
$var wire 1 f addr [2] $end
$var wire 1 g addr [1] $end
$var wire 1 h addr [0] $end
$var wire 1 <! index [7] $end
$var wire 1 =! index [6] $end
$var wire 1 >! index [5] $end
$var wire 1 ?! index [4] $end
$var wire 1 @! index [3] $end
$var wire 1 A! index [2] $end
$var wire 1 B! index [1] $end
$var wire 1 C! index [0] $end
$var wire 1 D! tag [4] $end
$var wire 1 E! tag [3] $end
$var wire 1 F! tag [2] $end
$var wire 1 G! tag [1] $end
$var wire 1 H! tag [0] $end
$var reg 1 E% offsetsel $end
$var reg 2 F% word [1:0] $end
$var reg 2 G% mem_word [1:0] $end
$var reg 1 H% comp $end
$var reg 1 I% write $end
$var reg 1 J% mem_wr $end
$var reg 1 K% mem_rd $end
$var reg 1 L% done $end
$var reg 1 M% cache_wr $end
$var reg 1 N% stall_out $end
$var reg 1 O% hit_out $end
$var reg 1 P% writesrc $end
$var wire 1 ;! enable $end
$var reg 1 Q% error $end
$var wire 1 R% state [3] $end
$var wire 1 S% state [2] $end
$var wire 1 T% state [1] $end
$var wire 1 U% state [0] $end
$var reg 4 V% nextstate [3:0] $end
$var wire 1 W% garbage [11] $end
$var wire 1 X% garbage [10] $end
$var wire 1 Y% garbage [9] $end
$var wire 1 Z% garbage [8] $end
$var wire 1 [% garbage [7] $end
$var wire 1 \% garbage [6] $end
$var wire 1 ]% garbage [5] $end
$var wire 1 ^% garbage [4] $end
$var wire 1 _% garbage [3] $end
$var wire 1 `% garbage [2] $end
$var wire 1 a% garbage [1] $end
$var wire 1 b% garbage [0] $end
$scope module statereg $end
$var wire 1 W% readdata [15] $end
$var wire 1 X% readdata [14] $end
$var wire 1 Y% readdata [13] $end
$var wire 1 Z% readdata [12] $end
$var wire 1 [% readdata [11] $end
$var wire 1 \% readdata [10] $end
$var wire 1 ]% readdata [9] $end
$var wire 1 ^% readdata [8] $end
$var wire 1 _% readdata [7] $end
$var wire 1 `% readdata [6] $end
$var wire 1 a% readdata [5] $end
$var wire 1 b% readdata [4] $end
$var wire 1 R% readdata [3] $end
$var wire 1 S% readdata [2] $end
$var wire 1 T% readdata [1] $end
$var wire 1 U% readdata [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 c% write $end
$var wire 1 d% writedata [15] $end
$var wire 1 e% writedata [14] $end
$var wire 1 f% writedata [13] $end
$var wire 1 g% writedata [12] $end
$var wire 1 h% writedata [11] $end
$var wire 1 i% writedata [10] $end
$var wire 1 j% writedata [9] $end
$var wire 1 k% writedata [8] $end
$var wire 1 l% writedata [7] $end
$var wire 1 m% writedata [6] $end
$var wire 1 n% writedata [5] $end
$var wire 1 o% writedata [4] $end
$var wire 1 p% writedata [3] $end
$var wire 1 q% writedata [2] $end
$var wire 1 r% writedata [1] $end
$var wire 1 s% writedata [0] $end
$scope module r0 $end
$var wire 1 U% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 s% writedata $end
$var wire 1 c% write $end
$var wire 1 t% actualWrite $end
$scope module data $end
$var wire 1 U% q $end
$var wire 1 t% d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u% state $end
$upscope $end
$upscope $end
$scope module r1 $end
$var wire 1 T% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 r% writedata $end
$var wire 1 c% write $end
$var wire 1 v% actualWrite $end
$scope module data $end
$var wire 1 T% q $end
$var wire 1 v% d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w% state $end
$upscope $end
$upscope $end
$scope module r2 $end
$var wire 1 S% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 q% writedata $end
$var wire 1 c% write $end
$var wire 1 x% actualWrite $end
$scope module data $end
$var wire 1 S% q $end
$var wire 1 x% d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y% state $end
$upscope $end
$upscope $end
$scope module r3 $end
$var wire 1 R% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 p% writedata $end
$var wire 1 c% write $end
$var wire 1 z% actualWrite $end
$scope module data $end
$var wire 1 R% q $end
$var wire 1 z% d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {% state $end
$upscope $end
$upscope $end
$scope module r4 $end
$var wire 1 b% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 o% writedata $end
$var wire 1 c% write $end
$var wire 1 |% actualWrite $end
$scope module data $end
$var wire 1 b% q $end
$var wire 1 |% d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }% state $end
$upscope $end
$upscope $end
$scope module r5 $end
$var wire 1 a% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 n% writedata $end
$var wire 1 c% write $end
$var wire 1 ~% actualWrite $end
$scope module data $end
$var wire 1 a% q $end
$var wire 1 ~% d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !& state $end
$upscope $end
$upscope $end
$scope module r6 $end
$var wire 1 `% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 m% writedata $end
$var wire 1 c% write $end
$var wire 1 "& actualWrite $end
$scope module data $end
$var wire 1 `% q $end
$var wire 1 "& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #& state $end
$upscope $end
$upscope $end
$scope module r7 $end
$var wire 1 _% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 l% writedata $end
$var wire 1 c% write $end
$var wire 1 $& actualWrite $end
$scope module data $end
$var wire 1 _% q $end
$var wire 1 $& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %& state $end
$upscope $end
$upscope $end
$scope module r8 $end
$var wire 1 ^% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 k% writedata $end
$var wire 1 c% write $end
$var wire 1 && actualWrite $end
$scope module data $end
$var wire 1 ^% q $end
$var wire 1 && d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '& state $end
$upscope $end
$upscope $end
$scope module r9 $end
$var wire 1 ]% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 j% writedata $end
$var wire 1 c% write $end
$var wire 1 (& actualWrite $end
$scope module data $end
$var wire 1 ]% q $end
$var wire 1 (& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )& state $end
$upscope $end
$upscope $end
$scope module r10 $end
$var wire 1 \% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 i% writedata $end
$var wire 1 c% write $end
$var wire 1 *& actualWrite $end
$scope module data $end
$var wire 1 \% q $end
$var wire 1 *& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +& state $end
$upscope $end
$upscope $end
$scope module r11 $end
$var wire 1 [% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 h% writedata $end
$var wire 1 c% write $end
$var wire 1 ,& actualWrite $end
$scope module data $end
$var wire 1 [% q $end
$var wire 1 ,& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -& state $end
$upscope $end
$upscope $end
$scope module r12 $end
$var wire 1 Z% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 g% writedata $end
$var wire 1 c% write $end
$var wire 1 .& actualWrite $end
$scope module data $end
$var wire 1 Z% q $end
$var wire 1 .& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /& state $end
$upscope $end
$upscope $end
$scope module r13 $end
$var wire 1 Y% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 f% writedata $end
$var wire 1 c% write $end
$var wire 1 0& actualWrite $end
$scope module data $end
$var wire 1 Y% q $end
$var wire 1 0& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1& state $end
$upscope $end
$upscope $end
$scope module r14 $end
$var wire 1 X% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 e% writedata $end
$var wire 1 c% write $end
$var wire 1 2& actualWrite $end
$scope module data $end
$var wire 1 X% q $end
$var wire 1 2& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3& state $end
$upscope $end
$upscope $end
$scope module r15 $end
$var wire 1 W% readdata $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 d% writedata $end
$var wire 1 c% write $end
$var wire 1 4& actualWrite $end
$scope module data $end
$var wire 1 W% q $end
$var wire 1 4& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5& state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem0 $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 6& addr [15] $end
$var wire 1 7& addr [14] $end
$var wire 1 8& addr [13] $end
$var wire 1 9& addr [12] $end
$var wire 1 :& addr [11] $end
$var wire 1 <! addr [10] $end
$var wire 1 =! addr [9] $end
$var wire 1 >! addr [8] $end
$var wire 1 ?! addr [7] $end
$var wire 1 @! addr [6] $end
$var wire 1 A! addr [5] $end
$var wire 1 B! addr [4] $end
$var wire 1 C! addr [3] $end
$var wire 1 Q! addr [2] $end
$var wire 1 R! addr [1] $end
$var wire 1 ;& addr [0] $end
$var wire 1 ! data_in [15] $end
$var wire 1 " data_in [14] $end
$var wire 1 # data_in [13] $end
$var wire 1 $ data_in [12] $end
$var wire 1 % data_in [11] $end
$var wire 1 & data_in [10] $end
$var wire 1 ' data_in [9] $end
$var wire 1 ( data_in [8] $end
$var wire 1 ) data_in [7] $end
$var wire 1 * data_in [6] $end
$var wire 1 + data_in [5] $end
$var wire 1 , data_in [4] $end
$var wire 1 - data_in [3] $end
$var wire 1 . data_in [2] $end
$var wire 1 / data_in [1] $end
$var wire 1 0 data_in [0] $end
$var wire 1 W! wr $end
$var wire 1 V! rd $end
$var wire 1 *! data_out [15] $end
$var wire 1 +! data_out [14] $end
$var wire 1 ,! data_out [13] $end
$var wire 1 -! data_out [12] $end
$var wire 1 .! data_out [11] $end
$var wire 1 /! data_out [10] $end
$var wire 1 0! data_out [9] $end
$var wire 1 1! data_out [8] $end
$var wire 1 2! data_out [7] $end
$var wire 1 3! data_out [6] $end
$var wire 1 4! data_out [5] $end
$var wire 1 5! data_out [4] $end
$var wire 1 6! data_out [3] $end
$var wire 1 7! data_out [2] $end
$var wire 1 8! data_out [1] $end
$var wire 1 9! data_out [0] $end
$var wire 1 Y! stall $end
$var wire 1 %! busy [3] $end
$var wire 1 &! busy [2] $end
$var wire 1 '! busy [1] $end
$var wire 1 (! busy [0] $end
$var wire 1 | err $end
$var wire 1 <& data0_out [15] $end
$var wire 1 =& data0_out [14] $end
$var wire 1 >& data0_out [13] $end
$var wire 1 ?& data0_out [12] $end
$var wire 1 @& data0_out [11] $end
$var wire 1 A& data0_out [10] $end
$var wire 1 B& data0_out [9] $end
$var wire 1 C& data0_out [8] $end
$var wire 1 D& data0_out [7] $end
$var wire 1 E& data0_out [6] $end
$var wire 1 F& data0_out [5] $end
$var wire 1 G& data0_out [4] $end
$var wire 1 H& data0_out [3] $end
$var wire 1 I& data0_out [2] $end
$var wire 1 J& data0_out [1] $end
$var wire 1 K& data0_out [0] $end
$var wire 1 L& data1_out [15] $end
$var wire 1 M& data1_out [14] $end
$var wire 1 N& data1_out [13] $end
$var wire 1 O& data1_out [12] $end
$var wire 1 P& data1_out [11] $end
$var wire 1 Q& data1_out [10] $end
$var wire 1 R& data1_out [9] $end
$var wire 1 S& data1_out [8] $end
$var wire 1 T& data1_out [7] $end
$var wire 1 U& data1_out [6] $end
$var wire 1 V& data1_out [5] $end
$var wire 1 W& data1_out [4] $end
$var wire 1 X& data1_out [3] $end
$var wire 1 Y& data1_out [2] $end
$var wire 1 Z& data1_out [1] $end
$var wire 1 [& data1_out [0] $end
$var wire 1 \& data2_out [15] $end
$var wire 1 ]& data2_out [14] $end
$var wire 1 ^& data2_out [13] $end
$var wire 1 _& data2_out [12] $end
$var wire 1 `& data2_out [11] $end
$var wire 1 a& data2_out [10] $end
$var wire 1 b& data2_out [9] $end
$var wire 1 c& data2_out [8] $end
$var wire 1 d& data2_out [7] $end
$var wire 1 e& data2_out [6] $end
$var wire 1 f& data2_out [5] $end
$var wire 1 g& data2_out [4] $end
$var wire 1 h& data2_out [3] $end
$var wire 1 i& data2_out [2] $end
$var wire 1 j& data2_out [1] $end
$var wire 1 k& data2_out [0] $end
$var wire 1 l& data3_out [15] $end
$var wire 1 m& data3_out [14] $end
$var wire 1 n& data3_out [13] $end
$var wire 1 o& data3_out [12] $end
$var wire 1 p& data3_out [11] $end
$var wire 1 q& data3_out [10] $end
$var wire 1 r& data3_out [9] $end
$var wire 1 s& data3_out [8] $end
$var wire 1 t& data3_out [7] $end
$var wire 1 u& data3_out [6] $end
$var wire 1 v& data3_out [5] $end
$var wire 1 w& data3_out [4] $end
$var wire 1 x& data3_out [3] $end
$var wire 1 y& data3_out [2] $end
$var wire 1 z& data3_out [1] $end
$var wire 1 {& data3_out [0] $end
$var wire 1 |& sel0 $end
$var wire 1 }& sel1 $end
$var wire 1 ~& sel2 $end
$var wire 1 !' sel3 $end
$var wire 1 "' en [3] $end
$var wire 1 #' en [2] $end
$var wire 1 $' en [1] $end
$var wire 1 %' en [0] $end
$var wire 1 &' err0 $end
$var wire 1 '' err1 $end
$var wire 1 (' err2 $end
$var wire 1 )' err3 $end
$var wire 1 *' bsy0 [3] $end
$var wire 1 +' bsy0 [2] $end
$var wire 1 ,' bsy0 [1] $end
$var wire 1 -' bsy0 [0] $end
$var wire 1 .' bsy1 [3] $end
$var wire 1 /' bsy1 [2] $end
$var wire 1 0' bsy1 [1] $end
$var wire 1 1' bsy1 [0] $end
$var wire 1 2' bsy2 [3] $end
$var wire 1 3' bsy2 [2] $end
$var wire 1 4' bsy2 [1] $end
$var wire 1 5' bsy2 [0] $end
$scope module m0 $end
$var wire 1 <& data_out [15] $end
$var wire 1 =& data_out [14] $end
$var wire 1 >& data_out [13] $end
$var wire 1 ?& data_out [12] $end
$var wire 1 @& data_out [11] $end
$var wire 1 A& data_out [10] $end
$var wire 1 B& data_out [9] $end
$var wire 1 C& data_out [8] $end
$var wire 1 D& data_out [7] $end
$var wire 1 E& data_out [6] $end
$var wire 1 F& data_out [5] $end
$var wire 1 G& data_out [4] $end
$var wire 1 H& data_out [3] $end
$var wire 1 I& data_out [2] $end
$var wire 1 J& data_out [1] $end
$var wire 1 K& data_out [0] $end
$var wire 1 &' err $end
$var wire 1 ! data_in [15] $end
$var wire 1 " data_in [14] $end
$var wire 1 # data_in [13] $end
$var wire 1 $ data_in [12] $end
$var wire 1 % data_in [11] $end
$var wire 1 & data_in [10] $end
$var wire 1 ' data_in [9] $end
$var wire 1 ( data_in [8] $end
$var wire 1 ) data_in [7] $end
$var wire 1 * data_in [6] $end
$var wire 1 + data_in [5] $end
$var wire 1 , data_in [4] $end
$var wire 1 - data_in [3] $end
$var wire 1 . data_in [2] $end
$var wire 1 / data_in [1] $end
$var wire 1 0 data_in [0] $end
$var wire 1 6& addr [12] $end
$var wire 1 7& addr [11] $end
$var wire 1 8& addr [10] $end
$var wire 1 9& addr [9] $end
$var wire 1 :& addr [8] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 W! wr $end
$var wire 1 V! rd $end
$var wire 1 %' enable $end
$var wire 1 { create_dump $end
$var wire 1 6' bank_id [1] $end
$var wire 1 7' bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8' loaded $end
$var reg 16 9' largest [15:0] $end
$var wire 1 :' addr_1c [13] $end
$var wire 1 ;' addr_1c [12] $end
$var wire 1 <' addr_1c [11] $end
$var wire 1 =' addr_1c [10] $end
$var wire 1 >' addr_1c [9] $end
$var wire 1 ?' addr_1c [8] $end
$var wire 1 @' addr_1c [7] $end
$var wire 1 A' addr_1c [6] $end
$var wire 1 B' addr_1c [5] $end
$var wire 1 C' addr_1c [4] $end
$var wire 1 D' addr_1c [3] $end
$var wire 1 E' addr_1c [2] $end
$var wire 1 F' addr_1c [1] $end
$var wire 1 G' addr_1c [0] $end
$var wire 1 H' data_in_1c [15] $end
$var wire 1 I' data_in_1c [14] $end
$var wire 1 J' data_in_1c [13] $end
$var wire 1 K' data_in_1c [12] $end
$var wire 1 L' data_in_1c [11] $end
$var wire 1 M' data_in_1c [10] $end
$var wire 1 N' data_in_1c [9] $end
$var wire 1 O' data_in_1c [8] $end
$var wire 1 P' data_in_1c [7] $end
$var wire 1 Q' data_in_1c [6] $end
$var wire 1 R' data_in_1c [5] $end
$var wire 1 S' data_in_1c [4] $end
$var wire 1 T' data_in_1c [3] $end
$var wire 1 U' data_in_1c [2] $end
$var wire 1 V' data_in_1c [1] $end
$var wire 1 W' data_in_1c [0] $end
$var integer 32 X' mcd $end
$var integer 32 Y' largeout $end
$var integer 32 Z' i $end
$var wire 1 [' rd0 $end
$var wire 1 \' wr0 $end
$var wire 1 ]' rd1 $end
$var wire 1 ^' wr1 $end
$var wire 1 _' data_out_1c [15] $end
$var wire 1 `' data_out_1c [14] $end
$var wire 1 a' data_out_1c [13] $end
$var wire 1 b' data_out_1c [12] $end
$var wire 1 c' data_out_1c [11] $end
$var wire 1 d' data_out_1c [10] $end
$var wire 1 e' data_out_1c [9] $end
$var wire 1 f' data_out_1c [8] $end
$var wire 1 g' data_out_1c [7] $end
$var wire 1 h' data_out_1c [6] $end
$var wire 1 i' data_out_1c [5] $end
$var wire 1 j' data_out_1c [4] $end
$var wire 1 k' data_out_1c [3] $end
$var wire 1 l' data_out_1c [2] $end
$var wire 1 m' data_out_1c [1] $end
$var wire 1 n' data_out_1c [0] $end
$var wire 1 o' rd2 $end
$var wire 1 p' wr2 $end
$var wire 1 q' rd3 $end
$var wire 1 r' wr3 $end
$var wire 1 s' busy $end
$scope module ff0 $end
$var wire 1 ]' q $end
$var wire 1 [' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t' state $end
$upscope $end
$scope module ff1 $end
$var wire 1 ^' q $end
$var wire 1 \' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u' state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 ;' q $end
$var wire 1 6& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v' state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 <' q $end
$var wire 1 7& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w' state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 =' q $end
$var wire 1 8& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x' state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 >' q $end
$var wire 1 9& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y' state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 ?' q $end
$var wire 1 :& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z' state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 @' q $end
$var wire 1 <! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {' state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 A' q $end
$var wire 1 =! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |' state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 B' q $end
$var wire 1 >! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }' state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 C' q $end
$var wire 1 ?! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~' state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 D' q $end
$var wire 1 @! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !( state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 E' q $end
$var wire 1 A! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "( state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 F' q $end
$var wire 1 B! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #( state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 G' q $end
$var wire 1 C! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $( state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 H' q $end
$var wire 1 ! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %( state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 I' q $end
$var wire 1 " d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &( state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 J' q $end
$var wire 1 # d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '( state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 K' q $end
$var wire 1 $ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (( state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 L' q $end
$var wire 1 % d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )( state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 M' q $end
$var wire 1 & d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *( state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 N' q $end
$var wire 1 ' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +( state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 O' q $end
$var wire 1 ( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,( state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 P' q $end
$var wire 1 ) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -( state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 Q' q $end
$var wire 1 * d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .( state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 R' q $end
$var wire 1 + d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /( state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 S' q $end
$var wire 1 , d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0( state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 T' q $end
$var wire 1 - d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1( state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 U' q $end
$var wire 1 . d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2( state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 V' q $end
$var wire 1 / d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3( state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 W' q $end
$var wire 1 0 d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4( state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 <& q $end
$var wire 1 _' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5( state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 =& q $end
$var wire 1 `' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6( state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 >& q $end
$var wire 1 a' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7( state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 ?& q $end
$var wire 1 b' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8( state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 @& q $end
$var wire 1 c' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9( state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 A& q $end
$var wire 1 d' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :( state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 B& q $end
$var wire 1 e' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;( state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 C& q $end
$var wire 1 f' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <( state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 D& q $end
$var wire 1 g' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =( state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 E& q $end
$var wire 1 h' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >( state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 F& q $end
$var wire 1 i' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?( state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 G& q $end
$var wire 1 j' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @( state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 H& q $end
$var wire 1 k' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A( state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 I& q $end
$var wire 1 l' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B( state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 J& q $end
$var wire 1 m' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C( state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 K& q $end
$var wire 1 n' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D( state $end
$upscope $end
$scope module ff2 $end
$var wire 1 o' q $end
$var wire 1 ]' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E( state $end
$upscope $end
$scope module ff3 $end
$var wire 1 p' q $end
$var wire 1 ^' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F( state $end
$upscope $end
$scope module ff4 $end
$var wire 1 q' q $end
$var wire 1 o' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G( state $end
$upscope $end
$scope module ff5 $end
$var wire 1 r' q $end
$var wire 1 p' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H( state $end
$upscope $end
$upscope $end
$scope module m1 $end
$var wire 1 L& data_out [15] $end
$var wire 1 M& data_out [14] $end
$var wire 1 N& data_out [13] $end
$var wire 1 O& data_out [12] $end
$var wire 1 P& data_out [11] $end
$var wire 1 Q& data_out [10] $end
$var wire 1 R& data_out [9] $end
$var wire 1 S& data_out [8] $end
$var wire 1 T& data_out [7] $end
$var wire 1 U& data_out [6] $end
$var wire 1 V& data_out [5] $end
$var wire 1 W& data_out [4] $end
$var wire 1 X& data_out [3] $end
$var wire 1 Y& data_out [2] $end
$var wire 1 Z& data_out [1] $end
$var wire 1 [& data_out [0] $end
$var wire 1 '' err $end
$var wire 1 ! data_in [15] $end
$var wire 1 " data_in [14] $end
$var wire 1 # data_in [13] $end
$var wire 1 $ data_in [12] $end
$var wire 1 % data_in [11] $end
$var wire 1 & data_in [10] $end
$var wire 1 ' data_in [9] $end
$var wire 1 ( data_in [8] $end
$var wire 1 ) data_in [7] $end
$var wire 1 * data_in [6] $end
$var wire 1 + data_in [5] $end
$var wire 1 , data_in [4] $end
$var wire 1 - data_in [3] $end
$var wire 1 . data_in [2] $end
$var wire 1 / data_in [1] $end
$var wire 1 0 data_in [0] $end
$var wire 1 6& addr [12] $end
$var wire 1 7& addr [11] $end
$var wire 1 8& addr [10] $end
$var wire 1 9& addr [9] $end
$var wire 1 :& addr [8] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 W! wr $end
$var wire 1 V! rd $end
$var wire 1 $' enable $end
$var wire 1 { create_dump $end
$var wire 1 I( bank_id [1] $end
$var wire 1 J( bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K( loaded $end
$var reg 16 L( largest [15:0] $end
$var wire 1 M( addr_1c [13] $end
$var wire 1 N( addr_1c [12] $end
$var wire 1 O( addr_1c [11] $end
$var wire 1 P( addr_1c [10] $end
$var wire 1 Q( addr_1c [9] $end
$var wire 1 R( addr_1c [8] $end
$var wire 1 S( addr_1c [7] $end
$var wire 1 T( addr_1c [6] $end
$var wire 1 U( addr_1c [5] $end
$var wire 1 V( addr_1c [4] $end
$var wire 1 W( addr_1c [3] $end
$var wire 1 X( addr_1c [2] $end
$var wire 1 Y( addr_1c [1] $end
$var wire 1 Z( addr_1c [0] $end
$var wire 1 [( data_in_1c [15] $end
$var wire 1 \( data_in_1c [14] $end
$var wire 1 ]( data_in_1c [13] $end
$var wire 1 ^( data_in_1c [12] $end
$var wire 1 _( data_in_1c [11] $end
$var wire 1 `( data_in_1c [10] $end
$var wire 1 a( data_in_1c [9] $end
$var wire 1 b( data_in_1c [8] $end
$var wire 1 c( data_in_1c [7] $end
$var wire 1 d( data_in_1c [6] $end
$var wire 1 e( data_in_1c [5] $end
$var wire 1 f( data_in_1c [4] $end
$var wire 1 g( data_in_1c [3] $end
$var wire 1 h( data_in_1c [2] $end
$var wire 1 i( data_in_1c [1] $end
$var wire 1 j( data_in_1c [0] $end
$var integer 32 k( mcd $end
$var integer 32 l( largeout $end
$var integer 32 m( i $end
$var wire 1 n( rd0 $end
$var wire 1 o( wr0 $end
$var wire 1 p( rd1 $end
$var wire 1 q( wr1 $end
$var wire 1 r( data_out_1c [15] $end
$var wire 1 s( data_out_1c [14] $end
$var wire 1 t( data_out_1c [13] $end
$var wire 1 u( data_out_1c [12] $end
$var wire 1 v( data_out_1c [11] $end
$var wire 1 w( data_out_1c [10] $end
$var wire 1 x( data_out_1c [9] $end
$var wire 1 y( data_out_1c [8] $end
$var wire 1 z( data_out_1c [7] $end
$var wire 1 {( data_out_1c [6] $end
$var wire 1 |( data_out_1c [5] $end
$var wire 1 }( data_out_1c [4] $end
$var wire 1 ~( data_out_1c [3] $end
$var wire 1 !) data_out_1c [2] $end
$var wire 1 ") data_out_1c [1] $end
$var wire 1 #) data_out_1c [0] $end
$var wire 1 $) rd2 $end
$var wire 1 %) wr2 $end
$var wire 1 &) rd3 $end
$var wire 1 ') wr3 $end
$var wire 1 () busy $end
$scope module ff0 $end
$var wire 1 p( q $end
$var wire 1 n( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )) state $end
$upscope $end
$scope module ff1 $end
$var wire 1 q( q $end
$var wire 1 o( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *) state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 N( q $end
$var wire 1 6& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +) state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 O( q $end
$var wire 1 7& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,) state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 P( q $end
$var wire 1 8& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -) state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 Q( q $end
$var wire 1 9& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .) state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 R( q $end
$var wire 1 :& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /) state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 S( q $end
$var wire 1 <! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0) state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 T( q $end
$var wire 1 =! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1) state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 U( q $end
$var wire 1 >! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2) state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 V( q $end
$var wire 1 ?! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3) state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 W( q $end
$var wire 1 @! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4) state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 X( q $end
$var wire 1 A! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5) state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 Y( q $end
$var wire 1 B! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6) state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 Z( q $end
$var wire 1 C! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7) state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 [( q $end
$var wire 1 ! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8) state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 \( q $end
$var wire 1 " d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9) state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 ]( q $end
$var wire 1 # d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :) state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 ^( q $end
$var wire 1 $ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;) state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 _( q $end
$var wire 1 % d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <) state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 `( q $end
$var wire 1 & d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =) state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 a( q $end
$var wire 1 ' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >) state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 b( q $end
$var wire 1 ( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?) state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 c( q $end
$var wire 1 ) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @) state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 d( q $end
$var wire 1 * d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A) state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 e( q $end
$var wire 1 + d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B) state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 f( q $end
$var wire 1 , d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C) state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 g( q $end
$var wire 1 - d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D) state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 h( q $end
$var wire 1 . d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E) state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 i( q $end
$var wire 1 / d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F) state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 j( q $end
$var wire 1 0 d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G) state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 L& q $end
$var wire 1 r( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H) state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 M& q $end
$var wire 1 s( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I) state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 N& q $end
$var wire 1 t( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J) state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 O& q $end
$var wire 1 u( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K) state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 P& q $end
$var wire 1 v( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L) state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 Q& q $end
$var wire 1 w( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M) state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 R& q $end
$var wire 1 x( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N) state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 S& q $end
$var wire 1 y( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O) state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 T& q $end
$var wire 1 z( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P) state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 U& q $end
$var wire 1 {( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q) state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 V& q $end
$var wire 1 |( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R) state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 W& q $end
$var wire 1 }( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S) state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 X& q $end
$var wire 1 ~( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T) state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 Y& q $end
$var wire 1 !) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U) state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 Z& q $end
$var wire 1 ") d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V) state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 [& q $end
$var wire 1 #) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W) state $end
$upscope $end
$scope module ff2 $end
$var wire 1 $) q $end
$var wire 1 p( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X) state $end
$upscope $end
$scope module ff3 $end
$var wire 1 %) q $end
$var wire 1 q( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y) state $end
$upscope $end
$scope module ff4 $end
$var wire 1 &) q $end
$var wire 1 $) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z) state $end
$upscope $end
$scope module ff5 $end
$var wire 1 ') q $end
$var wire 1 %) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [) state $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 1 \& data_out [15] $end
$var wire 1 ]& data_out [14] $end
$var wire 1 ^& data_out [13] $end
$var wire 1 _& data_out [12] $end
$var wire 1 `& data_out [11] $end
$var wire 1 a& data_out [10] $end
$var wire 1 b& data_out [9] $end
$var wire 1 c& data_out [8] $end
$var wire 1 d& data_out [7] $end
$var wire 1 e& data_out [6] $end
$var wire 1 f& data_out [5] $end
$var wire 1 g& data_out [4] $end
$var wire 1 h& data_out [3] $end
$var wire 1 i& data_out [2] $end
$var wire 1 j& data_out [1] $end
$var wire 1 k& data_out [0] $end
$var wire 1 (' err $end
$var wire 1 ! data_in [15] $end
$var wire 1 " data_in [14] $end
$var wire 1 # data_in [13] $end
$var wire 1 $ data_in [12] $end
$var wire 1 % data_in [11] $end
$var wire 1 & data_in [10] $end
$var wire 1 ' data_in [9] $end
$var wire 1 ( data_in [8] $end
$var wire 1 ) data_in [7] $end
$var wire 1 * data_in [6] $end
$var wire 1 + data_in [5] $end
$var wire 1 , data_in [4] $end
$var wire 1 - data_in [3] $end
$var wire 1 . data_in [2] $end
$var wire 1 / data_in [1] $end
$var wire 1 0 data_in [0] $end
$var wire 1 6& addr [12] $end
$var wire 1 7& addr [11] $end
$var wire 1 8& addr [10] $end
$var wire 1 9& addr [9] $end
$var wire 1 :& addr [8] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 W! wr $end
$var wire 1 V! rd $end
$var wire 1 #' enable $end
$var wire 1 { create_dump $end
$var wire 1 \) bank_id [1] $end
$var wire 1 ]) bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^) loaded $end
$var reg 16 _) largest [15:0] $end
$var wire 1 `) addr_1c [13] $end
$var wire 1 a) addr_1c [12] $end
$var wire 1 b) addr_1c [11] $end
$var wire 1 c) addr_1c [10] $end
$var wire 1 d) addr_1c [9] $end
$var wire 1 e) addr_1c [8] $end
$var wire 1 f) addr_1c [7] $end
$var wire 1 g) addr_1c [6] $end
$var wire 1 h) addr_1c [5] $end
$var wire 1 i) addr_1c [4] $end
$var wire 1 j) addr_1c [3] $end
$var wire 1 k) addr_1c [2] $end
$var wire 1 l) addr_1c [1] $end
$var wire 1 m) addr_1c [0] $end
$var wire 1 n) data_in_1c [15] $end
$var wire 1 o) data_in_1c [14] $end
$var wire 1 p) data_in_1c [13] $end
$var wire 1 q) data_in_1c [12] $end
$var wire 1 r) data_in_1c [11] $end
$var wire 1 s) data_in_1c [10] $end
$var wire 1 t) data_in_1c [9] $end
$var wire 1 u) data_in_1c [8] $end
$var wire 1 v) data_in_1c [7] $end
$var wire 1 w) data_in_1c [6] $end
$var wire 1 x) data_in_1c [5] $end
$var wire 1 y) data_in_1c [4] $end
$var wire 1 z) data_in_1c [3] $end
$var wire 1 {) data_in_1c [2] $end
$var wire 1 |) data_in_1c [1] $end
$var wire 1 }) data_in_1c [0] $end
$var integer 32 ~) mcd $end
$var integer 32 !* largeout $end
$var integer 32 "* i $end
$var wire 1 #* rd0 $end
$var wire 1 $* wr0 $end
$var wire 1 %* rd1 $end
$var wire 1 &* wr1 $end
$var wire 1 '* data_out_1c [15] $end
$var wire 1 (* data_out_1c [14] $end
$var wire 1 )* data_out_1c [13] $end
$var wire 1 ** data_out_1c [12] $end
$var wire 1 +* data_out_1c [11] $end
$var wire 1 ,* data_out_1c [10] $end
$var wire 1 -* data_out_1c [9] $end
$var wire 1 .* data_out_1c [8] $end
$var wire 1 /* data_out_1c [7] $end
$var wire 1 0* data_out_1c [6] $end
$var wire 1 1* data_out_1c [5] $end
$var wire 1 2* data_out_1c [4] $end
$var wire 1 3* data_out_1c [3] $end
$var wire 1 4* data_out_1c [2] $end
$var wire 1 5* data_out_1c [1] $end
$var wire 1 6* data_out_1c [0] $end
$var wire 1 7* rd2 $end
$var wire 1 8* wr2 $end
$var wire 1 9* rd3 $end
$var wire 1 :* wr3 $end
$var wire 1 ;* busy $end
$scope module ff0 $end
$var wire 1 %* q $end
$var wire 1 #* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <* state $end
$upscope $end
$scope module ff1 $end
$var wire 1 &* q $end
$var wire 1 $* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =* state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 a) q $end
$var wire 1 6& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >* state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 b) q $end
$var wire 1 7& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?* state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 c) q $end
$var wire 1 8& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @* state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 d) q $end
$var wire 1 9& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A* state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 e) q $end
$var wire 1 :& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B* state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 f) q $end
$var wire 1 <! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C* state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 g) q $end
$var wire 1 =! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D* state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 h) q $end
$var wire 1 >! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E* state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 i) q $end
$var wire 1 ?! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F* state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 j) q $end
$var wire 1 @! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G* state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 k) q $end
$var wire 1 A! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H* state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 l) q $end
$var wire 1 B! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I* state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 m) q $end
$var wire 1 C! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J* state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 n) q $end
$var wire 1 ! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K* state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 o) q $end
$var wire 1 " d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L* state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 p) q $end
$var wire 1 # d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M* state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 q) q $end
$var wire 1 $ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N* state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 r) q $end
$var wire 1 % d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O* state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 s) q $end
$var wire 1 & d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P* state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 t) q $end
$var wire 1 ' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q* state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 u) q $end
$var wire 1 ( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R* state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 v) q $end
$var wire 1 ) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S* state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 w) q $end
$var wire 1 * d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T* state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 x) q $end
$var wire 1 + d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U* state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 y) q $end
$var wire 1 , d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V* state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 z) q $end
$var wire 1 - d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W* state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 {) q $end
$var wire 1 . d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X* state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 |) q $end
$var wire 1 / d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y* state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 }) q $end
$var wire 1 0 d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z* state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 \& q $end
$var wire 1 '* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [* state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 ]& q $end
$var wire 1 (* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \* state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 ^& q $end
$var wire 1 )* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]* state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 _& q $end
$var wire 1 ** d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^* state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 `& q $end
$var wire 1 +* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _* state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 a& q $end
$var wire 1 ,* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `* state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 b& q $end
$var wire 1 -* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a* state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 c& q $end
$var wire 1 .* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b* state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 d& q $end
$var wire 1 /* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c* state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 e& q $end
$var wire 1 0* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d* state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 f& q $end
$var wire 1 1* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e* state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 g& q $end
$var wire 1 2* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f* state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 h& q $end
$var wire 1 3* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g* state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 i& q $end
$var wire 1 4* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h* state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 j& q $end
$var wire 1 5* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i* state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 k& q $end
$var wire 1 6* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j* state $end
$upscope $end
$scope module ff2 $end
$var wire 1 7* q $end
$var wire 1 %* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k* state $end
$upscope $end
$scope module ff3 $end
$var wire 1 8* q $end
$var wire 1 &* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l* state $end
$upscope $end
$scope module ff4 $end
$var wire 1 9* q $end
$var wire 1 7* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m* state $end
$upscope $end
$scope module ff5 $end
$var wire 1 :* q $end
$var wire 1 8* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n* state $end
$upscope $end
$upscope $end
$scope module m3 $end
$var wire 1 l& data_out [15] $end
$var wire 1 m& data_out [14] $end
$var wire 1 n& data_out [13] $end
$var wire 1 o& data_out [12] $end
$var wire 1 p& data_out [11] $end
$var wire 1 q& data_out [10] $end
$var wire 1 r& data_out [9] $end
$var wire 1 s& data_out [8] $end
$var wire 1 t& data_out [7] $end
$var wire 1 u& data_out [6] $end
$var wire 1 v& data_out [5] $end
$var wire 1 w& data_out [4] $end
$var wire 1 x& data_out [3] $end
$var wire 1 y& data_out [2] $end
$var wire 1 z& data_out [1] $end
$var wire 1 {& data_out [0] $end
$var wire 1 )' err $end
$var wire 1 ! data_in [15] $end
$var wire 1 " data_in [14] $end
$var wire 1 # data_in [13] $end
$var wire 1 $ data_in [12] $end
$var wire 1 % data_in [11] $end
$var wire 1 & data_in [10] $end
$var wire 1 ' data_in [9] $end
$var wire 1 ( data_in [8] $end
$var wire 1 ) data_in [7] $end
$var wire 1 * data_in [6] $end
$var wire 1 + data_in [5] $end
$var wire 1 , data_in [4] $end
$var wire 1 - data_in [3] $end
$var wire 1 . data_in [2] $end
$var wire 1 / data_in [1] $end
$var wire 1 0 data_in [0] $end
$var wire 1 6& addr [12] $end
$var wire 1 7& addr [11] $end
$var wire 1 8& addr [10] $end
$var wire 1 9& addr [9] $end
$var wire 1 :& addr [8] $end
$var wire 1 <! addr [7] $end
$var wire 1 =! addr [6] $end
$var wire 1 >! addr [5] $end
$var wire 1 ?! addr [4] $end
$var wire 1 @! addr [3] $end
$var wire 1 A! addr [2] $end
$var wire 1 B! addr [1] $end
$var wire 1 C! addr [0] $end
$var wire 1 W! wr $end
$var wire 1 V! rd $end
$var wire 1 "' enable $end
$var wire 1 { create_dump $end
$var wire 1 o* bank_id [1] $end
$var wire 1 p* bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q* loaded $end
$var reg 16 r* largest [15:0] $end
$var wire 1 s* addr_1c [13] $end
$var wire 1 t* addr_1c [12] $end
$var wire 1 u* addr_1c [11] $end
$var wire 1 v* addr_1c [10] $end
$var wire 1 w* addr_1c [9] $end
$var wire 1 x* addr_1c [8] $end
$var wire 1 y* addr_1c [7] $end
$var wire 1 z* addr_1c [6] $end
$var wire 1 {* addr_1c [5] $end
$var wire 1 |* addr_1c [4] $end
$var wire 1 }* addr_1c [3] $end
$var wire 1 ~* addr_1c [2] $end
$var wire 1 !+ addr_1c [1] $end
$var wire 1 "+ addr_1c [0] $end
$var wire 1 #+ data_in_1c [15] $end
$var wire 1 $+ data_in_1c [14] $end
$var wire 1 %+ data_in_1c [13] $end
$var wire 1 &+ data_in_1c [12] $end
$var wire 1 '+ data_in_1c [11] $end
$var wire 1 (+ data_in_1c [10] $end
$var wire 1 )+ data_in_1c [9] $end
$var wire 1 *+ data_in_1c [8] $end
$var wire 1 ++ data_in_1c [7] $end
$var wire 1 ,+ data_in_1c [6] $end
$var wire 1 -+ data_in_1c [5] $end
$var wire 1 .+ data_in_1c [4] $end
$var wire 1 /+ data_in_1c [3] $end
$var wire 1 0+ data_in_1c [2] $end
$var wire 1 1+ data_in_1c [1] $end
$var wire 1 2+ data_in_1c [0] $end
$var integer 32 3+ mcd $end
$var integer 32 4+ largeout $end
$var integer 32 5+ i $end
$var wire 1 6+ rd0 $end
$var wire 1 7+ wr0 $end
$var wire 1 8+ rd1 $end
$var wire 1 9+ wr1 $end
$var wire 1 :+ data_out_1c [15] $end
$var wire 1 ;+ data_out_1c [14] $end
$var wire 1 <+ data_out_1c [13] $end
$var wire 1 =+ data_out_1c [12] $end
$var wire 1 >+ data_out_1c [11] $end
$var wire 1 ?+ data_out_1c [10] $end
$var wire 1 @+ data_out_1c [9] $end
$var wire 1 A+ data_out_1c [8] $end
$var wire 1 B+ data_out_1c [7] $end
$var wire 1 C+ data_out_1c [6] $end
$var wire 1 D+ data_out_1c [5] $end
$var wire 1 E+ data_out_1c [4] $end
$var wire 1 F+ data_out_1c [3] $end
$var wire 1 G+ data_out_1c [2] $end
$var wire 1 H+ data_out_1c [1] $end
$var wire 1 I+ data_out_1c [0] $end
$var wire 1 J+ rd2 $end
$var wire 1 K+ wr2 $end
$var wire 1 L+ rd3 $end
$var wire 1 M+ wr3 $end
$var wire 1 N+ busy $end
$scope module ff0 $end
$var wire 1 8+ q $end
$var wire 1 6+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O+ state $end
$upscope $end
$scope module ff1 $end
$var wire 1 9+ q $end
$var wire 1 7+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P+ state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 t* q $end
$var wire 1 6& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q+ state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 u* q $end
$var wire 1 7& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R+ state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 v* q $end
$var wire 1 8& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S+ state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 w* q $end
$var wire 1 9& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T+ state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 x* q $end
$var wire 1 :& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U+ state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 y* q $end
$var wire 1 <! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V+ state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 z* q $end
$var wire 1 =! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W+ state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 {* q $end
$var wire 1 >! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X+ state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 |* q $end
$var wire 1 ?! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y+ state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 }* q $end
$var wire 1 @! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z+ state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 ~* q $end
$var wire 1 A! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [+ state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 !+ q $end
$var wire 1 B! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \+ state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 "+ q $end
$var wire 1 C! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]+ state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 #+ q $end
$var wire 1 ! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^+ state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 $+ q $end
$var wire 1 " d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _+ state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 %+ q $end
$var wire 1 # d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `+ state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 &+ q $end
$var wire 1 $ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a+ state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 '+ q $end
$var wire 1 % d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b+ state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 (+ q $end
$var wire 1 & d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c+ state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 )+ q $end
$var wire 1 ' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d+ state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 *+ q $end
$var wire 1 ( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e+ state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 ++ q $end
$var wire 1 ) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f+ state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 ,+ q $end
$var wire 1 * d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g+ state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 -+ q $end
$var wire 1 + d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h+ state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 .+ q $end
$var wire 1 , d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i+ state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 /+ q $end
$var wire 1 - d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j+ state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 0+ q $end
$var wire 1 . d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k+ state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 1+ q $end
$var wire 1 / d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l+ state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 2+ q $end
$var wire 1 0 d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m+ state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 l& q $end
$var wire 1 :+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n+ state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 m& q $end
$var wire 1 ;+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o+ state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 n& q $end
$var wire 1 <+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p+ state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 o& q $end
$var wire 1 =+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q+ state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 p& q $end
$var wire 1 >+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r+ state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 q& q $end
$var wire 1 ?+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s+ state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 r& q $end
$var wire 1 @+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t+ state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 s& q $end
$var wire 1 A+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u+ state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 t& q $end
$var wire 1 B+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v+ state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 u& q $end
$var wire 1 C+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w+ state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 v& q $end
$var wire 1 D+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x+ state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 w& q $end
$var wire 1 E+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y+ state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 x& q $end
$var wire 1 F+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z+ state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 y& q $end
$var wire 1 G+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {+ state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 z& q $end
$var wire 1 H+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |+ state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 {& q $end
$var wire 1 I+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }+ state $end
$upscope $end
$scope module ff2 $end
$var wire 1 J+ q $end
$var wire 1 8+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~+ state $end
$upscope $end
$scope module ff3 $end
$var wire 1 K+ q $end
$var wire 1 9+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !, state $end
$upscope $end
$scope module ff4 $end
$var wire 1 L+ q $end
$var wire 1 J+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ", state $end
$upscope $end
$scope module ff5 $end
$var wire 1 M+ q $end
$var wire 1 K+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #, state $end
$upscope $end
$upscope $end
$scope module b0[3] $end
$var wire 1 *' q $end
$var wire 1 "' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $, state $end
$upscope $end
$scope module b0[2] $end
$var wire 1 +' q $end
$var wire 1 #' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %, state $end
$upscope $end
$scope module b0[1] $end
$var wire 1 ,' q $end
$var wire 1 $' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &, state $end
$upscope $end
$scope module b0[0] $end
$var wire 1 -' q $end
$var wire 1 %' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ', state $end
$upscope $end
$scope module b1[3] $end
$var wire 1 .' q $end
$var wire 1 *' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (, state $end
$upscope $end
$scope module b1[2] $end
$var wire 1 /' q $end
$var wire 1 +' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ), state $end
$upscope $end
$scope module b1[1] $end
$var wire 1 0' q $end
$var wire 1 ,' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *, state $end
$upscope $end
$scope module b1[0] $end
$var wire 1 1' q $end
$var wire 1 -' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +, state $end
$upscope $end
$scope module b2[3] $end
$var wire 1 2' q $end
$var wire 1 .' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,, state $end
$upscope $end
$scope module b2[2] $end
$var wire 1 3' q $end
$var wire 1 /' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -, state $end
$upscope $end
$scope module b2[1] $end
$var wire 1 4' q $end
$var wire 1 0' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ., state $end
$upscope $end
$scope module b2[0] $end
$var wire 1 5' q $end
$var wire 1 1' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /, state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module ref $end
$var wire 1 0, Addr [15] $end
$var wire 1 1, Addr [14] $end
$var wire 1 2, Addr [13] $end
$var wire 1 3, Addr [12] $end
$var wire 1 4, Addr [11] $end
$var wire 1 5, Addr [10] $end
$var wire 1 6, Addr [9] $end
$var wire 1 7, Addr [8] $end
$var wire 1 8, Addr [7] $end
$var wire 1 9, Addr [6] $end
$var wire 1 :, Addr [5] $end
$var wire 1 ;, Addr [4] $end
$var wire 1 <, Addr [3] $end
$var wire 1 =, Addr [2] $end
$var wire 1 >, Addr [1] $end
$var wire 1 ?, Addr [0] $end
$var wire 1 @, DataIn [15] $end
$var wire 1 A, DataIn [14] $end
$var wire 1 B, DataIn [13] $end
$var wire 1 C, DataIn [12] $end
$var wire 1 D, DataIn [11] $end
$var wire 1 E, DataIn [10] $end
$var wire 1 F, DataIn [9] $end
$var wire 1 G, DataIn [8] $end
$var wire 1 H, DataIn [7] $end
$var wire 1 I, DataIn [6] $end
$var wire 1 J, DataIn [5] $end
$var wire 1 K, DataIn [4] $end
$var wire 1 L, DataIn [3] $end
$var wire 1 M, DataIn [2] $end
$var wire 1 N, DataIn [1] $end
$var wire 1 O, DataIn [0] $end
$var wire 1 P, Rd $end
$var wire 1 Q, Wr $end
$var wire 1 R, clk $end
$var wire 1 S, rst $end
$var reg 16 T, DataOut [15:0] $end
$var wire 1 K Done $end
$var wire 1 L Stall $end
$var wire 1 M CacheHit $end
$var reg 1 U, loaded $end
$var integer 32 V, i $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 X
b1 $!
b1 a!
b1 N"
b10000 [#
b10000 ^#
b10000 a#
b10000 d#
b101 g#
b1 j#
b11 o#
b10000 |$
b10000 !%
b10000 $%
b10000 '%
b101 *%
b1 -%
b0 5%
b1 6%
b10 7%
b11 8%
b100 9%
b101 :%
b110 ;%
b111 <%
b1000 =%
b1001 >%
b1010 ?%
b1011 @%
b1100 A%
b1101 B%
b1110 C%
b0 3
b0 4
05
06
b110110101111001010111110111010001110010011000010110001101100101011100110010111100101111011011010110010101101101001101000010111001100001011001000110010001110010 7
0N
b0 O
b0 P
b0 Q
1R
b0 S
b10000000000000000000000000000110 T
bx U
bx V
bx W
bx T,
1U,
b10000000000000000 V,
0/,
0.,
0-,
0,,
0+,
0*,
0),
0(,
0',
0&,
0%,
0$,
1q*
b1 r*
bx 3+
bx 4+
b100000000000001 5+
0#,
0",
0!,
0~+
0}+
0|+
0{+
0z+
0y+
0x+
0w+
0v+
0u+
0t+
0s+
0r+
0q+
0p+
0o+
0n+
0m+
0l+
0k+
0j+
0i+
0h+
0g+
0f+
0e+
0d+
0c+
0b+
0a+
0`+
0_+
0^+
0]+
0\+
0[+
0Z+
0Y+
0X+
0W+
0V+
0U+
0T+
0S+
0R+
0Q+
0P+
0O+
1^)
b1 _)
bx ~)
bx !*
b100000000000001 "*
0n*
0m*
0l*
0k*
0j*
0i*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
0a*
0`*
0_*
0^*
0]*
0\*
0[*
0Z*
0Y*
0X*
0W*
0V*
0U*
0T*
0S*
0R*
0Q*
0P*
0O*
0N*
0M*
0L*
0K*
0J*
0I*
0H*
0G*
0F*
0E*
0D*
0C*
0B*
0A*
0@*
0?*
0>*
0=*
0<*
1K(
b1 L(
bx k(
bx l(
b100000000000001 m(
0[)
0Z)
0Y)
0X)
0W)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0@)
0?)
0>)
0=)
0<)
0;)
0:)
09)
08)
07)
06)
05)
04)
03)
02)
01)
00)
0/)
0.)
0-)
0,)
0+)
0*)
0))
18'
b1 9'
bx X'
bx Y'
b100000000000001 Z'
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
xE%
bx F%
bx G%
xH%
xI%
xJ%
xK%
xL%
xM%
xN%
xO%
xP%
1Q%
bx V%
05&
03&
01&
0/&
0-&
0+&
0)&
0'&
0%&
0#&
0!&
0}%
0{%
0y%
0w%
0u%
04%
bx 0%
b100000000 1%
bx .%
b100000000 /%
bx +%
b100000000 ,%
bx (%
b100000000 )%
bx %%
b100000000 &%
bx "%
b100000000 #%
bx }$
b100000000 ~$
bx m#
b100000000 n#
bx k#
b100000000 l#
bx h#
b100000000 i#
bx e#
b100000000 f#
bx b#
b100000000 c#
bx _#
b100000000 `#
bx \#
b100000000 ]#
1!!
1"!
b1 #!
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
x1
x2
18
19
x:
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
0K
0L
0M
0|
1}
1~
x(!
x'!
x&!
x%!
x)!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
0:!
1;!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0H!
0G!
0F!
0E!
0D!
0M!
0L!
0K!
0J!
0I!
0N!
xP!
xO!
xR!
xQ!
xS!
xT!
xU!
xV!
xW!
xX!
0Y!
0Z!
0]!
0\!
0[!
0^!
1_!
0`!
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x{&
xz&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
x|&
x}&
x~&
x!'
x%'
x$'
x#'
x"'
0&'
0''
0('
0)'
x-'
x,'
x+'
x*'
x1'
x0'
x/'
x.'
x5'
x4'
x3'
x2'
x"+
x!+
x~*
x}*
x|*
x{*
xz*
xy*
xx*
xw*
xv*
xu*
xt*
0s*
x2+
x1+
x0+
x/+
x.+
x-+
x,+
x++
x*+
x)+
x(+
x'+
x&+
x%+
x$+
x#+
06+
07+
x8+
x9+
xI+
xH+
xG+
xF+
xE+
xD+
xC+
xB+
xA+
x@+
x?+
x>+
x=+
x<+
x;+
x:+
xJ+
xK+
xL+
xM+
xN+
xm)
xl)
xk)
xj)
xi)
xh)
xg)
xf)
xe)
xd)
xc)
xb)
xa)
0`)
x})
x|)
x{)
xz)
xy)
xx)
xw)
xv)
xu)
xt)
xs)
xr)
xq)
xp)
xo)
xn)
0#*
0$*
x%*
x&*
x6*
x5*
x4*
x3*
x2*
x1*
x0*
x/*
x.*
x-*
x,*
x+*
x**
x)*
x(*
x'*
x7*
x8*
x9*
x:*
x;*
xZ(
xY(
xX(
xW(
xV(
xU(
xT(
xS(
xR(
xQ(
xP(
xO(
xN(
0M(
xj(
xi(
xh(
xg(
xf(
xe(
xd(
xc(
xb(
xa(
x`(
x_(
x^(
x](
x\(
x[(
0n(
0o(
xp(
xq(
x#)
x")
x!)
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
x$)
x%)
x&)
x')
x()
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
0:'
xW'
xV'
xU'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xI'
xH'
0['
0\'
x]'
x^'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x_'
xo'
xp'
xq'
xr'
xs'
xU%
xT%
xS%
xR%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
04&
02&
00&
0.&
0,&
0*&
0(&
0&&
0$&
0"&
0~%
0|%
xz%
xx%
xv%
xt%
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0("
x)"
0*"
0/"
0."
0-"
0,"
0+"
00"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
0A"
0B"
0C"
0H"
0G"
0F"
0E"
0D"
0I"
0J"
xK"
xL"
xM"
x3%
0t#
0s#
0r#
1q#
1p#
1y#
0x#
0w#
1v#
1u#
0~#
1}#
0|#
1{#
1z#
1%$
1$$
0#$
1"$
1!$
0*$
0)$
1($
1'$
1&$
1/$
0.$
1-$
1,$
1+$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0p$
1q$
0r$
0s$
0t$
0u$
0v$
0w$
0x$
xy$
0z$
0{$
0S"
0R"
0Q"
1P"
0O"
1X"
0W"
0V"
1U"
0T"
0]"
1\"
0["
1Z"
0Y"
1b"
1a"
0`"
1_"
0^"
0g"
0f"
1e"
1d"
0c"
1l"
0k"
1j"
1i"
0h"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0O#
1P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
xX#
0Y#
0Z#
0Q,
0P,
0O,
0N,
0M,
0L,
0K,
0J,
0I,
0H,
0G,
0F,
0E,
0D,
0C,
0B,
0A,
0@,
0?,
0>,
0=,
0<,
0;,
0:,
09,
08,
07,
06,
05,
04,
03,
02,
01,
00,
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0:&
09&
08&
07&
06&
0;&
0D%
1u!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xc!
xb!
0d!
x2%
1c%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
xs%
xr%
xq%
xp%
1p*
1o*
0])
1\)
1J(
0I(
07'
06'
1R,
1S,
$end
#1
02'
03'
04'
05'
0.'
0/'
00'
01'
0*'
0+'
0,'
0-'
0M+
0L+
0K+
0J+
0l&
0m&
0n&
0o&
0p&
0q&
0r&
0s&
0t&
0u&
0v&
0w&
0x&
0y&
0z&
0{&
0#+
0$+
0%+
0&+
0'+
0(+
0)+
0*+
0++
0,+
0-+
0.+
0/+
00+
01+
02+
0t*
0u*
0v*
0w*
0x*
0y*
0z*
0{*
0|*
0}*
0~*
0!+
0"+
09+
08+
0N+
0:*
09*
08*
07*
0\&
0]&
0^&
0_&
0`&
0a&
0b&
0c&
0d&
0e&
0f&
0g&
0h&
0i&
0j&
0k&
0n)
0o)
0p)
0q)
0r)
0s)
0t)
0u)
0v)
0w)
0x)
0y)
0z)
0{)
0|)
0})
0a)
0b)
0c)
0d)
0e)
0f)
0g)
0h)
0i)
0j)
0k)
0l)
0m)
0&*
0%*
0;*
0')
0&)
0%)
0$)
0L&
0M&
0N&
0O&
0P&
0Q&
0R&
0S&
0T&
0U&
0V&
0W&
0X&
0Y&
0Z&
0[&
0[(
0\(
0](
0^(
0_(
0`(
0a(
0b(
0c(
0d(
0e(
0f(
0g(
0h(
0i(
0j(
0N(
0O(
0P(
0Q(
0R(
0S(
0T(
0U(
0V(
0W(
0X(
0Y(
0Z(
0q(
0p(
0()
0r'
0q'
0p'
0o'
0<&
0=&
0>&
0?&
0@&
0A&
0B&
0C&
0D&
0E&
0F&
0G&
0H&
0I&
0J&
0K&
0H'
0I'
0J'
0K'
0L'
0M'
0N'
0O'
0P'
0Q'
0R'
0S'
0T'
0U'
0V'
0W'
0;'
0<'
0='
0>'
0?'
0@'
0A'
0B'
0C'
0D'
0E'
0F'
0G'
0^'
0]'
0s'
0W%
0X%
0Y%
0Z%
0[%
0\%
0]%
0^%
0_%
0`%
0a%
0b%
0R%
0S%
0T%
0U%
0M"
12%
03%
0E%
b0 F%
b0 G%
1H%
0P%
0Q%
b0 V%
0J%
0K%
0L%
0M%
0N%
1O%
0n'
0m'
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0a'
0`'
0_'
0#)
0")
0!)
0~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
06*
05*
04*
03*
02*
01*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0(*
0'*
0I+
0H+
0G+
0F+
0E+
0D+
0C+
0B+
0A+
0@+
0?+
0>+
0=+
0<+
0;+
0:+
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0(!
0'!
0&!
0%!
0U!
0P!
0O!
0R!
0Q!
1)!
1y$
1X#
0T!
0s%
0r%
0q%
0p%
0W!
0V!
01
0X!
02
1:
0K"
0L"
0%'
0$'
0#'
0"'
0z%
0x%
0v%
0t%
1|&
0}&
0~&
0!'
0c!
0b!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
#50
0!!
08
0R,
0}
#100
1!!
b10 #!
18
1R,
1}
b0 ]#
b1 ]#
b10 ]#
b11 ]#
b100 ]#
b101 ]#
b110 ]#
b111 ]#
b1000 ]#
b1001 ]#
b1010 ]#
b1011 ]#
b1100 ]#
b1101 ]#
b1110 ]#
b1111 ]#
b10000 ]#
b10001 ]#
b10010 ]#
b10011 ]#
b10100 ]#
b10101 ]#
b10110 ]#
b10111 ]#
b11000 ]#
b11001 ]#
b11010 ]#
b11011 ]#
b11100 ]#
b11101 ]#
b11110 ]#
b11111 ]#
b100000 ]#
b100001 ]#
b100010 ]#
b100011 ]#
b100100 ]#
b100101 ]#
b100110 ]#
b100111 ]#
b101000 ]#
b101001 ]#
b101010 ]#
b101011 ]#
b101100 ]#
b101101 ]#
b101110 ]#
b101111 ]#
b110000 ]#
b110001 ]#
b110010 ]#
b110011 ]#
b110100 ]#
b110101 ]#
b110110 ]#
b110111 ]#
b111000 ]#
b111001 ]#
b111010 ]#
b111011 ]#
b111100 ]#
b111101 ]#
b111110 ]#
b111111 ]#
b1000000 ]#
b1000001 ]#
b1000010 ]#
b1000011 ]#
b1000100 ]#
b1000101 ]#
b1000110 ]#
b1000111 ]#
b1001000 ]#
b1001001 ]#
b1001010 ]#
b1001011 ]#
b1001100 ]#
b1001101 ]#
b1001110 ]#
b1001111 ]#
b1010000 ]#
b1010001 ]#
b1010010 ]#
b1010011 ]#
b1010100 ]#
b1010101 ]#
b1010110 ]#
b1010111 ]#
b1011000 ]#
b1011001 ]#
b1011010 ]#
b1011011 ]#
b1011100 ]#
b1011101 ]#
b1011110 ]#
b1011111 ]#
b1100000 ]#
b1100001 ]#
b1100010 ]#
b1100011 ]#
b1100100 ]#
b1100101 ]#
b1100110 ]#
b1100111 ]#
b1101000 ]#
b1101001 ]#
b1101010 ]#
b1101011 ]#
b1101100 ]#
b1101101 ]#
b1101110 ]#
b1101111 ]#
b1110000 ]#
b1110001 ]#
b1110010 ]#
b1110011 ]#
b1110100 ]#
b1110101 ]#
b1110110 ]#
b1110111 ]#
b1111000 ]#
b1111001 ]#
b1111010 ]#
b1111011 ]#
b1111100 ]#
b1111101 ]#
b1111110 ]#
b1111111 ]#
b10000000 ]#
b10000001 ]#
b10000010 ]#
b10000011 ]#
b10000100 ]#
b10000101 ]#
b10000110 ]#
b10000111 ]#
b10001000 ]#
b10001001 ]#
b10001010 ]#
b10001011 ]#
b10001100 ]#
b10001101 ]#
b10001110 ]#
b10001111 ]#
b10010000 ]#
b10010001 ]#
b10010010 ]#
b10010011 ]#
b10010100 ]#
b10010101 ]#
b10010110 ]#
b10010111 ]#
b10011000 ]#
b10011001 ]#
b10011010 ]#
b10011011 ]#
b10011100 ]#
b10011101 ]#
b10011110 ]#
b10011111 ]#
b10100000 ]#
b10100001 ]#
b10100010 ]#
b10100011 ]#
b10100100 ]#
b10100101 ]#
b10100110 ]#
b10100111 ]#
b10101000 ]#
b10101001 ]#
b10101010 ]#
b10101011 ]#
b10101100 ]#
b10101101 ]#
b10101110 ]#
b10101111 ]#
b10110000 ]#
b10110001 ]#
b10110010 ]#
b10110011 ]#
b10110100 ]#
b10110101 ]#
b10110110 ]#
b10110111 ]#
b10111000 ]#
b10111001 ]#
b10111010 ]#
b10111011 ]#
b10111100 ]#
b10111101 ]#
b10111110 ]#
b10111111 ]#
b11000000 ]#
b11000001 ]#
b11000010 ]#
b11000011 ]#
b11000100 ]#
b11000101 ]#
b11000110 ]#
b11000111 ]#
b11001000 ]#
b11001001 ]#
b11001010 ]#
b11001011 ]#
b11001100 ]#
b11001101 ]#
b11001110 ]#
b11001111 ]#
b11010000 ]#
b11010001 ]#
b11010010 ]#
b11010011 ]#
b11010100 ]#
b11010101 ]#
b11010110 ]#
b11010111 ]#
b11011000 ]#
b11011001 ]#
b11011010 ]#
b11011011 ]#
b11011100 ]#
b11011101 ]#
b11011110 ]#
b11011111 ]#
b11100000 ]#
b11100001 ]#
b11100010 ]#
b11100011 ]#
b11100100 ]#
b11100101 ]#
b11100110 ]#
b11100111 ]#
b11101000 ]#
b11101001 ]#
b11101010 ]#
b11101011 ]#
b11101100 ]#
b11101101 ]#
b11101110 ]#
b11101111 ]#
b11110000 ]#
b11110001 ]#
b11110010 ]#
b11110011 ]#
b11110100 ]#
b11110101 ]#
b11110110 ]#
b11110111 ]#
b11111000 ]#
b11111001 ]#
b11111010 ]#
b11111011 ]#
b11111100 ]#
b11111101 ]#
b11111110 ]#
b11111111 ]#
b100000000 ]#
b0 `#
b1 `#
b10 `#
b11 `#
b100 `#
b101 `#
b110 `#
b111 `#
b1000 `#
b1001 `#
b1010 `#
b1011 `#
b1100 `#
b1101 `#
b1110 `#
b1111 `#
b10000 `#
b10001 `#
b10010 `#
b10011 `#
b10100 `#
b10101 `#
b10110 `#
b10111 `#
b11000 `#
b11001 `#
b11010 `#
b11011 `#
b11100 `#
b11101 `#
b11110 `#
b11111 `#
b100000 `#
b100001 `#
b100010 `#
b100011 `#
b100100 `#
b100101 `#
b100110 `#
b100111 `#
b101000 `#
b101001 `#
b101010 `#
b101011 `#
b101100 `#
b101101 `#
b101110 `#
b101111 `#
b110000 `#
b110001 `#
b110010 `#
b110011 `#
b110100 `#
b110101 `#
b110110 `#
b110111 `#
b111000 `#
b111001 `#
b111010 `#
b111011 `#
b111100 `#
b111101 `#
b111110 `#
b111111 `#
b1000000 `#
b1000001 `#
b1000010 `#
b1000011 `#
b1000100 `#
b1000101 `#
b1000110 `#
b1000111 `#
b1001000 `#
b1001001 `#
b1001010 `#
b1001011 `#
b1001100 `#
b1001101 `#
b1001110 `#
b1001111 `#
b1010000 `#
b1010001 `#
b1010010 `#
b1010011 `#
b1010100 `#
b1010101 `#
b1010110 `#
b1010111 `#
b1011000 `#
b1011001 `#
b1011010 `#
b1011011 `#
b1011100 `#
b1011101 `#
b1011110 `#
b1011111 `#
b1100000 `#
b1100001 `#
b1100010 `#
b1100011 `#
b1100100 `#
b1100101 `#
b1100110 `#
b1100111 `#
b1101000 `#
b1101001 `#
b1101010 `#
b1101011 `#
b1101100 `#
b1101101 `#
b1101110 `#
b1101111 `#
b1110000 `#
b1110001 `#
b1110010 `#
b1110011 `#
b1110100 `#
b1110101 `#
b1110110 `#
b1110111 `#
b1111000 `#
b1111001 `#
b1111010 `#
b1111011 `#
b1111100 `#
b1111101 `#
b1111110 `#
b1111111 `#
b10000000 `#
b10000001 `#
b10000010 `#
b10000011 `#
b10000100 `#
b10000101 `#
b10000110 `#
b10000111 `#
b10001000 `#
b10001001 `#
b10001010 `#
b10001011 `#
b10001100 `#
b10001101 `#
b10001110 `#
b10001111 `#
b10010000 `#
b10010001 `#
b10010010 `#
b10010011 `#
b10010100 `#
b10010101 `#
b10010110 `#
b10010111 `#
b10011000 `#
b10011001 `#
b10011010 `#
b10011011 `#
b10011100 `#
b10011101 `#
b10011110 `#
b10011111 `#
b10100000 `#
b10100001 `#
b10100010 `#
b10100011 `#
b10100100 `#
b10100101 `#
b10100110 `#
b10100111 `#
b10101000 `#
b10101001 `#
b10101010 `#
b10101011 `#
b10101100 `#
b10101101 `#
b10101110 `#
b10101111 `#
b10110000 `#
b10110001 `#
b10110010 `#
b10110011 `#
b10110100 `#
b10110101 `#
b10110110 `#
b10110111 `#
b10111000 `#
b10111001 `#
b10111010 `#
b10111011 `#
b10111100 `#
b10111101 `#
b10111110 `#
b10111111 `#
b11000000 `#
b11000001 `#
b11000010 `#
b11000011 `#
b11000100 `#
b11000101 `#
b11000110 `#
b11000111 `#
b11001000 `#
b11001001 `#
b11001010 `#
b11001011 `#
b11001100 `#
b11001101 `#
b11001110 `#
b11001111 `#
b11010000 `#
b11010001 `#
b11010010 `#
b11010011 `#
b11010100 `#
b11010101 `#
b11010110 `#
b11010111 `#
b11011000 `#
b11011001 `#
b11011010 `#
b11011011 `#
b11011100 `#
b11011101 `#
b11011110 `#
b11011111 `#
b11100000 `#
b11100001 `#
b11100010 `#
b11100011 `#
b11100100 `#
b11100101 `#
b11100110 `#
b11100111 `#
b11101000 `#
b11101001 `#
b11101010 `#
b11101011 `#
b11101100 `#
b11101101 `#
b11101110 `#
b11101111 `#
b11110000 `#
b11110001 `#
b11110010 `#
b11110011 `#
b11110100 `#
b11110101 `#
b11110110 `#
b11110111 `#
b11111000 `#
b11111001 `#
b11111010 `#
b11111011 `#
b11111100 `#
b11111101 `#
b11111110 `#
b11111111 `#
b100000000 `#
b0 c#
b1 c#
b10 c#
b11 c#
b100 c#
b101 c#
b110 c#
b111 c#
b1000 c#
b1001 c#
b1010 c#
b1011 c#
b1100 c#
b1101 c#
b1110 c#
b1111 c#
b10000 c#
b10001 c#
b10010 c#
b10011 c#
b10100 c#
b10101 c#
b10110 c#
b10111 c#
b11000 c#
b11001 c#
b11010 c#
b11011 c#
b11100 c#
b11101 c#
b11110 c#
b11111 c#
b100000 c#
b100001 c#
b100010 c#
b100011 c#
b100100 c#
b100101 c#
b100110 c#
b100111 c#
b101000 c#
b101001 c#
b101010 c#
b101011 c#
b101100 c#
b101101 c#
b101110 c#
b101111 c#
b110000 c#
b110001 c#
b110010 c#
b110011 c#
b110100 c#
b110101 c#
b110110 c#
b110111 c#
b111000 c#
b111001 c#
b111010 c#
b111011 c#
b111100 c#
b111101 c#
b111110 c#
b111111 c#
b1000000 c#
b1000001 c#
b1000010 c#
b1000011 c#
b1000100 c#
b1000101 c#
b1000110 c#
b1000111 c#
b1001000 c#
b1001001 c#
b1001010 c#
b1001011 c#
b1001100 c#
b1001101 c#
b1001110 c#
b1001111 c#
b1010000 c#
b1010001 c#
b1010010 c#
b1010011 c#
b1010100 c#
b1010101 c#
b1010110 c#
b1010111 c#
b1011000 c#
b1011001 c#
b1011010 c#
b1011011 c#
b1011100 c#
b1011101 c#
b1011110 c#
b1011111 c#
b1100000 c#
b1100001 c#
b1100010 c#
b1100011 c#
b1100100 c#
b1100101 c#
b1100110 c#
b1100111 c#
b1101000 c#
b1101001 c#
b1101010 c#
b1101011 c#
b1101100 c#
b1101101 c#
b1101110 c#
b1101111 c#
b1110000 c#
b1110001 c#
b1110010 c#
b1110011 c#
b1110100 c#
b1110101 c#
b1110110 c#
b1110111 c#
b1111000 c#
b1111001 c#
b1111010 c#
b1111011 c#
b1111100 c#
b1111101 c#
b1111110 c#
b1111111 c#
b10000000 c#
b10000001 c#
b10000010 c#
b10000011 c#
b10000100 c#
b10000101 c#
b10000110 c#
b10000111 c#
b10001000 c#
b10001001 c#
b10001010 c#
b10001011 c#
b10001100 c#
b10001101 c#
b10001110 c#
b10001111 c#
b10010000 c#
b10010001 c#
b10010010 c#
b10010011 c#
b10010100 c#
b10010101 c#
b10010110 c#
b10010111 c#
b10011000 c#
b10011001 c#
b10011010 c#
b10011011 c#
b10011100 c#
b10011101 c#
b10011110 c#
b10011111 c#
b10100000 c#
b10100001 c#
b10100010 c#
b10100011 c#
b10100100 c#
b10100101 c#
b10100110 c#
b10100111 c#
b10101000 c#
b10101001 c#
b10101010 c#
b10101011 c#
b10101100 c#
b10101101 c#
b10101110 c#
b10101111 c#
b10110000 c#
b10110001 c#
b10110010 c#
b10110011 c#
b10110100 c#
b10110101 c#
b10110110 c#
b10110111 c#
b10111000 c#
b10111001 c#
b10111010 c#
b10111011 c#
b10111100 c#
b10111101 c#
b10111110 c#
b10111111 c#
b11000000 c#
b11000001 c#
b11000010 c#
b11000011 c#
b11000100 c#
b11000101 c#
b11000110 c#
b11000111 c#
b11001000 c#
b11001001 c#
b11001010 c#
b11001011 c#
b11001100 c#
b11001101 c#
b11001110 c#
b11001111 c#
b11010000 c#
b11010001 c#
b11010010 c#
b11010011 c#
b11010100 c#
b11010101 c#
b11010110 c#
b11010111 c#
b11011000 c#
b11011001 c#
b11011010 c#
b11011011 c#
b11011100 c#
b11011101 c#
b11011110 c#
b11011111 c#
b11100000 c#
b11100001 c#
b11100010 c#
b11100011 c#
b11100100 c#
b11100101 c#
b11100110 c#
b11100111 c#
b11101000 c#
b11101001 c#
b11101010 c#
b11101011 c#
b11101100 c#
b11101101 c#
b11101110 c#
b11101111 c#
b11110000 c#
b11110001 c#
b11110010 c#
b11110011 c#
b11110100 c#
b11110101 c#
b11110110 c#
b11110111 c#
b11111000 c#
b11111001 c#
b11111010 c#
b11111011 c#
b11111100 c#
b11111101 c#
b11111110 c#
b11111111 c#
b100000000 c#
b0 f#
b1 f#
b10 f#
b11 f#
b100 f#
b101 f#
b110 f#
b111 f#
b1000 f#
b1001 f#
b1010 f#
b1011 f#
b1100 f#
b1101 f#
b1110 f#
b1111 f#
b10000 f#
b10001 f#
b10010 f#
b10011 f#
b10100 f#
b10101 f#
b10110 f#
b10111 f#
b11000 f#
b11001 f#
b11010 f#
b11011 f#
b11100 f#
b11101 f#
b11110 f#
b11111 f#
b100000 f#
b100001 f#
b100010 f#
b100011 f#
b100100 f#
b100101 f#
b100110 f#
b100111 f#
b101000 f#
b101001 f#
b101010 f#
b101011 f#
b101100 f#
b101101 f#
b101110 f#
b101111 f#
b110000 f#
b110001 f#
b110010 f#
b110011 f#
b110100 f#
b110101 f#
b110110 f#
b110111 f#
b111000 f#
b111001 f#
b111010 f#
b111011 f#
b111100 f#
b111101 f#
b111110 f#
b111111 f#
b1000000 f#
b1000001 f#
b1000010 f#
b1000011 f#
b1000100 f#
b1000101 f#
b1000110 f#
b1000111 f#
b1001000 f#
b1001001 f#
b1001010 f#
b1001011 f#
b1001100 f#
b1001101 f#
b1001110 f#
b1001111 f#
b1010000 f#
b1010001 f#
b1010010 f#
b1010011 f#
b1010100 f#
b1010101 f#
b1010110 f#
b1010111 f#
b1011000 f#
b1011001 f#
b1011010 f#
b1011011 f#
b1011100 f#
b1011101 f#
b1011110 f#
b1011111 f#
b1100000 f#
b1100001 f#
b1100010 f#
b1100011 f#
b1100100 f#
b1100101 f#
b1100110 f#
b1100111 f#
b1101000 f#
b1101001 f#
b1101010 f#
b1101011 f#
b1101100 f#
b1101101 f#
b1101110 f#
b1101111 f#
b1110000 f#
b1110001 f#
b1110010 f#
b1110011 f#
b1110100 f#
b1110101 f#
b1110110 f#
b1110111 f#
b1111000 f#
b1111001 f#
b1111010 f#
b1111011 f#
b1111100 f#
b1111101 f#
b1111110 f#
b1111111 f#
b10000000 f#
b10000001 f#
b10000010 f#
b10000011 f#
b10000100 f#
b10000101 f#
b10000110 f#
b10000111 f#
b10001000 f#
b10001001 f#
b10001010 f#
b10001011 f#
b10001100 f#
b10001101 f#
b10001110 f#
b10001111 f#
b10010000 f#
b10010001 f#
b10010010 f#
b10010011 f#
b10010100 f#
b10010101 f#
b10010110 f#
b10010111 f#
b10011000 f#
b10011001 f#
b10011010 f#
b10011011 f#
b10011100 f#
b10011101 f#
b10011110 f#
b10011111 f#
b10100000 f#
b10100001 f#
b10100010 f#
b10100011 f#
b10100100 f#
b10100101 f#
b10100110 f#
b10100111 f#
b10101000 f#
b10101001 f#
b10101010 f#
b10101011 f#
b10101100 f#
b10101101 f#
b10101110 f#
b10101111 f#
b10110000 f#
b10110001 f#
b10110010 f#
b10110011 f#
b10110100 f#
b10110101 f#
b10110110 f#
b10110111 f#
b10111000 f#
b10111001 f#
b10111010 f#
b10111011 f#
b10111100 f#
b10111101 f#
b10111110 f#
b10111111 f#
b11000000 f#
b11000001 f#
b11000010 f#
b11000011 f#
b11000100 f#
b11000101 f#
b11000110 f#
b11000111 f#
b11001000 f#
b11001001 f#
b11001010 f#
b11001011 f#
b11001100 f#
b11001101 f#
b11001110 f#
b11001111 f#
b11010000 f#
b11010001 f#
b11010010 f#
b11010011 f#
b11010100 f#
b11010101 f#
b11010110 f#
b11010111 f#
b11011000 f#
b11011001 f#
b11011010 f#
b11011011 f#
b11011100 f#
b11011101 f#
b11011110 f#
b11011111 f#
b11100000 f#
b11100001 f#
b11100010 f#
b11100011 f#
b11100100 f#
b11100101 f#
b11100110 f#
b11100111 f#
b11101000 f#
b11101001 f#
b11101010 f#
b11101011 f#
b11101100 f#
b11101101 f#
b11101110 f#
b11101111 f#
b11110000 f#
b11110001 f#
b11110010 f#
b11110011 f#
b11110100 f#
b11110101 f#
b11110110 f#
b11110111 f#
b11111000 f#
b11111001 f#
b11111010 f#
b11111011 f#
b11111100 f#
b11111101 f#
b11111110 f#
b11111111 f#
b100000000 f#
b0 i#
b1 i#
b10 i#
b11 i#
b100 i#
b101 i#
b110 i#
b111 i#
b1000 i#
b1001 i#
b1010 i#
b1011 i#
b1100 i#
b1101 i#
b1110 i#
b1111 i#
b10000 i#
b10001 i#
b10010 i#
b10011 i#
b10100 i#
b10101 i#
b10110 i#
b10111 i#
b11000 i#
b11001 i#
b11010 i#
b11011 i#
b11100 i#
b11101 i#
b11110 i#
b11111 i#
b100000 i#
b100001 i#
b100010 i#
b100011 i#
b100100 i#
b100101 i#
b100110 i#
b100111 i#
b101000 i#
b101001 i#
b101010 i#
b101011 i#
b101100 i#
b101101 i#
b101110 i#
b101111 i#
b110000 i#
b110001 i#
b110010 i#
b110011 i#
b110100 i#
b110101 i#
b110110 i#
b110111 i#
b111000 i#
b111001 i#
b111010 i#
b111011 i#
b111100 i#
b111101 i#
b111110 i#
b111111 i#
b1000000 i#
b1000001 i#
b1000010 i#
b1000011 i#
b1000100 i#
b1000101 i#
b1000110 i#
b1000111 i#
b1001000 i#
b1001001 i#
b1001010 i#
b1001011 i#
b1001100 i#
b1001101 i#
b1001110 i#
b1001111 i#
b1010000 i#
b1010001 i#
b1010010 i#
b1010011 i#
b1010100 i#
b1010101 i#
b1010110 i#
b1010111 i#
b1011000 i#
b1011001 i#
b1011010 i#
b1011011 i#
b1011100 i#
b1011101 i#
b1011110 i#
b1011111 i#
b1100000 i#
b1100001 i#
b1100010 i#
b1100011 i#
b1100100 i#
b1100101 i#
b1100110 i#
b1100111 i#
b1101000 i#
b1101001 i#
b1101010 i#
b1101011 i#
b1101100 i#
b1101101 i#
b1101110 i#
b1101111 i#
b1110000 i#
b1110001 i#
b1110010 i#
b1110011 i#
b1110100 i#
b1110101 i#
b1110110 i#
b1110111 i#
b1111000 i#
b1111001 i#
b1111010 i#
b1111011 i#
b1111100 i#
b1111101 i#
b1111110 i#
b1111111 i#
b10000000 i#
b10000001 i#
b10000010 i#
b10000011 i#
b10000100 i#
b10000101 i#
b10000110 i#
b10000111 i#
b10001000 i#
b10001001 i#
b10001010 i#
b10001011 i#
b10001100 i#
b10001101 i#
b10001110 i#
b10001111 i#
b10010000 i#
b10010001 i#
b10010010 i#
b10010011 i#
b10010100 i#
b10010101 i#
b10010110 i#
b10010111 i#
b10011000 i#
b10011001 i#
b10011010 i#
b10011011 i#
b10011100 i#
b10011101 i#
b10011110 i#
b10011111 i#
b10100000 i#
b10100001 i#
b10100010 i#
b10100011 i#
b10100100 i#
b10100101 i#
b10100110 i#
b10100111 i#
b10101000 i#
b10101001 i#
b10101010 i#
b10101011 i#
b10101100 i#
b10101101 i#
b10101110 i#
b10101111 i#
b10110000 i#
b10110001 i#
b10110010 i#
b10110011 i#
b10110100 i#
b10110101 i#
b10110110 i#
b10110111 i#
b10111000 i#
b10111001 i#
b10111010 i#
b10111011 i#
b10111100 i#
b10111101 i#
b10111110 i#
b10111111 i#
b11000000 i#
b11000001 i#
b11000010 i#
b11000011 i#
b11000100 i#
b11000101 i#
b11000110 i#
b11000111 i#
b11001000 i#
b11001001 i#
b11001010 i#
b11001011 i#
b11001100 i#
b11001101 i#
b11001110 i#
b11001111 i#
b11010000 i#
b11010001 i#
b11010010 i#
b11010011 i#
b11010100 i#
b11010101 i#
b11010110 i#
b11010111 i#
b11011000 i#
b11011001 i#
b11011010 i#
b11011011 i#
b11011100 i#
b11011101 i#
b11011110 i#
b11011111 i#
b11100000 i#
b11100001 i#
b11100010 i#
b11100011 i#
b11100100 i#
b11100101 i#
b11100110 i#
b11100111 i#
b11101000 i#
b11101001 i#
b11101010 i#
b11101011 i#
b11101100 i#
b11101101 i#
b11101110 i#
b11101111 i#
b11110000 i#
b11110001 i#
b11110010 i#
b11110011 i#
b11110100 i#
b11110101 i#
b11110110 i#
b11110111 i#
b11111000 i#
b11111001 i#
b11111010 i#
b11111011 i#
b11111100 i#
b11111101 i#
b11111110 i#
b11111111 i#
b100000000 i#
b0 l#
b1 l#
b10 l#
b11 l#
b100 l#
b101 l#
b110 l#
b111 l#
b1000 l#
b1001 l#
b1010 l#
b1011 l#
b1100 l#
b1101 l#
b1110 l#
b1111 l#
b10000 l#
b10001 l#
b10010 l#
b10011 l#
b10100 l#
b10101 l#
b10110 l#
b10111 l#
b11000 l#
b11001 l#
b11010 l#
b11011 l#
b11100 l#
b11101 l#
b11110 l#
b11111 l#
b100000 l#
b100001 l#
b100010 l#
b100011 l#
b100100 l#
b100101 l#
b100110 l#
b100111 l#
b101000 l#
b101001 l#
b101010 l#
b101011 l#
b101100 l#
b101101 l#
b101110 l#
b101111 l#
b110000 l#
b110001 l#
b110010 l#
b110011 l#
b110100 l#
b110101 l#
b110110 l#
b110111 l#
b111000 l#
b111001 l#
b111010 l#
b111011 l#
b111100 l#
b111101 l#
b111110 l#
b111111 l#
b1000000 l#
b1000001 l#
b1000010 l#
b1000011 l#
b1000100 l#
b1000101 l#
b1000110 l#
b1000111 l#
b1001000 l#
b1001001 l#
b1001010 l#
b1001011 l#
b1001100 l#
b1001101 l#
b1001110 l#
b1001111 l#
b1010000 l#
b1010001 l#
b1010010 l#
b1010011 l#
b1010100 l#
b1010101 l#
b1010110 l#
b1010111 l#
b1011000 l#
b1011001 l#
b1011010 l#
b1011011 l#
b1011100 l#
b1011101 l#
b1011110 l#
b1011111 l#
b1100000 l#
b1100001 l#
b1100010 l#
b1100011 l#
b1100100 l#
b1100101 l#
b1100110 l#
b1100111 l#
b1101000 l#
b1101001 l#
b1101010 l#
b1101011 l#
b1101100 l#
b1101101 l#
b1101110 l#
b1101111 l#
b1110000 l#
b1110001 l#
b1110010 l#
b1110011 l#
b1110100 l#
b1110101 l#
b1110110 l#
b1110111 l#
b1111000 l#
b1111001 l#
b1111010 l#
b1111011 l#
b1111100 l#
b1111101 l#
b1111110 l#
b1111111 l#
b10000000 l#
b10000001 l#
b10000010 l#
b10000011 l#
b10000100 l#
b10000101 l#
b10000110 l#
b10000111 l#
b10001000 l#
b10001001 l#
b10001010 l#
b10001011 l#
b10001100 l#
b10001101 l#
b10001110 l#
b10001111 l#
b10010000 l#
b10010001 l#
b10010010 l#
b10010011 l#
b10010100 l#
b10010101 l#
b10010110 l#
b10010111 l#
b10011000 l#
b10011001 l#
b10011010 l#
b10011011 l#
b10011100 l#
b10011101 l#
b10011110 l#
b10011111 l#
b10100000 l#
b10100001 l#
b10100010 l#
b10100011 l#
b10100100 l#
b10100101 l#
b10100110 l#
b10100111 l#
b10101000 l#
b10101001 l#
b10101010 l#
b10101011 l#
b10101100 l#
b10101101 l#
b10101110 l#
b10101111 l#
b10110000 l#
b10110001 l#
b10110010 l#
b10110011 l#
b10110100 l#
b10110101 l#
b10110110 l#
b10110111 l#
b10111000 l#
b10111001 l#
b10111010 l#
b10111011 l#
b10111100 l#
b10111101 l#
b10111110 l#
b10111111 l#
b11000000 l#
b11000001 l#
b11000010 l#
b11000011 l#
b11000100 l#
b11000101 l#
b11000110 l#
b11000111 l#
b11001000 l#
b11001001 l#
b11001010 l#
b11001011 l#
b11001100 l#
b11001101 l#
b11001110 l#
b11001111 l#
b11010000 l#
b11010001 l#
b11010010 l#
b11010011 l#
b11010100 l#
b11010101 l#
b11010110 l#
b11010111 l#
b11011000 l#
b11011001 l#
b11011010 l#
b11011011 l#
b11011100 l#
b11011101 l#
b11011110 l#
b11011111 l#
b11100000 l#
b11100001 l#
b11100010 l#
b11100011 l#
b11100100 l#
b11100101 l#
b11100110 l#
b11100111 l#
b11101000 l#
b11101001 l#
b11101010 l#
b11101011 l#
b11101100 l#
b11101101 l#
b11101110 l#
b11101111 l#
b11110000 l#
b11110001 l#
b11110010 l#
b11110011 l#
b11110100 l#
b11110101 l#
b11110110 l#
b11110111 l#
b11111000 l#
b11111001 l#
b11111010 l#
b11111011 l#
b11111100 l#
b11111101 l#
b11111110 l#
b11111111 l#
b100000000 l#
b0 n#
b1 n#
b10 n#
b11 n#
b100 n#
b101 n#
b110 n#
b111 n#
b1000 n#
b1001 n#
b1010 n#
b1011 n#
b1100 n#
b1101 n#
b1110 n#
b1111 n#
b10000 n#
b10001 n#
b10010 n#
b10011 n#
b10100 n#
b10101 n#
b10110 n#
b10111 n#
b11000 n#
b11001 n#
b11010 n#
b11011 n#
b11100 n#
b11101 n#
b11110 n#
b11111 n#
b100000 n#
b100001 n#
b100010 n#
b100011 n#
b100100 n#
b100101 n#
b100110 n#
b100111 n#
b101000 n#
b101001 n#
b101010 n#
b101011 n#
b101100 n#
b101101 n#
b101110 n#
b101111 n#
b110000 n#
b110001 n#
b110010 n#
b110011 n#
b110100 n#
b110101 n#
b110110 n#
b110111 n#
b111000 n#
b111001 n#
b111010 n#
b111011 n#
b111100 n#
b111101 n#
b111110 n#
b111111 n#
b1000000 n#
b1000001 n#
b1000010 n#
b1000011 n#
b1000100 n#
b1000101 n#
b1000110 n#
b1000111 n#
b1001000 n#
b1001001 n#
b1001010 n#
b1001011 n#
b1001100 n#
b1001101 n#
b1001110 n#
b1001111 n#
b1010000 n#
b1010001 n#
b1010010 n#
b1010011 n#
b1010100 n#
b1010101 n#
b1010110 n#
b1010111 n#
b1011000 n#
b1011001 n#
b1011010 n#
b1011011 n#
b1011100 n#
b1011101 n#
b1011110 n#
b1011111 n#
b1100000 n#
b1100001 n#
b1100010 n#
b1100011 n#
b1100100 n#
b1100101 n#
b1100110 n#
b1100111 n#
b1101000 n#
b1101001 n#
b1101010 n#
b1101011 n#
b1101100 n#
b1101101 n#
b1101110 n#
b1101111 n#
b1110000 n#
b1110001 n#
b1110010 n#
b1110011 n#
b1110100 n#
b1110101 n#
b1110110 n#
b1110111 n#
b1111000 n#
b1111001 n#
b1111010 n#
b1111011 n#
b1111100 n#
b1111101 n#
b1111110 n#
b1111111 n#
b10000000 n#
b10000001 n#
b10000010 n#
b10000011 n#
b10000100 n#
b10000101 n#
b10000110 n#
b10000111 n#
b10001000 n#
b10001001 n#
b10001010 n#
b10001011 n#
b10001100 n#
b10001101 n#
b10001110 n#
b10001111 n#
b10010000 n#
b10010001 n#
b10010010 n#
b10010011 n#
b10010100 n#
b10010101 n#
b10010110 n#
b10010111 n#
b10011000 n#
b10011001 n#
b10011010 n#
b10011011 n#
b10011100 n#
b10011101 n#
b10011110 n#
b10011111 n#
b10100000 n#
b10100001 n#
b10100010 n#
b10100011 n#
b10100100 n#
b10100101 n#
b10100110 n#
b10100111 n#
b10101000 n#
b10101001 n#
b10101010 n#
b10101011 n#
b10101100 n#
b10101101 n#
b10101110 n#
b10101111 n#
b10110000 n#
b10110001 n#
b10110010 n#
b10110011 n#
b10110100 n#
b10110101 n#
b10110110 n#
b10110111 n#
b10111000 n#
b10111001 n#
b10111010 n#
b10111011 n#
b10111100 n#
b10111101 n#
b10111110 n#
b10111111 n#
b11000000 n#
b11000001 n#
b11000010 n#
b11000011 n#
b11000100 n#
b11000101 n#
b11000110 n#
b11000111 n#
b11001000 n#
b11001001 n#
b11001010 n#
b11001011 n#
b11001100 n#
b11001101 n#
b11001110 n#
b11001111 n#
b11010000 n#
b11010001 n#
b11010010 n#
b11010011 n#
b11010100 n#
b11010101 n#
b11010110 n#
b11010111 n#
b11011000 n#
b11011001 n#
b11011010 n#
b11011011 n#
b11011100 n#
b11011101 n#
b11011110 n#
b11011111 n#
b11100000 n#
b11100001 n#
b11100010 n#
b11100011 n#
b11100100 n#
b11100101 n#
b11100110 n#
b11100111 n#
b11101000 n#
b11101001 n#
b11101010 n#
b11101011 n#
b11101100 n#
b11101101 n#
b11101110 n#
b11101111 n#
b11110000 n#
b11110001 n#
b11110010 n#
b11110011 n#
b11110100 n#
b11110101 n#
b11110110 n#
b11110111 n#
b11111000 n#
b11111001 n#
b11111010 n#
b11111011 n#
b11111100 n#
b11111101 n#
b11111110 n#
b11111111 n#
b100000000 n#
b0 ~$
b1 ~$
b10 ~$
b11 ~$
b100 ~$
b101 ~$
b110 ~$
b111 ~$
b1000 ~$
b1001 ~$
b1010 ~$
b1011 ~$
b1100 ~$
b1101 ~$
b1110 ~$
b1111 ~$
b10000 ~$
b10001 ~$
b10010 ~$
b10011 ~$
b10100 ~$
b10101 ~$
b10110 ~$
b10111 ~$
b11000 ~$
b11001 ~$
b11010 ~$
b11011 ~$
b11100 ~$
b11101 ~$
b11110 ~$
b11111 ~$
b100000 ~$
b100001 ~$
b100010 ~$
b100011 ~$
b100100 ~$
b100101 ~$
b100110 ~$
b100111 ~$
b101000 ~$
b101001 ~$
b101010 ~$
b101011 ~$
b101100 ~$
b101101 ~$
b101110 ~$
b101111 ~$
b110000 ~$
b110001 ~$
b110010 ~$
b110011 ~$
b110100 ~$
b110101 ~$
b110110 ~$
b110111 ~$
b111000 ~$
b111001 ~$
b111010 ~$
b111011 ~$
b111100 ~$
b111101 ~$
b111110 ~$
b111111 ~$
b1000000 ~$
b1000001 ~$
b1000010 ~$
b1000011 ~$
b1000100 ~$
b1000101 ~$
b1000110 ~$
b1000111 ~$
b1001000 ~$
b1001001 ~$
b1001010 ~$
b1001011 ~$
b1001100 ~$
b1001101 ~$
b1001110 ~$
b1001111 ~$
b1010000 ~$
b1010001 ~$
b1010010 ~$
b1010011 ~$
b1010100 ~$
b1010101 ~$
b1010110 ~$
b1010111 ~$
b1011000 ~$
b1011001 ~$
b1011010 ~$
b1011011 ~$
b1011100 ~$
b1011101 ~$
b1011110 ~$
b1011111 ~$
b1100000 ~$
b1100001 ~$
b1100010 ~$
b1100011 ~$
b1100100 ~$
b1100101 ~$
b1100110 ~$
b1100111 ~$
b1101000 ~$
b1101001 ~$
b1101010 ~$
b1101011 ~$
b1101100 ~$
b1101101 ~$
b1101110 ~$
b1101111 ~$
b1110000 ~$
b1110001 ~$
b1110010 ~$
b1110011 ~$
b1110100 ~$
b1110101 ~$
b1110110 ~$
b1110111 ~$
b1111000 ~$
b1111001 ~$
b1111010 ~$
b1111011 ~$
b1111100 ~$
b1111101 ~$
b1111110 ~$
b1111111 ~$
b10000000 ~$
b10000001 ~$
b10000010 ~$
b10000011 ~$
b10000100 ~$
b10000101 ~$
b10000110 ~$
b10000111 ~$
b10001000 ~$
b10001001 ~$
b10001010 ~$
b10001011 ~$
b10001100 ~$
b10001101 ~$
b10001110 ~$
b10001111 ~$
b10010000 ~$
b10010001 ~$
b10010010 ~$
b10010011 ~$
b10010100 ~$
b10010101 ~$
b10010110 ~$
b10010111 ~$
b10011000 ~$
b10011001 ~$
b10011010 ~$
b10011011 ~$
b10011100 ~$
b10011101 ~$
b10011110 ~$
b10011111 ~$
b10100000 ~$
b10100001 ~$
b10100010 ~$
b10100011 ~$
b10100100 ~$
b10100101 ~$
b10100110 ~$
b10100111 ~$
b10101000 ~$
b10101001 ~$
b10101010 ~$
b10101011 ~$
b10101100 ~$
b10101101 ~$
b10101110 ~$
b10101111 ~$
b10110000 ~$
b10110001 ~$
b10110010 ~$
b10110011 ~$
b10110100 ~$
b10110101 ~$
b10110110 ~$
b10110111 ~$
b10111000 ~$
b10111001 ~$
b10111010 ~$
b10111011 ~$
b10111100 ~$
b10111101 ~$
b10111110 ~$
b10111111 ~$
b11000000 ~$
b11000001 ~$
b11000010 ~$
b11000011 ~$
b11000100 ~$
b11000101 ~$
b11000110 ~$
b11000111 ~$
b11001000 ~$
b11001001 ~$
b11001010 ~$
b11001011 ~$
b11001100 ~$
b11001101 ~$
b11001110 ~$
b11001111 ~$
b11010000 ~$
b11010001 ~$
b11010010 ~$
b11010011 ~$
b11010100 ~$
b11010101 ~$
b11010110 ~$
b11010111 ~$
b11011000 ~$
b11011001 ~$
b11011010 ~$
b11011011 ~$
b11011100 ~$
b11011101 ~$
b11011110 ~$
b11011111 ~$
b11100000 ~$
b11100001 ~$
b11100010 ~$
b11100011 ~$
b11100100 ~$
b11100101 ~$
b11100110 ~$
b11100111 ~$
b11101000 ~$
b11101001 ~$
b11101010 ~$
b11101011 ~$
b11101100 ~$
b11101101 ~$
b11101110 ~$
b11101111 ~$
b11110000 ~$
b11110001 ~$
b11110010 ~$
b11110011 ~$
b11110100 ~$
b11110101 ~$
b11110110 ~$
b11110111 ~$
b11111000 ~$
b11111001 ~$
b11111010 ~$
b11111011 ~$
b11111100 ~$
b11111101 ~$
b11111110 ~$
b11111111 ~$
b100000000 ~$
b0 #%
b1 #%
b10 #%
b11 #%
b100 #%
b101 #%
b110 #%
b111 #%
b1000 #%
b1001 #%
b1010 #%
b1011 #%
b1100 #%
b1101 #%
b1110 #%
b1111 #%
b10000 #%
b10001 #%
b10010 #%
b10011 #%
b10100 #%
b10101 #%
b10110 #%
b10111 #%
b11000 #%
b11001 #%
b11010 #%
b11011 #%
b11100 #%
b11101 #%
b11110 #%
b11111 #%
b100000 #%
b100001 #%
b100010 #%
b100011 #%
b100100 #%
b100101 #%
b100110 #%
b100111 #%
b101000 #%
b101001 #%
b101010 #%
b101011 #%
b101100 #%
b101101 #%
b101110 #%
b101111 #%
b110000 #%
b110001 #%
b110010 #%
b110011 #%
b110100 #%
b110101 #%
b110110 #%
b110111 #%
b111000 #%
b111001 #%
b111010 #%
b111011 #%
b111100 #%
b111101 #%
b111110 #%
b111111 #%
b1000000 #%
b1000001 #%
b1000010 #%
b1000011 #%
b1000100 #%
b1000101 #%
b1000110 #%
b1000111 #%
b1001000 #%
b1001001 #%
b1001010 #%
b1001011 #%
b1001100 #%
b1001101 #%
b1001110 #%
b1001111 #%
b1010000 #%
b1010001 #%
b1010010 #%
b1010011 #%
b1010100 #%
b1010101 #%
b1010110 #%
b1010111 #%
b1011000 #%
b1011001 #%
b1011010 #%
b1011011 #%
b1011100 #%
b1011101 #%
b1011110 #%
b1011111 #%
b1100000 #%
b1100001 #%
b1100010 #%
b1100011 #%
b1100100 #%
b1100101 #%
b1100110 #%
b1100111 #%
b1101000 #%
b1101001 #%
b1101010 #%
b1101011 #%
b1101100 #%
b1101101 #%
b1101110 #%
b1101111 #%
b1110000 #%
b1110001 #%
b1110010 #%
b1110011 #%
b1110100 #%
b1110101 #%
b1110110 #%
b1110111 #%
b1111000 #%
b1111001 #%
b1111010 #%
b1111011 #%
b1111100 #%
b1111101 #%
b1111110 #%
b1111111 #%
b10000000 #%
b10000001 #%
b10000010 #%
b10000011 #%
b10000100 #%
b10000101 #%
b10000110 #%
b10000111 #%
b10001000 #%
b10001001 #%
b10001010 #%
b10001011 #%
b10001100 #%
b10001101 #%
b10001110 #%
b10001111 #%
b10010000 #%
b10010001 #%
b10010010 #%
b10010011 #%
b10010100 #%
b10010101 #%
b10010110 #%
b10010111 #%
b10011000 #%
b10011001 #%
b10011010 #%
b10011011 #%
b10011100 #%
b10011101 #%
b10011110 #%
b10011111 #%
b10100000 #%
b10100001 #%
b10100010 #%
b10100011 #%
b10100100 #%
b10100101 #%
b10100110 #%
b10100111 #%
b10101000 #%
b10101001 #%
b10101010 #%
b10101011 #%
b10101100 #%
b10101101 #%
b10101110 #%
b10101111 #%
b10110000 #%
b10110001 #%
b10110010 #%
b10110011 #%
b10110100 #%
b10110101 #%
b10110110 #%
b10110111 #%
b10111000 #%
b10111001 #%
b10111010 #%
b10111011 #%
b10111100 #%
b10111101 #%
b10111110 #%
b10111111 #%
b11000000 #%
b11000001 #%
b11000010 #%
b11000011 #%
b11000100 #%
b11000101 #%
b11000110 #%
b11000111 #%
b11001000 #%
b11001001 #%
b11001010 #%
b11001011 #%
b11001100 #%
b11001101 #%
b11001110 #%
b11001111 #%
b11010000 #%
b11010001 #%
b11010010 #%
b11010011 #%
b11010100 #%
b11010101 #%
b11010110 #%
b11010111 #%
b11011000 #%
b11011001 #%
b11011010 #%
b11011011 #%
b11011100 #%
b11011101 #%
b11011110 #%
b11011111 #%
b11100000 #%
b11100001 #%
b11100010 #%
b11100011 #%
b11100100 #%
b11100101 #%
b11100110 #%
b11100111 #%
b11101000 #%
b11101001 #%
b11101010 #%
b11101011 #%
b11101100 #%
b11101101 #%
b11101110 #%
b11101111 #%
b11110000 #%
b11110001 #%
b11110010 #%
b11110011 #%
b11110100 #%
b11110101 #%
b11110110 #%
b11110111 #%
b11111000 #%
b11111001 #%
b11111010 #%
b11111011 #%
b11111100 #%
b11111101 #%
b11111110 #%
b11111111 #%
b100000000 #%
b0 &%
b1 &%
b10 &%
b11 &%
b100 &%
b101 &%
b110 &%
b111 &%
b1000 &%
b1001 &%
b1010 &%
b1011 &%
b1100 &%
b1101 &%
b1110 &%
b1111 &%
b10000 &%
b10001 &%
b10010 &%
b10011 &%
b10100 &%
b10101 &%
b10110 &%
b10111 &%
b11000 &%
b11001 &%
b11010 &%
b11011 &%
b11100 &%
b11101 &%
b11110 &%
b11111 &%
b100000 &%
b100001 &%
b100010 &%
b100011 &%
b100100 &%
b100101 &%
b100110 &%
b100111 &%
b101000 &%
b101001 &%
b101010 &%
b101011 &%
b101100 &%
b101101 &%
b101110 &%
b101111 &%
b110000 &%
b110001 &%
b110010 &%
b110011 &%
b110100 &%
b110101 &%
b110110 &%
b110111 &%
b111000 &%
b111001 &%
b111010 &%
b111011 &%
b111100 &%
b111101 &%
b111110 &%
b111111 &%
b1000000 &%
b1000001 &%
b1000010 &%
b1000011 &%
b1000100 &%
b1000101 &%
b1000110 &%
b1000111 &%
b1001000 &%
b1001001 &%
b1001010 &%
b1001011 &%
b1001100 &%
b1001101 &%
b1001110 &%
b1001111 &%
b1010000 &%
b1010001 &%
b1010010 &%
b1010011 &%
b1010100 &%
b1010101 &%
b1010110 &%
b1010111 &%
b1011000 &%
b1011001 &%
b1011010 &%
b1011011 &%
b1011100 &%
b1011101 &%
b1011110 &%
b1011111 &%
b1100000 &%
b1100001 &%
b1100010 &%
b1100011 &%
b1100100 &%
b1100101 &%
b1100110 &%
b1100111 &%
b1101000 &%
b1101001 &%
b1101010 &%
b1101011 &%
b1101100 &%
b1101101 &%
b1101110 &%
b1101111 &%
b1110000 &%
b1110001 &%
b1110010 &%
b1110011 &%
b1110100 &%
b1110101 &%
b1110110 &%
b1110111 &%
b1111000 &%
b1111001 &%
b1111010 &%
b1111011 &%
b1111100 &%
b1111101 &%
b1111110 &%
b1111111 &%
b10000000 &%
b10000001 &%
b10000010 &%
b10000011 &%
b10000100 &%
b10000101 &%
b10000110 &%
b10000111 &%
b10001000 &%
b10001001 &%
b10001010 &%
b10001011 &%
b10001100 &%
b10001101 &%
b10001110 &%
b10001111 &%
b10010000 &%
b10010001 &%
b10010010 &%
b10010011 &%
b10010100 &%
b10010101 &%
b10010110 &%
b10010111 &%
b10011000 &%
b10011001 &%
b10011010 &%
b10011011 &%
b10011100 &%
b10011101 &%
b10011110 &%
b10011111 &%
b10100000 &%
b10100001 &%
b10100010 &%
b10100011 &%
b10100100 &%
b10100101 &%
b10100110 &%
b10100111 &%
b10101000 &%
b10101001 &%
b10101010 &%
b10101011 &%
b10101100 &%
b10101101 &%
b10101110 &%
b10101111 &%
b10110000 &%
b10110001 &%
b10110010 &%
b10110011 &%
b10110100 &%
b10110101 &%
b10110110 &%
b10110111 &%
b10111000 &%
b10111001 &%
b10111010 &%
b10111011 &%
b10111100 &%
b10111101 &%
b10111110 &%
b10111111 &%
b11000000 &%
b11000001 &%
b11000010 &%
b11000011 &%
b11000100 &%
b11000101 &%
b11000110 &%
b11000111 &%
b11001000 &%
b11001001 &%
b11001010 &%
b11001011 &%
b11001100 &%
b11001101 &%
b11001110 &%
b11001111 &%
b11010000 &%
b11010001 &%
b11010010 &%
b11010011 &%
b11010100 &%
b11010101 &%
b11010110 &%
b11010111 &%
b11011000 &%
b11011001 &%
b11011010 &%
b11011011 &%
b11011100 &%
b11011101 &%
b11011110 &%
b11011111 &%
b11100000 &%
b11100001 &%
b11100010 &%
b11100011 &%
b11100100 &%
b11100101 &%
b11100110 &%
b11100111 &%
b11101000 &%
b11101001 &%
b11101010 &%
b11101011 &%
b11101100 &%
b11101101 &%
b11101110 &%
b11101111 &%
b11110000 &%
b11110001 &%
b11110010 &%
b11110011 &%
b11110100 &%
b11110101 &%
b11110110 &%
b11110111 &%
b11111000 &%
b11111001 &%
b11111010 &%
b11111011 &%
b11111100 &%
b11111101 &%
b11111110 &%
b11111111 &%
b100000000 &%
b0 )%
b1 )%
b10 )%
b11 )%
b100 )%
b101 )%
b110 )%
b111 )%
b1000 )%
b1001 )%
b1010 )%
b1011 )%
b1100 )%
b1101 )%
b1110 )%
b1111 )%
b10000 )%
b10001 )%
b10010 )%
b10011 )%
b10100 )%
b10101 )%
b10110 )%
b10111 )%
b11000 )%
b11001 )%
b11010 )%
b11011 )%
b11100 )%
b11101 )%
b11110 )%
b11111 )%
b100000 )%
b100001 )%
b100010 )%
b100011 )%
b100100 )%
b100101 )%
b100110 )%
b100111 )%
b101000 )%
b101001 )%
b101010 )%
b101011 )%
b101100 )%
b101101 )%
b101110 )%
b101111 )%
b110000 )%
b110001 )%
b110010 )%
b110011 )%
b110100 )%
b110101 )%
b110110 )%
b110111 )%
b111000 )%
b111001 )%
b111010 )%
b111011 )%
b111100 )%
b111101 )%
b111110 )%
b111111 )%
b1000000 )%
b1000001 )%
b1000010 )%
b1000011 )%
b1000100 )%
b1000101 )%
b1000110 )%
b1000111 )%
b1001000 )%
b1001001 )%
b1001010 )%
b1001011 )%
b1001100 )%
b1001101 )%
b1001110 )%
b1001111 )%
b1010000 )%
b1010001 )%
b1010010 )%
b1010011 )%
b1010100 )%
b1010101 )%
b1010110 )%
b1010111 )%
b1011000 )%
b1011001 )%
b1011010 )%
b1011011 )%
b1011100 )%
b1011101 )%
b1011110 )%
b1011111 )%
b1100000 )%
b1100001 )%
b1100010 )%
b1100011 )%
b1100100 )%
b1100101 )%
b1100110 )%
b1100111 )%
b1101000 )%
b1101001 )%
b1101010 )%
b1101011 )%
b1101100 )%
b1101101 )%
b1101110 )%
b1101111 )%
b1110000 )%
b1110001 )%
b1110010 )%
b1110011 )%
b1110100 )%
b1110101 )%
b1110110 )%
b1110111 )%
b1111000 )%
b1111001 )%
b1111010 )%
b1111011 )%
b1111100 )%
b1111101 )%
b1111110 )%
b1111111 )%
b10000000 )%
b10000001 )%
b10000010 )%
b10000011 )%
b10000100 )%
b10000101 )%
b10000110 )%
b10000111 )%
b10001000 )%
b10001001 )%
b10001010 )%
b10001011 )%
b10001100 )%
b10001101 )%
b10001110 )%
b10001111 )%
b10010000 )%
b10010001 )%
b10010010 )%
b10010011 )%
b10010100 )%
b10010101 )%
b10010110 )%
b10010111 )%
b10011000 )%
b10011001 )%
b10011010 )%
b10011011 )%
b10011100 )%
b10011101 )%
b10011110 )%
b10011111 )%
b10100000 )%
b10100001 )%
b10100010 )%
b10100011 )%
b10100100 )%
b10100101 )%
b10100110 )%
b10100111 )%
b10101000 )%
b10101001 )%
b10101010 )%
b10101011 )%
b10101100 )%
b10101101 )%
b10101110 )%
b10101111 )%
b10110000 )%
b10110001 )%
b10110010 )%
b10110011 )%
b10110100 )%
b10110101 )%
b10110110 )%
b10110111 )%
b10111000 )%
b10111001 )%
b10111010 )%
b10111011 )%
b10111100 )%
b10111101 )%
b10111110 )%
b10111111 )%
b11000000 )%
b11000001 )%
b11000010 )%
b11000011 )%
b11000100 )%
b11000101 )%
b11000110 )%
b11000111 )%
b11001000 )%
b11001001 )%
b11001010 )%
b11001011 )%
b11001100 )%
b11001101 )%
b11001110 )%
b11001111 )%
b11010000 )%
b11010001 )%
b11010010 )%
b11010011 )%
b11010100 )%
b11010101 )%
b11010110 )%
b11010111 )%
b11011000 )%
b11011001 )%
b11011010 )%
b11011011 )%
b11011100 )%
b11011101 )%
b11011110 )%
b11011111 )%
b11100000 )%
b11100001 )%
b11100010 )%
b11100011 )%
b11100100 )%
b11100101 )%
b11100110 )%
b11100111 )%
b11101000 )%
b11101001 )%
b11101010 )%
b11101011 )%
b11101100 )%
b11101101 )%
b11101110 )%
b11101111 )%
b11110000 )%
b11110001 )%
b11110010 )%
b11110011 )%
b11110100 )%
b11110101 )%
b11110110 )%
b11110111 )%
b11111000 )%
b11111001 )%
b11111010 )%
b11111011 )%
b11111100 )%
b11111101 )%
b11111110 )%
b11111111 )%
b100000000 )%
b0 ,%
b1 ,%
b10 ,%
b11 ,%
b100 ,%
b101 ,%
b110 ,%
b111 ,%
b1000 ,%
b1001 ,%
b1010 ,%
b1011 ,%
b1100 ,%
b1101 ,%
b1110 ,%
b1111 ,%
b10000 ,%
b10001 ,%
b10010 ,%
b10011 ,%
b10100 ,%
b10101 ,%
b10110 ,%
b10111 ,%
b11000 ,%
b11001 ,%
b11010 ,%
b11011 ,%
b11100 ,%
b11101 ,%
b11110 ,%
b11111 ,%
b100000 ,%
b100001 ,%
b100010 ,%
b100011 ,%
b100100 ,%
b100101 ,%
b100110 ,%
b100111 ,%
b101000 ,%
b101001 ,%
b101010 ,%
b101011 ,%
b101100 ,%
b101101 ,%
b101110 ,%
b101111 ,%
b110000 ,%
b110001 ,%
b110010 ,%
b110011 ,%
b110100 ,%
b110101 ,%
b110110 ,%
b110111 ,%
b111000 ,%
b111001 ,%
b111010 ,%
b111011 ,%
b111100 ,%
b111101 ,%
b111110 ,%
b111111 ,%
b1000000 ,%
b1000001 ,%
b1000010 ,%
b1000011 ,%
b1000100 ,%
b1000101 ,%
b1000110 ,%
b1000111 ,%
b1001000 ,%
b1001001 ,%
b1001010 ,%
b1001011 ,%
b1001100 ,%
b1001101 ,%
b1001110 ,%
b1001111 ,%
b1010000 ,%
b1010001 ,%
b1010010 ,%
b1010011 ,%
b1010100 ,%
b1010101 ,%
b1010110 ,%
b1010111 ,%
b1011000 ,%
b1011001 ,%
b1011010 ,%
b1011011 ,%
b1011100 ,%
b1011101 ,%
b1011110 ,%
b1011111 ,%
b1100000 ,%
b1100001 ,%
b1100010 ,%
b1100011 ,%
b1100100 ,%
b1100101 ,%
b1100110 ,%
b1100111 ,%
b1101000 ,%
b1101001 ,%
b1101010 ,%
b1101011 ,%
b1101100 ,%
b1101101 ,%
b1101110 ,%
b1101111 ,%
b1110000 ,%
b1110001 ,%
b1110010 ,%
b1110011 ,%
b1110100 ,%
b1110101 ,%
b1110110 ,%
b1110111 ,%
b1111000 ,%
b1111001 ,%
b1111010 ,%
b1111011 ,%
b1111100 ,%
b1111101 ,%
b1111110 ,%
b1111111 ,%
b10000000 ,%
b10000001 ,%
b10000010 ,%
b10000011 ,%
b10000100 ,%
b10000101 ,%
b10000110 ,%
b10000111 ,%
b10001000 ,%
b10001001 ,%
b10001010 ,%
b10001011 ,%
b10001100 ,%
b10001101 ,%
b10001110 ,%
b10001111 ,%
b10010000 ,%
b10010001 ,%
b10010010 ,%
b10010011 ,%
b10010100 ,%
b10010101 ,%
b10010110 ,%
b10010111 ,%
b10011000 ,%
b10011001 ,%
b10011010 ,%
b10011011 ,%
b10011100 ,%
b10011101 ,%
b10011110 ,%
b10011111 ,%
b10100000 ,%
b10100001 ,%
b10100010 ,%
b10100011 ,%
b10100100 ,%
b10100101 ,%
b10100110 ,%
b10100111 ,%
b10101000 ,%
b10101001 ,%
b10101010 ,%
b10101011 ,%
b10101100 ,%
b10101101 ,%
b10101110 ,%
b10101111 ,%
b10110000 ,%
b10110001 ,%
b10110010 ,%
b10110011 ,%
b10110100 ,%
b10110101 ,%
b10110110 ,%
b10110111 ,%
b10111000 ,%
b10111001 ,%
b10111010 ,%
b10111011 ,%
b10111100 ,%
b10111101 ,%
b10111110 ,%
b10111111 ,%
b11000000 ,%
b11000001 ,%
b11000010 ,%
b11000011 ,%
b11000100 ,%
b11000101 ,%
b11000110 ,%
b11000111 ,%
b11001000 ,%
b11001001 ,%
b11001010 ,%
b11001011 ,%
b11001100 ,%
b11001101 ,%
b11001110 ,%
b11001111 ,%
b11010000 ,%
b11010001 ,%
b11010010 ,%
b11010011 ,%
b11010100 ,%
b11010101 ,%
b11010110 ,%
b11010111 ,%
b11011000 ,%
b11011001 ,%
b11011010 ,%
b11011011 ,%
b11011100 ,%
b11011101 ,%
b11011110 ,%
b11011111 ,%
b11100000 ,%
b11100001 ,%
b11100010 ,%
b11100011 ,%
b11100100 ,%
b11100101 ,%
b11100110 ,%
b11100111 ,%
b11101000 ,%
b11101001 ,%
b11101010 ,%
b11101011 ,%
b11101100 ,%
b11101101 ,%
b11101110 ,%
b11101111 ,%
b11110000 ,%
b11110001 ,%
b11110010 ,%
b11110011 ,%
b11110100 ,%
b11110101 ,%
b11110110 ,%
b11110111 ,%
b11111000 ,%
b11111001 ,%
b11111010 ,%
b11111011 ,%
b11111100 ,%
b11111101 ,%
b11111110 ,%
b11111111 ,%
b100000000 ,%
b0 /%
b1 /%
b10 /%
b11 /%
b100 /%
b101 /%
b110 /%
b111 /%
b1000 /%
b1001 /%
b1010 /%
b1011 /%
b1100 /%
b1101 /%
b1110 /%
b1111 /%
b10000 /%
b10001 /%
b10010 /%
b10011 /%
b10100 /%
b10101 /%
b10110 /%
b10111 /%
b11000 /%
b11001 /%
b11010 /%
b11011 /%
b11100 /%
b11101 /%
b11110 /%
b11111 /%
b100000 /%
b100001 /%
b100010 /%
b100011 /%
b100100 /%
b100101 /%
b100110 /%
b100111 /%
b101000 /%
b101001 /%
b101010 /%
b101011 /%
b101100 /%
b101101 /%
b101110 /%
b101111 /%
b110000 /%
b110001 /%
b110010 /%
b110011 /%
b110100 /%
b110101 /%
b110110 /%
b110111 /%
b111000 /%
b111001 /%
b111010 /%
b111011 /%
b111100 /%
b111101 /%
b111110 /%
b111111 /%
b1000000 /%
b1000001 /%
b1000010 /%
b1000011 /%
b1000100 /%
b1000101 /%
b1000110 /%
b1000111 /%
b1001000 /%
b1001001 /%
b1001010 /%
b1001011 /%
b1001100 /%
b1001101 /%
b1001110 /%
b1001111 /%
b1010000 /%
b1010001 /%
b1010010 /%
b1010011 /%
b1010100 /%
b1010101 /%
b1010110 /%
b1010111 /%
b1011000 /%
b1011001 /%
b1011010 /%
b1011011 /%
b1011100 /%
b1011101 /%
b1011110 /%
b1011111 /%
b1100000 /%
b1100001 /%
b1100010 /%
b1100011 /%
b1100100 /%
b1100101 /%
b1100110 /%
b1100111 /%
b1101000 /%
b1101001 /%
b1101010 /%
b1101011 /%
b1101100 /%
b1101101 /%
b1101110 /%
b1101111 /%
b1110000 /%
b1110001 /%
b1110010 /%
b1110011 /%
b1110100 /%
b1110101 /%
b1110110 /%
b1110111 /%
b1111000 /%
b1111001 /%
b1111010 /%
b1111011 /%
b1111100 /%
b1111101 /%
b1111110 /%
b1111111 /%
b10000000 /%
b10000001 /%
b10000010 /%
b10000011 /%
b10000100 /%
b10000101 /%
b10000110 /%
b10000111 /%
b10001000 /%
b10001001 /%
b10001010 /%
b10001011 /%
b10001100 /%
b10001101 /%
b10001110 /%
b10001111 /%
b10010000 /%
b10010001 /%
b10010010 /%
b10010011 /%
b10010100 /%
b10010101 /%
b10010110 /%
b10010111 /%
b10011000 /%
b10011001 /%
b10011010 /%
b10011011 /%
b10011100 /%
b10011101 /%
b10011110 /%
b10011111 /%
b10100000 /%
b10100001 /%
b10100010 /%
b10100011 /%
b10100100 /%
b10100101 /%
b10100110 /%
b10100111 /%
b10101000 /%
b10101001 /%
b10101010 /%
b10101011 /%
b10101100 /%
b10101101 /%
b10101110 /%
b10101111 /%
b10110000 /%
b10110001 /%
b10110010 /%
b10110011 /%
b10110100 /%
b10110101 /%
b10110110 /%
b10110111 /%
b10111000 /%
b10111001 /%
b10111010 /%
b10111011 /%
b10111100 /%
b10111101 /%
b10111110 /%
b10111111 /%
b11000000 /%
b11000001 /%
b11000010 /%
b11000011 /%
b11000100 /%
b11000101 /%
b11000110 /%
b11000111 /%
b11001000 /%
b11001001 /%
b11001010 /%
b11001011 /%
b11001100 /%
b11001101 /%
b11001110 /%
b11001111 /%
b11010000 /%
b11010001 /%
b11010010 /%
b11010011 /%
b11010100 /%
b11010101 /%
b11010110 /%
b11010111 /%
b11011000 /%
b11011001 /%
b11011010 /%
b11011011 /%
b11011100 /%
b11011101 /%
b11011110 /%
b11011111 /%
b11100000 /%
b11100001 /%
b11100010 /%
b11100011 /%
b11100100 /%
b11100101 /%
b11100110 /%
b11100111 /%
b11101000 /%
b11101001 /%
b11101010 /%
b11101011 /%
b11101100 /%
b11101101 /%
b11101110 /%
b11101111 /%
b11110000 /%
b11110001 /%
b11110010 /%
b11110011 /%
b11110100 /%
b11110101 /%
b11110110 /%
b11110111 /%
b11111000 /%
b11111001 /%
b11111010 /%
b11111011 /%
b11111100 /%
b11111101 /%
b11111110 /%
b11111111 /%
b100000000 /%
b0 1%
b1 1%
b10 1%
b11 1%
b100 1%
b101 1%
b110 1%
b111 1%
b1000 1%
b1001 1%
b1010 1%
b1011 1%
b1100 1%
b1101 1%
b1110 1%
b1111 1%
b10000 1%
b10001 1%
b10010 1%
b10011 1%
b10100 1%
b10101 1%
b10110 1%
b10111 1%
b11000 1%
b11001 1%
b11010 1%
b11011 1%
b11100 1%
b11101 1%
b11110 1%
b11111 1%
b100000 1%
b100001 1%
b100010 1%
b100011 1%
b100100 1%
b100101 1%
b100110 1%
b100111 1%
b101000 1%
b101001 1%
b101010 1%
b101011 1%
b101100 1%
b101101 1%
b101110 1%
b101111 1%
b110000 1%
b110001 1%
b110010 1%
b110011 1%
b110100 1%
b110101 1%
b110110 1%
b110111 1%
b111000 1%
b111001 1%
b111010 1%
b111011 1%
b111100 1%
b111101 1%
b111110 1%
b111111 1%
b1000000 1%
b1000001 1%
b1000010 1%
b1000011 1%
b1000100 1%
b1000101 1%
b1000110 1%
b1000111 1%
b1001000 1%
b1001001 1%
b1001010 1%
b1001011 1%
b1001100 1%
b1001101 1%
b1001110 1%
b1001111 1%
b1010000 1%
b1010001 1%
b1010010 1%
b1010011 1%
b1010100 1%
b1010101 1%
b1010110 1%
b1010111 1%
b1011000 1%
b1011001 1%
b1011010 1%
b1011011 1%
b1011100 1%
b1011101 1%
b1011110 1%
b1011111 1%
b1100000 1%
b1100001 1%
b1100010 1%
b1100011 1%
b1100100 1%
b1100101 1%
b1100110 1%
b1100111 1%
b1101000 1%
b1101001 1%
b1101010 1%
b1101011 1%
b1101100 1%
b1101101 1%
b1101110 1%
b1101111 1%
b1110000 1%
b1110001 1%
b1110010 1%
b1110011 1%
b1110100 1%
b1110101 1%
b1110110 1%
b1110111 1%
b1111000 1%
b1111001 1%
b1111010 1%
b1111011 1%
b1111100 1%
b1111101 1%
b1111110 1%
b1111111 1%
b10000000 1%
b10000001 1%
b10000010 1%
b10000011 1%
b10000100 1%
b10000101 1%
b10000110 1%
b10000111 1%
b10001000 1%
b10001001 1%
b10001010 1%
b10001011 1%
b10001100 1%
b10001101 1%
b10001110 1%
b10001111 1%
b10010000 1%
b10010001 1%
b10010010 1%
b10010011 1%
b10010100 1%
b10010101 1%
b10010110 1%
b10010111 1%
b10011000 1%
b10011001 1%
b10011010 1%
b10011011 1%
b10011100 1%
b10011101 1%
b10011110 1%
b10011111 1%
b10100000 1%
b10100001 1%
b10100010 1%
b10100011 1%
b10100100 1%
b10100101 1%
b10100110 1%
b10100111 1%
b10101000 1%
b10101001 1%
b10101010 1%
b10101011 1%
b10101100 1%
b10101101 1%
b10101110 1%
b10101111 1%
b10110000 1%
b10110001 1%
b10110010 1%
b10110011 1%
b10110100 1%
b10110101 1%
b10110110 1%
b10110111 1%
b10111000 1%
b10111001 1%
b10111010 1%
b10111011 1%
b10111100 1%
b10111101 1%
b10111110 1%
b10111111 1%
b11000000 1%
b11000001 1%
b11000010 1%
b11000011 1%
b11000100 1%
b11000101 1%
b11000110 1%
b11000111 1%
b11001000 1%
b11001001 1%
b11001010 1%
b11001011 1%
b11001100 1%
b11001101 1%
b11001110 1%
b11001111 1%
b11010000 1%
b11010001 1%
b11010010 1%
b11010011 1%
b11010100 1%
b11010101 1%
b11010110 1%
b11010111 1%
b11011000 1%
b11011001 1%
b11011010 1%
b11011011 1%
b11011100 1%
b11011101 1%
b11011110 1%
b11011111 1%
b11100000 1%
b11100001 1%
b11100010 1%
b11100011 1%
b11100100 1%
b11100101 1%
b11100110 1%
b11100111 1%
b11101000 1%
b11101001 1%
b11101010 1%
b11101011 1%
b11101100 1%
b11101101 1%
b11101110 1%
b11101111 1%
b11110000 1%
b11110001 1%
b11110010 1%
b11110011 1%
b11110100 1%
b11110101 1%
b11110110 1%
b11110111 1%
b11111000 1%
b11111001 1%
b11111010 1%
b11111011 1%
b11111100 1%
b11111101 1%
b11111110 1%
b11111111 1%
b100000000 1%
#150
0!!
08
0R,
0}
#200
1!!
b11 #!
18
1R,
1}
b0 ]#
b1 ]#
b10 ]#
b11 ]#
b100 ]#
b101 ]#
b110 ]#
b111 ]#
b1000 ]#
b1001 ]#
b1010 ]#
b1011 ]#
b1100 ]#
b1101 ]#
b1110 ]#
b1111 ]#
b10000 ]#
b10001 ]#
b10010 ]#
b10011 ]#
b10100 ]#
b10101 ]#
b10110 ]#
b10111 ]#
b11000 ]#
b11001 ]#
b11010 ]#
b11011 ]#
b11100 ]#
b11101 ]#
b11110 ]#
b11111 ]#
b100000 ]#
b100001 ]#
b100010 ]#
b100011 ]#
b100100 ]#
b100101 ]#
b100110 ]#
b100111 ]#
b101000 ]#
b101001 ]#
b101010 ]#
b101011 ]#
b101100 ]#
b101101 ]#
b101110 ]#
b101111 ]#
b110000 ]#
b110001 ]#
b110010 ]#
b110011 ]#
b110100 ]#
b110101 ]#
b110110 ]#
b110111 ]#
b111000 ]#
b111001 ]#
b111010 ]#
b111011 ]#
b111100 ]#
b111101 ]#
b111110 ]#
b111111 ]#
b1000000 ]#
b1000001 ]#
b1000010 ]#
b1000011 ]#
b1000100 ]#
b1000101 ]#
b1000110 ]#
b1000111 ]#
b1001000 ]#
b1001001 ]#
b1001010 ]#
b1001011 ]#
b1001100 ]#
b1001101 ]#
b1001110 ]#
b1001111 ]#
b1010000 ]#
b1010001 ]#
b1010010 ]#
b1010011 ]#
b1010100 ]#
b1010101 ]#
b1010110 ]#
b1010111 ]#
b1011000 ]#
b1011001 ]#
b1011010 ]#
b1011011 ]#
b1011100 ]#
b1011101 ]#
b1011110 ]#
b1011111 ]#
b1100000 ]#
b1100001 ]#
b1100010 ]#
b1100011 ]#
b1100100 ]#
b1100101 ]#
b1100110 ]#
b1100111 ]#
b1101000 ]#
b1101001 ]#
b1101010 ]#
b1101011 ]#
b1101100 ]#
b1101101 ]#
b1101110 ]#
b1101111 ]#
b1110000 ]#
b1110001 ]#
b1110010 ]#
b1110011 ]#
b1110100 ]#
b1110101 ]#
b1110110 ]#
b1110111 ]#
b1111000 ]#
b1111001 ]#
b1111010 ]#
b1111011 ]#
b1111100 ]#
b1111101 ]#
b1111110 ]#
b1111111 ]#
b10000000 ]#
b10000001 ]#
b10000010 ]#
b10000011 ]#
b10000100 ]#
b10000101 ]#
b10000110 ]#
b10000111 ]#
b10001000 ]#
b10001001 ]#
b10001010 ]#
b10001011 ]#
b10001100 ]#
b10001101 ]#
b10001110 ]#
b10001111 ]#
b10010000 ]#
b10010001 ]#
b10010010 ]#
b10010011 ]#
b10010100 ]#
b10010101 ]#
b10010110 ]#
b10010111 ]#
b10011000 ]#
b10011001 ]#
b10011010 ]#
b10011011 ]#
b10011100 ]#
b10011101 ]#
b10011110 ]#
b10011111 ]#
b10100000 ]#
b10100001 ]#
b10100010 ]#
b10100011 ]#
b10100100 ]#
b10100101 ]#
b10100110 ]#
b10100111 ]#
b10101000 ]#
b10101001 ]#
b10101010 ]#
b10101011 ]#
b10101100 ]#
b10101101 ]#
b10101110 ]#
b10101111 ]#
b10110000 ]#
b10110001 ]#
b10110010 ]#
b10110011 ]#
b10110100 ]#
b10110101 ]#
b10110110 ]#
b10110111 ]#
b10111000 ]#
b10111001 ]#
b10111010 ]#
b10111011 ]#
b10111100 ]#
b10111101 ]#
b10111110 ]#
b10111111 ]#
b11000000 ]#
b11000001 ]#
b11000010 ]#
b11000011 ]#
b11000100 ]#
b11000101 ]#
b11000110 ]#
b11000111 ]#
b11001000 ]#
b11001001 ]#
b11001010 ]#
b11001011 ]#
b11001100 ]#
b11001101 ]#
b11001110 ]#
b11001111 ]#
b11010000 ]#
b11010001 ]#
b11010010 ]#
b11010011 ]#
b11010100 ]#
b11010101 ]#
b11010110 ]#
b11010111 ]#
b11011000 ]#
b11011001 ]#
b11011010 ]#
b11011011 ]#
b11011100 ]#
b11011101 ]#
b11011110 ]#
b11011111 ]#
b11100000 ]#
b11100001 ]#
b11100010 ]#
b11100011 ]#
b11100100 ]#
b11100101 ]#
b11100110 ]#
b11100111 ]#
b11101000 ]#
b11101001 ]#
b11101010 ]#
b11101011 ]#
b11101100 ]#
b11101101 ]#
b11101110 ]#
b11101111 ]#
b11110000 ]#
b11110001 ]#
b11110010 ]#
b11110011 ]#
b11110100 ]#
b11110101 ]#
b11110110 ]#
b11110111 ]#
b11111000 ]#
b11111001 ]#
b11111010 ]#
b11111011 ]#
b11111100 ]#
b11111101 ]#
b11111110 ]#
b11111111 ]#
b100000000 ]#
b0 `#
b1 `#
b10 `#
b11 `#
b100 `#
b101 `#
b110 `#
b111 `#
b1000 `#
b1001 `#
b1010 `#
b1011 `#
b1100 `#
b1101 `#
b1110 `#
b1111 `#
b10000 `#
b10001 `#
b10010 `#
b10011 `#
b10100 `#
b10101 `#
b10110 `#
b10111 `#
b11000 `#
b11001 `#
b11010 `#
b11011 `#
b11100 `#
b11101 `#
b11110 `#
b11111 `#
b100000 `#
b100001 `#
b100010 `#
b100011 `#
b100100 `#
b100101 `#
b100110 `#
b100111 `#
b101000 `#
b101001 `#
b101010 `#
b101011 `#
b101100 `#
b101101 `#
b101110 `#
b101111 `#
b110000 `#
b110001 `#
b110010 `#
b110011 `#
b110100 `#
b110101 `#
b110110 `#
b110111 `#
b111000 `#
b111001 `#
b111010 `#
b111011 `#
b111100 `#
b111101 `#
b111110 `#
b111111 `#
b1000000 `#
b1000001 `#
b1000010 `#
b1000011 `#
b1000100 `#
b1000101 `#
b1000110 `#
b1000111 `#
b1001000 `#
b1001001 `#
b1001010 `#
b1001011 `#
b1001100 `#
b1001101 `#
b1001110 `#
b1001111 `#
b1010000 `#
b1010001 `#
b1010010 `#
b1010011 `#
b1010100 `#
b1010101 `#
b1010110 `#
b1010111 `#
b1011000 `#
b1011001 `#
b1011010 `#
b1011011 `#
b1011100 `#
b1011101 `#
b1011110 `#
b1011111 `#
b1100000 `#
b1100001 `#
b1100010 `#
b1100011 `#
b1100100 `#
b1100101 `#
b1100110 `#
b1100111 `#
b1101000 `#
b1101001 `#
b1101010 `#
b1101011 `#
b1101100 `#
b1101101 `#
b1101110 `#
b1101111 `#
b1110000 `#
b1110001 `#
b1110010 `#
b1110011 `#
b1110100 `#
b1110101 `#
b1110110 `#
b1110111 `#
b1111000 `#
b1111001 `#
b1111010 `#
b1111011 `#
b1111100 `#
b1111101 `#
b1111110 `#
b1111111 `#
b10000000 `#
b10000001 `#
b10000010 `#
b10000011 `#
b10000100 `#
b10000101 `#
b10000110 `#
b10000111 `#
b10001000 `#
b10001001 `#
b10001010 `#
b10001011 `#
b10001100 `#
b10001101 `#
b10001110 `#
b10001111 `#
b10010000 `#
b10010001 `#
b10010010 `#
b10010011 `#
b10010100 `#
b10010101 `#
b10010110 `#
b10010111 `#
b10011000 `#
b10011001 `#
b10011010 `#
b10011011 `#
b10011100 `#
b10011101 `#
b10011110 `#
b10011111 `#
b10100000 `#
b10100001 `#
b10100010 `#
b10100011 `#
b10100100 `#
b10100101 `#
b10100110 `#
b10100111 `#
b10101000 `#
b10101001 `#
b10101010 `#
b10101011 `#
b10101100 `#
b10101101 `#
b10101110 `#
b10101111 `#
b10110000 `#
b10110001 `#
b10110010 `#
b10110011 `#
b10110100 `#
b10110101 `#
b10110110 `#
b10110111 `#
b10111000 `#
b10111001 `#
b10111010 `#
b10111011 `#
b10111100 `#
b10111101 `#
b10111110 `#
b10111111 `#
b11000000 `#
b11000001 `#
b11000010 `#
b11000011 `#
b11000100 `#
b11000101 `#
b11000110 `#
b11000111 `#
b11001000 `#
b11001001 `#
b11001010 `#
b11001011 `#
b11001100 `#
b11001101 `#
b11001110 `#
b11001111 `#
b11010000 `#
b11010001 `#
b11010010 `#
b11010011 `#
b11010100 `#
b11010101 `#
b11010110 `#
b11010111 `#
b11011000 `#
b11011001 `#
b11011010 `#
b11011011 `#
b11011100 `#
b11011101 `#
b11011110 `#
b11011111 `#
b11100000 `#
b11100001 `#
b11100010 `#
b11100011 `#
b11100100 `#
b11100101 `#
b11100110 `#
b11100111 `#
b11101000 `#
b11101001 `#
b11101010 `#
b11101011 `#
b11101100 `#
b11101101 `#
b11101110 `#
b11101111 `#
b11110000 `#
b11110001 `#
b11110010 `#
b11110011 `#
b11110100 `#
b11110101 `#
b11110110 `#
b11110111 `#
b11111000 `#
b11111001 `#
b11111010 `#
b11111011 `#
b11111100 `#
b11111101 `#
b11111110 `#
b11111111 `#
b100000000 `#
b0 c#
b1 c#
b10 c#
b11 c#
b100 c#
b101 c#
b110 c#
b111 c#
b1000 c#
b1001 c#
b1010 c#
b1011 c#
b1100 c#
b1101 c#
b1110 c#
b1111 c#
b10000 c#
b10001 c#
b10010 c#
b10011 c#
b10100 c#
b10101 c#
b10110 c#
b10111 c#
b11000 c#
b11001 c#
b11010 c#
b11011 c#
b11100 c#
b11101 c#
b11110 c#
b11111 c#
b100000 c#
b100001 c#
b100010 c#
b100011 c#
b100100 c#
b100101 c#
b100110 c#
b100111 c#
b101000 c#
b101001 c#
b101010 c#
b101011 c#
b101100 c#
b101101 c#
b101110 c#
b101111 c#
b110000 c#
b110001 c#
b110010 c#
b110011 c#
b110100 c#
b110101 c#
b110110 c#
b110111 c#
b111000 c#
b111001 c#
b111010 c#
b111011 c#
b111100 c#
b111101 c#
b111110 c#
b111111 c#
b1000000 c#
b1000001 c#
b1000010 c#
b1000011 c#
b1000100 c#
b1000101 c#
b1000110 c#
b1000111 c#
b1001000 c#
b1001001 c#
b1001010 c#
b1001011 c#
b1001100 c#
b1001101 c#
b1001110 c#
b1001111 c#
b1010000 c#
b1010001 c#
b1010010 c#
b1010011 c#
b1010100 c#
b1010101 c#
b1010110 c#
b1010111 c#
b1011000 c#
b1011001 c#
b1011010 c#
b1011011 c#
b1011100 c#
b1011101 c#
b1011110 c#
b1011111 c#
b1100000 c#
b1100001 c#
b1100010 c#
b1100011 c#
b1100100 c#
b1100101 c#
b1100110 c#
b1100111 c#
b1101000 c#
b1101001 c#
b1101010 c#
b1101011 c#
b1101100 c#
b1101101 c#
b1101110 c#
b1101111 c#
b1110000 c#
b1110001 c#
b1110010 c#
b1110011 c#
b1110100 c#
b1110101 c#
b1110110 c#
b1110111 c#
b1111000 c#
b1111001 c#
b1111010 c#
b1111011 c#
b1111100 c#
b1111101 c#
b1111110 c#
b1111111 c#
b10000000 c#
b10000001 c#
b10000010 c#
b10000011 c#
b10000100 c#
b10000101 c#
b10000110 c#
b10000111 c#
b10001000 c#
b10001001 c#
b10001010 c#
b10001011 c#
b10001100 c#
b10001101 c#
b10001110 c#
b10001111 c#
b10010000 c#
b10010001 c#
b10010010 c#
b10010011 c#
b10010100 c#
b10010101 c#
b10010110 c#
b10010111 c#
b10011000 c#
b10011001 c#
b10011010 c#
b10011011 c#
b10011100 c#
b10011101 c#
b10011110 c#
b10011111 c#
b10100000 c#
b10100001 c#
b10100010 c#
b10100011 c#
b10100100 c#
b10100101 c#
b10100110 c#
b10100111 c#
b10101000 c#
b10101001 c#
b10101010 c#
b10101011 c#
b10101100 c#
b10101101 c#
b10101110 c#
b10101111 c#
b10110000 c#
b10110001 c#
b10110010 c#
b10110011 c#
b10110100 c#
b10110101 c#
b10110110 c#
b10110111 c#
b10111000 c#
b10111001 c#
b10111010 c#
b10111011 c#
b10111100 c#
b10111101 c#
b10111110 c#
b10111111 c#
b11000000 c#
b11000001 c#
b11000010 c#
b11000011 c#
b11000100 c#
b11000101 c#
b11000110 c#
b11000111 c#
b11001000 c#
b11001001 c#
b11001010 c#
b11001011 c#
b11001100 c#
b11001101 c#
b11001110 c#
b11001111 c#
b11010000 c#
b11010001 c#
b11010010 c#
b11010011 c#
b11010100 c#
b11010101 c#
b11010110 c#
b11010111 c#
b11011000 c#
b11011001 c#
b11011010 c#
b11011011 c#
b11011100 c#
b11011101 c#
b11011110 c#
b11011111 c#
b11100000 c#
b11100001 c#
b11100010 c#
b11100011 c#
b11100100 c#
b11100101 c#
b11100110 c#
b11100111 c#
b11101000 c#
b11101001 c#
b11101010 c#
b11101011 c#
b11101100 c#
b11101101 c#
b11101110 c#
b11101111 c#
b11110000 c#
b11110001 c#
b11110010 c#
b11110011 c#
b11110100 c#
b11110101 c#
b11110110 c#
b11110111 c#
b11111000 c#
b11111001 c#
b11111010 c#
b11111011 c#
b11111100 c#
b11111101 c#
b11111110 c#
b11111111 c#
b100000000 c#
b0 f#
b1 f#
b10 f#
b11 f#
b100 f#
b101 f#
b110 f#
b111 f#
b1000 f#
b1001 f#
b1010 f#
b1011 f#
b1100 f#
b1101 f#
b1110 f#
b1111 f#
b10000 f#
b10001 f#
b10010 f#
b10011 f#
b10100 f#
b10101 f#
b10110 f#
b10111 f#
b11000 f#
b11001 f#
b11010 f#
b11011 f#
b11100 f#
b11101 f#
b11110 f#
b11111 f#
b100000 f#
b100001 f#
b100010 f#
b100011 f#
b100100 f#
b100101 f#
b100110 f#
b100111 f#
b101000 f#
b101001 f#
b101010 f#
b101011 f#
b101100 f#
b101101 f#
b101110 f#
b101111 f#
b110000 f#
b110001 f#
b110010 f#
b110011 f#
b110100 f#
b110101 f#
b110110 f#
b110111 f#
b111000 f#
b111001 f#
b111010 f#
b111011 f#
b111100 f#
b111101 f#
b111110 f#
b111111 f#
b1000000 f#
b1000001 f#
b1000010 f#
b1000011 f#
b1000100 f#
b1000101 f#
b1000110 f#
b1000111 f#
b1001000 f#
b1001001 f#
b1001010 f#
b1001011 f#
b1001100 f#
b1001101 f#
b1001110 f#
b1001111 f#
b1010000 f#
b1010001 f#
b1010010 f#
b1010011 f#
b1010100 f#
b1010101 f#
b1010110 f#
b1010111 f#
b1011000 f#
b1011001 f#
b1011010 f#
b1011011 f#
b1011100 f#
b1011101 f#
b1011110 f#
b1011111 f#
b1100000 f#
b1100001 f#
b1100010 f#
b1100011 f#
b1100100 f#
b1100101 f#
b1100110 f#
b1100111 f#
b1101000 f#
b1101001 f#
b1101010 f#
b1101011 f#
b1101100 f#
b1101101 f#
b1101110 f#
b1101111 f#
b1110000 f#
b1110001 f#
b1110010 f#
b1110011 f#
b1110100 f#
b1110101 f#
b1110110 f#
b1110111 f#
b1111000 f#
b1111001 f#
b1111010 f#
b1111011 f#
b1111100 f#
b1111101 f#
b1111110 f#
b1111111 f#
b10000000 f#
b10000001 f#
b10000010 f#
b10000011 f#
b10000100 f#
b10000101 f#
b10000110 f#
b10000111 f#
b10001000 f#
b10001001 f#
b10001010 f#
b10001011 f#
b10001100 f#
b10001101 f#
b10001110 f#
b10001111 f#
b10010000 f#
b10010001 f#
b10010010 f#
b10010011 f#
b10010100 f#
b10010101 f#
b10010110 f#
b10010111 f#
b10011000 f#
b10011001 f#
b10011010 f#
b10011011 f#
b10011100 f#
b10011101 f#
b10011110 f#
b10011111 f#
b10100000 f#
b10100001 f#
b10100010 f#
b10100011 f#
b10100100 f#
b10100101 f#
b10100110 f#
b10100111 f#
b10101000 f#
b10101001 f#
b10101010 f#
b10101011 f#
b10101100 f#
b10101101 f#
b10101110 f#
b10101111 f#
b10110000 f#
b10110001 f#
b10110010 f#
b10110011 f#
b10110100 f#
b10110101 f#
b10110110 f#
b10110111 f#
b10111000 f#
b10111001 f#
b10111010 f#
b10111011 f#
b10111100 f#
b10111101 f#
b10111110 f#
b10111111 f#
b11000000 f#
b11000001 f#
b11000010 f#
b11000011 f#
b11000100 f#
b11000101 f#
b11000110 f#
b11000111 f#
b11001000 f#
b11001001 f#
b11001010 f#
b11001011 f#
b11001100 f#
b11001101 f#
b11001110 f#
b11001111 f#
b11010000 f#
b11010001 f#
b11010010 f#
b11010011 f#
b11010100 f#
b11010101 f#
b11010110 f#
b11010111 f#
b11011000 f#
b11011001 f#
b11011010 f#
b11011011 f#
b11011100 f#
b11011101 f#
b11011110 f#
b11011111 f#
b11100000 f#
b11100001 f#
b11100010 f#
b11100011 f#
b11100100 f#
b11100101 f#
b11100110 f#
b11100111 f#
b11101000 f#
b11101001 f#
b11101010 f#
b11101011 f#
b11101100 f#
b11101101 f#
b11101110 f#
b11101111 f#
b11110000 f#
b11110001 f#
b11110010 f#
b11110011 f#
b11110100 f#
b11110101 f#
b11110110 f#
b11110111 f#
b11111000 f#
b11111001 f#
b11111010 f#
b11111011 f#
b11111100 f#
b11111101 f#
b11111110 f#
b11111111 f#
b100000000 f#
b0 i#
b1 i#
b10 i#
b11 i#
b100 i#
b101 i#
b110 i#
b111 i#
b1000 i#
b1001 i#
b1010 i#
b1011 i#
b1100 i#
b1101 i#
b1110 i#
b1111 i#
b10000 i#
b10001 i#
b10010 i#
b10011 i#
b10100 i#
b10101 i#
b10110 i#
b10111 i#
b11000 i#
b11001 i#
b11010 i#
b11011 i#
b11100 i#
b11101 i#
b11110 i#
b11111 i#
b100000 i#
b100001 i#
b100010 i#
b100011 i#
b100100 i#
b100101 i#
b100110 i#
b100111 i#
b101000 i#
b101001 i#
b101010 i#
b101011 i#
b101100 i#
b101101 i#
b101110 i#
b101111 i#
b110000 i#
b110001 i#
b110010 i#
b110011 i#
b110100 i#
b110101 i#
b110110 i#
b110111 i#
b111000 i#
b111001 i#
b111010 i#
b111011 i#
b111100 i#
b111101 i#
b111110 i#
b111111 i#
b1000000 i#
b1000001 i#
b1000010 i#
b1000011 i#
b1000100 i#
b1000101 i#
b1000110 i#
b1000111 i#
b1001000 i#
b1001001 i#
b1001010 i#
b1001011 i#
b1001100 i#
b1001101 i#
b1001110 i#
b1001111 i#
b1010000 i#
b1010001 i#
b1010010 i#
b1010011 i#
b1010100 i#
b1010101 i#
b1010110 i#
b1010111 i#
b1011000 i#
b1011001 i#
b1011010 i#
b1011011 i#
b1011100 i#
b1011101 i#
b1011110 i#
b1011111 i#
b1100000 i#
b1100001 i#
b1100010 i#
b1100011 i#
b1100100 i#
b1100101 i#
b1100110 i#
b1100111 i#
b1101000 i#
b1101001 i#
b1101010 i#
b1101011 i#
b1101100 i#
b1101101 i#
b1101110 i#
b1101111 i#
b1110000 i#
b1110001 i#
b1110010 i#
b1110011 i#
b1110100 i#
b1110101 i#
b1110110 i#
b1110111 i#
b1111000 i#
b1111001 i#
b1111010 i#
b1111011 i#
b1111100 i#
b1111101 i#
b1111110 i#
b1111111 i#
b10000000 i#
b10000001 i#
b10000010 i#
b10000011 i#
b10000100 i#
b10000101 i#
b10000110 i#
b10000111 i#
b10001000 i#
b10001001 i#
b10001010 i#
b10001011 i#
b10001100 i#
b10001101 i#
b10001110 i#
b10001111 i#
b10010000 i#
b10010001 i#
b10010010 i#
b10010011 i#
b10010100 i#
b10010101 i#
b10010110 i#
b10010111 i#
b10011000 i#
b10011001 i#
b10011010 i#
b10011011 i#
b10011100 i#
b10011101 i#
b10011110 i#
b10011111 i#
b10100000 i#
b10100001 i#
b10100010 i#
b10100011 i#
b10100100 i#
b10100101 i#
b10100110 i#
b10100111 i#
b10101000 i#
b10101001 i#
b10101010 i#
b10101011 i#
b10101100 i#
b10101101 i#
b10101110 i#
b10101111 i#
b10110000 i#
b10110001 i#
b10110010 i#
b10110011 i#
b10110100 i#
b10110101 i#
b10110110 i#
b10110111 i#
b10111000 i#
b10111001 i#
b10111010 i#
b10111011 i#
b10111100 i#
b10111101 i#
b10111110 i#
b10111111 i#
b11000000 i#
b11000001 i#
b11000010 i#
b11000011 i#
b11000100 i#
b11000101 i#
b11000110 i#
b11000111 i#
b11001000 i#
b11001001 i#
b11001010 i#
b11001011 i#
b11001100 i#
b11001101 i#
b11001110 i#
b11001111 i#
b11010000 i#
b11010001 i#
b11010010 i#
b11010011 i#
b11010100 i#
b11010101 i#
b11010110 i#
b11010111 i#
b11011000 i#
b11011001 i#
b11011010 i#
b11011011 i#
b11011100 i#
b11011101 i#
b11011110 i#
b11011111 i#
b11100000 i#
b11100001 i#
b11100010 i#
b11100011 i#
b11100100 i#
b11100101 i#
b11100110 i#
b11100111 i#
b11101000 i#
b11101001 i#
b11101010 i#
b11101011 i#
b11101100 i#
b11101101 i#
b11101110 i#
b11101111 i#
b11110000 i#
b11110001 i#
b11110010 i#
b11110011 i#
b11110100 i#
b11110101 i#
b11110110 i#
b11110111 i#
b11111000 i#
b11111001 i#
b11111010 i#
b11111011 i#
b11111100 i#
b11111101 i#
b11111110 i#
b11111111 i#
b100000000 i#
b0 l#
b1 l#
b10 l#
b11 l#
b100 l#
b101 l#
b110 l#
b111 l#
b1000 l#
b1001 l#
b1010 l#
b1011 l#
b1100 l#
b1101 l#
b1110 l#
b1111 l#
b10000 l#
b10001 l#
b10010 l#
b10011 l#
b10100 l#
b10101 l#
b10110 l#
b10111 l#
b11000 l#
b11001 l#
b11010 l#
b11011 l#
b11100 l#
b11101 l#
b11110 l#
b11111 l#
b100000 l#
b100001 l#
b100010 l#
b100011 l#
b100100 l#
b100101 l#
b100110 l#
b100111 l#
b101000 l#
b101001 l#
b101010 l#
b101011 l#
b101100 l#
b101101 l#
b101110 l#
b101111 l#
b110000 l#
b110001 l#
b110010 l#
b110011 l#
b110100 l#
b110101 l#
b110110 l#
b110111 l#
b111000 l#
b111001 l#
b111010 l#
b111011 l#
b111100 l#
b111101 l#
b111110 l#
b111111 l#
b1000000 l#
b1000001 l#
b1000010 l#
b1000011 l#
b1000100 l#
b1000101 l#
b1000110 l#
b1000111 l#
b1001000 l#
b1001001 l#
b1001010 l#
b1001011 l#
b1001100 l#
b1001101 l#
b1001110 l#
b1001111 l#
b1010000 l#
b1010001 l#
b1010010 l#
b1010011 l#
b1010100 l#
b1010101 l#
b1010110 l#
b1010111 l#
b1011000 l#
b1011001 l#
b1011010 l#
b1011011 l#
b1011100 l#
b1011101 l#
b1011110 l#
b1011111 l#
b1100000 l#
b1100001 l#
b1100010 l#
b1100011 l#
b1100100 l#
b1100101 l#
b1100110 l#
b1100111 l#
b1101000 l#
b1101001 l#
b1101010 l#
b1101011 l#
b1101100 l#
b1101101 l#
b1101110 l#
b1101111 l#
b1110000 l#
b1110001 l#
b1110010 l#
b1110011 l#
b1110100 l#
b1110101 l#
b1110110 l#
b1110111 l#
b1111000 l#
b1111001 l#
b1111010 l#
b1111011 l#
b1111100 l#
b1111101 l#
b1111110 l#
b1111111 l#
b10000000 l#
b10000001 l#
b10000010 l#
b10000011 l#
b10000100 l#
b10000101 l#
b10000110 l#
b10000111 l#
b10001000 l#
b10001001 l#
b10001010 l#
b10001011 l#
b10001100 l#
b10001101 l#
b10001110 l#
b10001111 l#
b10010000 l#
b10010001 l#
b10010010 l#
b10010011 l#
b10010100 l#
b10010101 l#
b10010110 l#
b10010111 l#
b10011000 l#
b10011001 l#
b10011010 l#
b10011011 l#
b10011100 l#
b10011101 l#
b10011110 l#
b10011111 l#
b10100000 l#
b10100001 l#
b10100010 l#
b10100011 l#
b10100100 l#
b10100101 l#
b10100110 l#
b10100111 l#
b10101000 l#
b10101001 l#
b10101010 l#
b10101011 l#
b10101100 l#
b10101101 l#
b10101110 l#
b10101111 l#
b10110000 l#
b10110001 l#
b10110010 l#
b10110011 l#
b10110100 l#
b10110101 l#
b10110110 l#
b10110111 l#
b10111000 l#
b10111001 l#
b10111010 l#
b10111011 l#
b10111100 l#
b10111101 l#
b10111110 l#
b10111111 l#
b11000000 l#
b11000001 l#
b11000010 l#
b11000011 l#
b11000100 l#
b11000101 l#
b11000110 l#
b11000111 l#
b11001000 l#
b11001001 l#
b11001010 l#
b11001011 l#
b11001100 l#
b11001101 l#
b11001110 l#
b11001111 l#
b11010000 l#
b11010001 l#
b11010010 l#
b11010011 l#
b11010100 l#
b11010101 l#
b11010110 l#
b11010111 l#
b11011000 l#
b11011001 l#
b11011010 l#
b11011011 l#
b11011100 l#
b11011101 l#
b11011110 l#
b11011111 l#
b11100000 l#
b11100001 l#
b11100010 l#
b11100011 l#
b11100100 l#
b11100101 l#
b11100110 l#
b11100111 l#
b11101000 l#
b11101001 l#
b11101010 l#
b11101011 l#
b11101100 l#
b11101101 l#
b11101110 l#
b11101111 l#
b11110000 l#
b11110001 l#
b11110010 l#
b11110011 l#
b11110100 l#
b11110101 l#
b11110110 l#
b11110111 l#
b11111000 l#
b11111001 l#
b11111010 l#
b11111011 l#
b11111100 l#
b11111101 l#
b11111110 l#
b11111111 l#
b100000000 l#
b0 n#
b1 n#
b10 n#
b11 n#
b100 n#
b101 n#
b110 n#
b111 n#
b1000 n#
b1001 n#
b1010 n#
b1011 n#
b1100 n#
b1101 n#
b1110 n#
b1111 n#
b10000 n#
b10001 n#
b10010 n#
b10011 n#
b10100 n#
b10101 n#
b10110 n#
b10111 n#
b11000 n#
b11001 n#
b11010 n#
b11011 n#
b11100 n#
b11101 n#
b11110 n#
b11111 n#
b100000 n#
b100001 n#
b100010 n#
b100011 n#
b100100 n#
b100101 n#
b100110 n#
b100111 n#
b101000 n#
b101001 n#
b101010 n#
b101011 n#
b101100 n#
b101101 n#
b101110 n#
b101111 n#
b110000 n#
b110001 n#
b110010 n#
b110011 n#
b110100 n#
b110101 n#
b110110 n#
b110111 n#
b111000 n#
b111001 n#
b111010 n#
b111011 n#
b111100 n#
b111101 n#
b111110 n#
b111111 n#
b1000000 n#
b1000001 n#
b1000010 n#
b1000011 n#
b1000100 n#
b1000101 n#
b1000110 n#
b1000111 n#
b1001000 n#
b1001001 n#
b1001010 n#
b1001011 n#
b1001100 n#
b1001101 n#
b1001110 n#
b1001111 n#
b1010000 n#
b1010001 n#
b1010010 n#
b1010011 n#
b1010100 n#
b1010101 n#
b1010110 n#
b1010111 n#
b1011000 n#
b1011001 n#
b1011010 n#
b1011011 n#
b1011100 n#
b1011101 n#
b1011110 n#
b1011111 n#
b1100000 n#
b1100001 n#
b1100010 n#
b1100011 n#
b1100100 n#
b1100101 n#
b1100110 n#
b1100111 n#
b1101000 n#
b1101001 n#
b1101010 n#
b1101011 n#
b1101100 n#
b1101101 n#
b1101110 n#
b1101111 n#
b1110000 n#
b1110001 n#
b1110010 n#
b1110011 n#
b1110100 n#
b1110101 n#
b1110110 n#
b1110111 n#
b1111000 n#
b1111001 n#
b1111010 n#
b1111011 n#
b1111100 n#
b1111101 n#
b1111110 n#
b1111111 n#
b10000000 n#
b10000001 n#
b10000010 n#
b10000011 n#
b10000100 n#
b10000101 n#
b10000110 n#
b10000111 n#
b10001000 n#
b10001001 n#
b10001010 n#
b10001011 n#
b10001100 n#
b10001101 n#
b10001110 n#
b10001111 n#
b10010000 n#
b10010001 n#
b10010010 n#
b10010011 n#
b10010100 n#
b10010101 n#
b10010110 n#
b10010111 n#
b10011000 n#
b10011001 n#
b10011010 n#
b10011011 n#
b10011100 n#
b10011101 n#
b10011110 n#
b10011111 n#
b10100000 n#
b10100001 n#
b10100010 n#
b10100011 n#
b10100100 n#
b10100101 n#
b10100110 n#
b10100111 n#
b10101000 n#
b10101001 n#
b10101010 n#
b10101011 n#
b10101100 n#
b10101101 n#
b10101110 n#
b10101111 n#
b10110000 n#
b10110001 n#
b10110010 n#
b10110011 n#
b10110100 n#
b10110101 n#
b10110110 n#
b10110111 n#
b10111000 n#
b10111001 n#
b10111010 n#
b10111011 n#
b10111100 n#
b10111101 n#
b10111110 n#
b10111111 n#
b11000000 n#
b11000001 n#
b11000010 n#
b11000011 n#
b11000100 n#
b11000101 n#
b11000110 n#
b11000111 n#
b11001000 n#
b11001001 n#
b11001010 n#
b11001011 n#
b11001100 n#
b11001101 n#
b11001110 n#
b11001111 n#
b11010000 n#
b11010001 n#
b11010010 n#
b11010011 n#
b11010100 n#
b11010101 n#
b11010110 n#
b11010111 n#
b11011000 n#
b11011001 n#
b11011010 n#
b11011011 n#
b11011100 n#
b11011101 n#
b11011110 n#
b11011111 n#
b11100000 n#
b11100001 n#
b11100010 n#
b11100011 n#
b11100100 n#
b11100101 n#
b11100110 n#
b11100111 n#
b11101000 n#
b11101001 n#
b11101010 n#
b11101011 n#
b11101100 n#
b11101101 n#
b11101110 n#
b11101111 n#
b11110000 n#
b11110001 n#
b11110010 n#
b11110011 n#
b11110100 n#
b11110101 n#
b11110110 n#
b11110111 n#
b11111000 n#
b11111001 n#
b11111010 n#
b11111011 n#
b11111100 n#
b11111101 n#
b11111110 n#
b11111111 n#
b100000000 n#
b0 ~$
b1 ~$
b10 ~$
b11 ~$
b100 ~$
b101 ~$
b110 ~$
b111 ~$
b1000 ~$
b1001 ~$
b1010 ~$
b1011 ~$
b1100 ~$
b1101 ~$
b1110 ~$
b1111 ~$
b10000 ~$
b10001 ~$
b10010 ~$
b10011 ~$
b10100 ~$
b10101 ~$
b10110 ~$
b10111 ~$
b11000 ~$
b11001 ~$
b11010 ~$
b11011 ~$
b11100 ~$
b11101 ~$
b11110 ~$
b11111 ~$
b100000 ~$
b100001 ~$
b100010 ~$
b100011 ~$
b100100 ~$
b100101 ~$
b100110 ~$
b100111 ~$
b101000 ~$
b101001 ~$
b101010 ~$
b101011 ~$
b101100 ~$
b101101 ~$
b101110 ~$
b101111 ~$
b110000 ~$
b110001 ~$
b110010 ~$
b110011 ~$
b110100 ~$
b110101 ~$
b110110 ~$
b110111 ~$
b111000 ~$
b111001 ~$
b111010 ~$
b111011 ~$
b111100 ~$
b111101 ~$
b111110 ~$
b111111 ~$
b1000000 ~$
b1000001 ~$
b1000010 ~$
b1000011 ~$
b1000100 ~$
b1000101 ~$
b1000110 ~$
b1000111 ~$
b1001000 ~$
b1001001 ~$
b1001010 ~$
b1001011 ~$
b1001100 ~$
b1001101 ~$
b1001110 ~$
b1001111 ~$
b1010000 ~$
b1010001 ~$
b1010010 ~$
b1010011 ~$
b1010100 ~$
b1010101 ~$
b1010110 ~$
b1010111 ~$
b1011000 ~$
b1011001 ~$
b1011010 ~$
b1011011 ~$
b1011100 ~$
b1011101 ~$
b1011110 ~$
b1011111 ~$
b1100000 ~$
b1100001 ~$
b1100010 ~$
b1100011 ~$
b1100100 ~$
b1100101 ~$
b1100110 ~$
b1100111 ~$
b1101000 ~$
b1101001 ~$
b1101010 ~$
b1101011 ~$
b1101100 ~$
b1101101 ~$
b1101110 ~$
b1101111 ~$
b1110000 ~$
b1110001 ~$
b1110010 ~$
b1110011 ~$
b1110100 ~$
b1110101 ~$
b1110110 ~$
b1110111 ~$
b1111000 ~$
b1111001 ~$
b1111010 ~$
b1111011 ~$
b1111100 ~$
b1111101 ~$
b1111110 ~$
b1111111 ~$
b10000000 ~$
b10000001 ~$
b10000010 ~$
b10000011 ~$
b10000100 ~$
b10000101 ~$
b10000110 ~$
b10000111 ~$
b10001000 ~$
b10001001 ~$
b10001010 ~$
b10001011 ~$
b10001100 ~$
b10001101 ~$
b10001110 ~$
b10001111 ~$
b10010000 ~$
b10010001 ~$
b10010010 ~$
b10010011 ~$
b10010100 ~$
b10010101 ~$
b10010110 ~$
b10010111 ~$
b10011000 ~$
b10011001 ~$
b10011010 ~$
b10011011 ~$
b10011100 ~$
b10011101 ~$
b10011110 ~$
b10011111 ~$
b10100000 ~$
b10100001 ~$
b10100010 ~$
b10100011 ~$
b10100100 ~$
b10100101 ~$
b10100110 ~$
b10100111 ~$
b10101000 ~$
b10101001 ~$
b10101010 ~$
b10101011 ~$
b10101100 ~$
b10101101 ~$
b10101110 ~$
b10101111 ~$
b10110000 ~$
b10110001 ~$
b10110010 ~$
b10110011 ~$
b10110100 ~$
b10110101 ~$
b10110110 ~$
b10110111 ~$
b10111000 ~$
b10111001 ~$
b10111010 ~$
b10111011 ~$
b10111100 ~$
b10111101 ~$
b10111110 ~$
b10111111 ~$
b11000000 ~$
b11000001 ~$
b11000010 ~$
b11000011 ~$
b11000100 ~$
b11000101 ~$
b11000110 ~$
b11000111 ~$
b11001000 ~$
b11001001 ~$
b11001010 ~$
b11001011 ~$
b11001100 ~$
b11001101 ~$
b11001110 ~$
b11001111 ~$
b11010000 ~$
b11010001 ~$
b11010010 ~$
b11010011 ~$
b11010100 ~$
b11010101 ~$
b11010110 ~$
b11010111 ~$
b11011000 ~$
b11011001 ~$
b11011010 ~$
b11011011 ~$
b11011100 ~$
b11011101 ~$
b11011110 ~$
b11011111 ~$
b11100000 ~$
b11100001 ~$
b11100010 ~$
b11100011 ~$
b11100100 ~$
b11100101 ~$
b11100110 ~$
b11100111 ~$
b11101000 ~$
b11101001 ~$
b11101010 ~$
b11101011 ~$
b11101100 ~$
b11101101 ~$
b11101110 ~$
b11101111 ~$
b11110000 ~$
b11110001 ~$
b11110010 ~$
b11110011 ~$
b11110100 ~$
b11110101 ~$
b11110110 ~$
b11110111 ~$
b11111000 ~$
b11111001 ~$
b11111010 ~$
b11111011 ~$
b11111100 ~$
b11111101 ~$
b11111110 ~$
b11111111 ~$
b100000000 ~$
b0 #%
b1 #%
b10 #%
b11 #%
b100 #%
b101 #%
b110 #%
b111 #%
b1000 #%
b1001 #%
b1010 #%
b1011 #%
b1100 #%
b1101 #%
b1110 #%
b1111 #%
b10000 #%
b10001 #%
b10010 #%
b10011 #%
b10100 #%
b10101 #%
b10110 #%
b10111 #%
b11000 #%
b11001 #%
b11010 #%
b11011 #%
b11100 #%
b11101 #%
b11110 #%
b11111 #%
b100000 #%
b100001 #%
b100010 #%
b100011 #%
b100100 #%
b100101 #%
b100110 #%
b100111 #%
b101000 #%
b101001 #%
b101010 #%
b101011 #%
b101100 #%
b101101 #%
b101110 #%
b101111 #%
b110000 #%
b110001 #%
b110010 #%
b110011 #%
b110100 #%
b110101 #%
b110110 #%
b110111 #%
b111000 #%
b111001 #%
b111010 #%
b111011 #%
b111100 #%
b111101 #%
b111110 #%
b111111 #%
b1000000 #%
b1000001 #%
b1000010 #%
b1000011 #%
b1000100 #%
b1000101 #%
b1000110 #%
b1000111 #%
b1001000 #%
b1001001 #%
b1001010 #%
b1001011 #%
b1001100 #%
b1001101 #%
b1001110 #%
b1001111 #%
b1010000 #%
b1010001 #%
b1010010 #%
b1010011 #%
b1010100 #%
b1010101 #%
b1010110 #%
b1010111 #%
b1011000 #%
b1011001 #%
b1011010 #%
b1011011 #%
b1011100 #%
b1011101 #%
b1011110 #%
b1011111 #%
b1100000 #%
b1100001 #%
b1100010 #%
b1100011 #%
b1100100 #%
b1100101 #%
b1100110 #%
b1100111 #%
b1101000 #%
b1101001 #%
b1101010 #%
b1101011 #%
b1101100 #%
b1101101 #%
b1101110 #%
b1101111 #%
b1110000 #%
b1110001 #%
b1110010 #%
b1110011 #%
b1110100 #%
b1110101 #%
b1110110 #%
b1110111 #%
b1111000 #%
b1111001 #%
b1111010 #%
b1111011 #%
b1111100 #%
b1111101 #%
b1111110 #%
b1111111 #%
b10000000 #%
b10000001 #%
b10000010 #%
b10000011 #%
b10000100 #%
b10000101 #%
b10000110 #%
b10000111 #%
b10001000 #%
b10001001 #%
b10001010 #%
b10001011 #%
b10001100 #%
b10001101 #%
b10001110 #%
b10001111 #%
b10010000 #%
b10010001 #%
b10010010 #%
b10010011 #%
b10010100 #%
b10010101 #%
b10010110 #%
b10010111 #%
b10011000 #%
b10011001 #%
b10011010 #%
b10011011 #%
b10011100 #%
b10011101 #%
b10011110 #%
b10011111 #%
b10100000 #%
b10100001 #%
b10100010 #%
b10100011 #%
b10100100 #%
b10100101 #%
b10100110 #%
b10100111 #%
b10101000 #%
b10101001 #%
b10101010 #%
b10101011 #%
b10101100 #%
b10101101 #%
b10101110 #%
b10101111 #%
b10110000 #%
b10110001 #%
b10110010 #%
b10110011 #%
b10110100 #%
b10110101 #%
b10110110 #%
b10110111 #%
b10111000 #%
b10111001 #%
b10111010 #%
b10111011 #%
b10111100 #%
b10111101 #%
b10111110 #%
b10111111 #%
b11000000 #%
b11000001 #%
b11000010 #%
b11000011 #%
b11000100 #%
b11000101 #%
b11000110 #%
b11000111 #%
b11001000 #%
b11001001 #%
b11001010 #%
b11001011 #%
b11001100 #%
b11001101 #%
b11001110 #%
b11001111 #%
b11010000 #%
b11010001 #%
b11010010 #%
b11010011 #%
b11010100 #%
b11010101 #%
b11010110 #%
b11010111 #%
b11011000 #%
b11011001 #%
b11011010 #%
b11011011 #%
b11011100 #%
b11011101 #%
b11011110 #%
b11011111 #%
b11100000 #%
b11100001 #%
b11100010 #%
b11100011 #%
b11100100 #%
b11100101 #%
b11100110 #%
b11100111 #%
b11101000 #%
b11101001 #%
b11101010 #%
b11101011 #%
b11101100 #%
b11101101 #%
b11101110 #%
b11101111 #%
b11110000 #%
b11110001 #%
b11110010 #%
b11110011 #%
b11110100 #%
b11110101 #%
b11110110 #%
b11110111 #%
b11111000 #%
b11111001 #%
b11111010 #%
b11111011 #%
b11111100 #%
b11111101 #%
b11111110 #%
b11111111 #%
b100000000 #%
b0 &%
b1 &%
b10 &%
b11 &%
b100 &%
b101 &%
b110 &%
b111 &%
b1000 &%
b1001 &%
b1010 &%
b1011 &%
b1100 &%
b1101 &%
b1110 &%
b1111 &%
b10000 &%
b10001 &%
b10010 &%
b10011 &%
b10100 &%
b10101 &%
b10110 &%
b10111 &%
b11000 &%
b11001 &%
b11010 &%
b11011 &%
b11100 &%
b11101 &%
b11110 &%
b11111 &%
b100000 &%
b100001 &%
b100010 &%
b100011 &%
b100100 &%
b100101 &%
b100110 &%
b100111 &%
b101000 &%
b101001 &%
b101010 &%
b101011 &%
b101100 &%
b101101 &%
b101110 &%
b101111 &%
b110000 &%
b110001 &%
b110010 &%
b110011 &%
b110100 &%
b110101 &%
b110110 &%
b110111 &%
b111000 &%
b111001 &%
b111010 &%
b111011 &%
b111100 &%
b111101 &%
b111110 &%
b111111 &%
b1000000 &%
b1000001 &%
b1000010 &%
b1000011 &%
b1000100 &%
b1000101 &%
b1000110 &%
b1000111 &%
b1001000 &%
b1001001 &%
b1001010 &%
b1001011 &%
b1001100 &%
b1001101 &%
b1001110 &%
b1001111 &%
b1010000 &%
b1010001 &%
b1010010 &%
b1010011 &%
b1010100 &%
b1010101 &%
b1010110 &%
b1010111 &%
b1011000 &%
b1011001 &%
b1011010 &%
b1011011 &%
b1011100 &%
b1011101 &%
b1011110 &%
b1011111 &%
b1100000 &%
b1100001 &%
b1100010 &%
b1100011 &%
b1100100 &%
b1100101 &%
b1100110 &%
b1100111 &%
b1101000 &%
b1101001 &%
b1101010 &%
b1101011 &%
b1101100 &%
b1101101 &%
b1101110 &%
b1101111 &%
b1110000 &%
b1110001 &%
b1110010 &%
b1110011 &%
b1110100 &%
b1110101 &%
b1110110 &%
b1110111 &%
b1111000 &%
b1111001 &%
b1111010 &%
b1111011 &%
b1111100 &%
b1111101 &%
b1111110 &%
b1111111 &%
b10000000 &%
b10000001 &%
b10000010 &%
b10000011 &%
b10000100 &%
b10000101 &%
b10000110 &%
b10000111 &%
b10001000 &%
b10001001 &%
b10001010 &%
b10001011 &%
b10001100 &%
b10001101 &%
b10001110 &%
b10001111 &%
b10010000 &%
b10010001 &%
b10010010 &%
b10010011 &%
b10010100 &%
b10010101 &%
b10010110 &%
b10010111 &%
b10011000 &%
b10011001 &%
b10011010 &%
b10011011 &%
b10011100 &%
b10011101 &%
b10011110 &%
b10011111 &%
b10100000 &%
b10100001 &%
b10100010 &%
b10100011 &%
b10100100 &%
b10100101 &%
b10100110 &%
b10100111 &%
b10101000 &%
b10101001 &%
b10101010 &%
b10101011 &%
b10101100 &%
b10101101 &%
b10101110 &%
b10101111 &%
b10110000 &%
b10110001 &%
b10110010 &%
b10110011 &%
b10110100 &%
b10110101 &%
b10110110 &%
b10110111 &%
b10111000 &%
b10111001 &%
b10111010 &%
b10111011 &%
b10111100 &%
b10111101 &%
b10111110 &%
b10111111 &%
b11000000 &%
b11000001 &%
b11000010 &%
b11000011 &%
b11000100 &%
b11000101 &%
b11000110 &%
b11000111 &%
b11001000 &%
b11001001 &%
b11001010 &%
b11001011 &%
b11001100 &%
b11001101 &%
b11001110 &%
b11001111 &%
b11010000 &%
b11010001 &%
b11010010 &%
b11010011 &%
b11010100 &%
b11010101 &%
b11010110 &%
b11010111 &%
b11011000 &%
b11011001 &%
b11011010 &%
b11011011 &%
b11011100 &%
b11011101 &%
b11011110 &%
b11011111 &%
b11100000 &%
b11100001 &%
b11100010 &%
b11100011 &%
b11100100 &%
b11100101 &%
b11100110 &%
b11100111 &%
b11101000 &%
b11101001 &%
b11101010 &%
b11101011 &%
b11101100 &%
b11101101 &%
b11101110 &%
b11101111 &%
b11110000 &%
b11110001 &%
b11110010 &%
b11110011 &%
b11110100 &%
b11110101 &%
b11110110 &%
b11110111 &%
b11111000 &%
b11111001 &%
b11111010 &%
b11111011 &%
b11111100 &%
b11111101 &%
b11111110 &%
b11111111 &%
b100000000 &%
b0 )%
b1 )%
b10 )%
b11 )%
b100 )%
b101 )%
b110 )%
b111 )%
b1000 )%
b1001 )%
b1010 )%
b1011 )%
b1100 )%
b1101 )%
b1110 )%
b1111 )%
b10000 )%
b10001 )%
b10010 )%
b10011 )%
b10100 )%
b10101 )%
b10110 )%
b10111 )%
b11000 )%
b11001 )%
b11010 )%
b11011 )%
b11100 )%
b11101 )%
b11110 )%
b11111 )%
b100000 )%
b100001 )%
b100010 )%
b100011 )%
b100100 )%
b100101 )%
b100110 )%
b100111 )%
b101000 )%
b101001 )%
b101010 )%
b101011 )%
b101100 )%
b101101 )%
b101110 )%
b101111 )%
b110000 )%
b110001 )%
b110010 )%
b110011 )%
b110100 )%
b110101 )%
b110110 )%
b110111 )%
b111000 )%
b111001 )%
b111010 )%
b111011 )%
b111100 )%
b111101 )%
b111110 )%
b111111 )%
b1000000 )%
b1000001 )%
b1000010 )%
b1000011 )%
b1000100 )%
b1000101 )%
b1000110 )%
b1000111 )%
b1001000 )%
b1001001 )%
b1001010 )%
b1001011 )%
b1001100 )%
b1001101 )%
b1001110 )%
b1001111 )%
b1010000 )%
b1010001 )%
b1010010 )%
b1010011 )%
b1010100 )%
b1010101 )%
b1010110 )%
b1010111 )%
b1011000 )%
b1011001 )%
b1011010 )%
b1011011 )%
b1011100 )%
b1011101 )%
b1011110 )%
b1011111 )%
b1100000 )%
b1100001 )%
b1100010 )%
b1100011 )%
b1100100 )%
b1100101 )%
b1100110 )%
b1100111 )%
b1101000 )%
b1101001 )%
b1101010 )%
b1101011 )%
b1101100 )%
b1101101 )%
b1101110 )%
b1101111 )%
b1110000 )%
b1110001 )%
b1110010 )%
b1110011 )%
b1110100 )%
b1110101 )%
b1110110 )%
b1110111 )%
b1111000 )%
b1111001 )%
b1111010 )%
b1111011 )%
b1111100 )%
b1111101 )%
b1111110 )%
b1111111 )%
b10000000 )%
b10000001 )%
b10000010 )%
b10000011 )%
b10000100 )%
b10000101 )%
b10000110 )%
b10000111 )%
b10001000 )%
b10001001 )%
b10001010 )%
b10001011 )%
b10001100 )%
b10001101 )%
b10001110 )%
b10001111 )%
b10010000 )%
b10010001 )%
b10010010 )%
b10010011 )%
b10010100 )%
b10010101 )%
b10010110 )%
b10010111 )%
b10011000 )%
b10011001 )%
b10011010 )%
b10011011 )%
b10011100 )%
b10011101 )%
b10011110 )%
b10011111 )%
b10100000 )%
b10100001 )%
b10100010 )%
b10100011 )%
b10100100 )%
b10100101 )%
b10100110 )%
b10100111 )%
b10101000 )%
b10101001 )%
b10101010 )%
b10101011 )%
b10101100 )%
b10101101 )%
b10101110 )%
b10101111 )%
b10110000 )%
b10110001 )%
b10110010 )%
b10110011 )%
b10110100 )%
b10110101 )%
b10110110 )%
b10110111 )%
b10111000 )%
b10111001 )%
b10111010 )%
b10111011 )%
b10111100 )%
b10111101 )%
b10111110 )%
b10111111 )%
b11000000 )%
b11000001 )%
b11000010 )%
b11000011 )%
b11000100 )%
b11000101 )%
b11000110 )%
b11000111 )%
b11001000 )%
b11001001 )%
b11001010 )%
b11001011 )%
b11001100 )%
b11001101 )%
b11001110 )%
b11001111 )%
b11010000 )%
b11010001 )%
b11010010 )%
b11010011 )%
b11010100 )%
b11010101 )%
b11010110 )%
b11010111 )%
b11011000 )%
b11011001 )%
b11011010 )%
b11011011 )%
b11011100 )%
b11011101 )%
b11011110 )%
b11011111 )%
b11100000 )%
b11100001 )%
b11100010 )%
b11100011 )%
b11100100 )%
b11100101 )%
b11100110 )%
b11100111 )%
b11101000 )%
b11101001 )%
b11101010 )%
b11101011 )%
b11101100 )%
b11101101 )%
b11101110 )%
b11101111 )%
b11110000 )%
b11110001 )%
b11110010 )%
b11110011 )%
b11110100 )%
b11110101 )%
b11110110 )%
b11110111 )%
b11111000 )%
b11111001 )%
b11111010 )%
b11111011 )%
b11111100 )%
b11111101 )%
b11111110 )%
b11111111 )%
b100000000 )%
b0 ,%
b1 ,%
b10 ,%
b11 ,%
b100 ,%
b101 ,%
b110 ,%
b111 ,%
b1000 ,%
b1001 ,%
b1010 ,%
b1011 ,%
b1100 ,%
b1101 ,%
b1110 ,%
b1111 ,%
b10000 ,%
b10001 ,%
b10010 ,%
b10011 ,%
b10100 ,%
b10101 ,%
b10110 ,%
b10111 ,%
b11000 ,%
b11001 ,%
b11010 ,%
b11011 ,%
b11100 ,%
b11101 ,%
b11110 ,%
b11111 ,%
b100000 ,%
b100001 ,%
b100010 ,%
b100011 ,%
b100100 ,%
b100101 ,%
b100110 ,%
b100111 ,%
b101000 ,%
b101001 ,%
b101010 ,%
b101011 ,%
b101100 ,%
b101101 ,%
b101110 ,%
b101111 ,%
b110000 ,%
b110001 ,%
b110010 ,%
b110011 ,%
b110100 ,%
b110101 ,%
b110110 ,%
b110111 ,%
b111000 ,%
b111001 ,%
b111010 ,%
b111011 ,%
b111100 ,%
b111101 ,%
b111110 ,%
b111111 ,%
b1000000 ,%
b1000001 ,%
b1000010 ,%
b1000011 ,%
b1000100 ,%
b1000101 ,%
b1000110 ,%
b1000111 ,%
b1001000 ,%
b1001001 ,%
b1001010 ,%
b1001011 ,%
b1001100 ,%
b1001101 ,%
b1001110 ,%
b1001111 ,%
b1010000 ,%
b1010001 ,%
b1010010 ,%
b1010011 ,%
b1010100 ,%
b1010101 ,%
b1010110 ,%
b1010111 ,%
b1011000 ,%
b1011001 ,%
b1011010 ,%
b1011011 ,%
b1011100 ,%
b1011101 ,%
b1011110 ,%
b1011111 ,%
b1100000 ,%
b1100001 ,%
b1100010 ,%
b1100011 ,%
b1100100 ,%
b1100101 ,%
b1100110 ,%
b1100111 ,%
b1101000 ,%
b1101001 ,%
b1101010 ,%
b1101011 ,%
b1101100 ,%
b1101101 ,%
b1101110 ,%
b1101111 ,%
b1110000 ,%
b1110001 ,%
b1110010 ,%
b1110011 ,%
b1110100 ,%
b1110101 ,%
b1110110 ,%
b1110111 ,%
b1111000 ,%
b1111001 ,%
b1111010 ,%
b1111011 ,%
b1111100 ,%
b1111101 ,%
b1111110 ,%
b1111111 ,%
b10000000 ,%
b10000001 ,%
b10000010 ,%
b10000011 ,%
b10000100 ,%
b10000101 ,%
b10000110 ,%
b10000111 ,%
b10001000 ,%
b10001001 ,%
b10001010 ,%
b10001011 ,%
b10001100 ,%
b10001101 ,%
b10001110 ,%
b10001111 ,%
b10010000 ,%
b10010001 ,%
b10010010 ,%
b10010011 ,%
b10010100 ,%
b10010101 ,%
b10010110 ,%
b10010111 ,%
b10011000 ,%
b10011001 ,%
b10011010 ,%
b10011011 ,%
b10011100 ,%
b10011101 ,%
b10011110 ,%
b10011111 ,%
b10100000 ,%
b10100001 ,%
b10100010 ,%
b10100011 ,%
b10100100 ,%
b10100101 ,%
b10100110 ,%
b10100111 ,%
b10101000 ,%
b10101001 ,%
b10101010 ,%
b10101011 ,%
b10101100 ,%
b10101101 ,%
b10101110 ,%
b10101111 ,%
b10110000 ,%
b10110001 ,%
b10110010 ,%
b10110011 ,%
b10110100 ,%
b10110101 ,%
b10110110 ,%
b10110111 ,%
b10111000 ,%
b10111001 ,%
b10111010 ,%
b10111011 ,%
b10111100 ,%
b10111101 ,%
b10111110 ,%
b10111111 ,%
b11000000 ,%
b11000001 ,%
b11000010 ,%
b11000011 ,%
b11000100 ,%
b11000101 ,%
b11000110 ,%
b11000111 ,%
b11001000 ,%
b11001001 ,%
b11001010 ,%
b11001011 ,%
b11001100 ,%
b11001101 ,%
b11001110 ,%
b11001111 ,%
b11010000 ,%
b11010001 ,%
b11010010 ,%
b11010011 ,%
b11010100 ,%
b11010101 ,%
b11010110 ,%
b11010111 ,%
b11011000 ,%
b11011001 ,%
b11011010 ,%
b11011011 ,%
b11011100 ,%
b11011101 ,%
b11011110 ,%
b11011111 ,%
b11100000 ,%
b11100001 ,%
b11100010 ,%
b11100011 ,%
b11100100 ,%
b11100101 ,%
b11100110 ,%
b11100111 ,%
b11101000 ,%
b11101001 ,%
b11101010 ,%
b11101011 ,%
b11101100 ,%
b11101101 ,%
b11101110 ,%
b11101111 ,%
b11110000 ,%
b11110001 ,%
b11110010 ,%
b11110011 ,%
b11110100 ,%
b11110101 ,%
b11110110 ,%
b11110111 ,%
b11111000 ,%
b11111001 ,%
b11111010 ,%
b11111011 ,%
b11111100 ,%
b11111101 ,%
b11111110 ,%
b11111111 ,%
b100000000 ,%
b0 /%
b1 /%
b10 /%
b11 /%
b100 /%
b101 /%
b110 /%
b111 /%
b1000 /%
b1001 /%
b1010 /%
b1011 /%
b1100 /%
b1101 /%
b1110 /%
b1111 /%
b10000 /%
b10001 /%
b10010 /%
b10011 /%
b10100 /%
b10101 /%
b10110 /%
b10111 /%
b11000 /%
b11001 /%
b11010 /%
b11011 /%
b11100 /%
b11101 /%
b11110 /%
b11111 /%
b100000 /%
b100001 /%
b100010 /%
b100011 /%
b100100 /%
b100101 /%
b100110 /%
b100111 /%
b101000 /%
b101001 /%
b101010 /%
b101011 /%
b101100 /%
b101101 /%
b101110 /%
b101111 /%
b110000 /%
b110001 /%
b110010 /%
b110011 /%
b110100 /%
b110101 /%
b110110 /%
b110111 /%
b111000 /%
b111001 /%
b111010 /%
b111011 /%
b111100 /%
b111101 /%
b111110 /%
b111111 /%
b1000000 /%
b1000001 /%
b1000010 /%
b1000011 /%
b1000100 /%
b1000101 /%
b1000110 /%
b1000111 /%
b1001000 /%
b1001001 /%
b1001010 /%
b1001011 /%
b1001100 /%
b1001101 /%
b1001110 /%
b1001111 /%
b1010000 /%
b1010001 /%
b1010010 /%
b1010011 /%
b1010100 /%
b1010101 /%
b1010110 /%
b1010111 /%
b1011000 /%
b1011001 /%
b1011010 /%
b1011011 /%
b1011100 /%
b1011101 /%
b1011110 /%
b1011111 /%
b1100000 /%
b1100001 /%
b1100010 /%
b1100011 /%
b1100100 /%
b1100101 /%
b1100110 /%
b1100111 /%
b1101000 /%
b1101001 /%
b1101010 /%
b1101011 /%
b1101100 /%
b1101101 /%
b1101110 /%
b1101111 /%
b1110000 /%
b1110001 /%
b1110010 /%
b1110011 /%
b1110100 /%
b1110101 /%
b1110110 /%
b1110111 /%
b1111000 /%
b1111001 /%
b1111010 /%
b1111011 /%
b1111100 /%
b1111101 /%
b1111110 /%
b1111111 /%
b10000000 /%
b10000001 /%
b10000010 /%
b10000011 /%
b10000100 /%
b10000101 /%
b10000110 /%
b10000111 /%
b10001000 /%
b10001001 /%
b10001010 /%
b10001011 /%
b10001100 /%
b10001101 /%
b10001110 /%
b10001111 /%
b10010000 /%
b10010001 /%
b10010010 /%
b10010011 /%
b10010100 /%
b10010101 /%
b10010110 /%
b10010111 /%
b10011000 /%
b10011001 /%
b10011010 /%
b10011011 /%
b10011100 /%
b10011101 /%
b10011110 /%
b10011111 /%
b10100000 /%
b10100001 /%
b10100010 /%
b10100011 /%
b10100100 /%
b10100101 /%
b10100110 /%
b10100111 /%
b10101000 /%
b10101001 /%
b10101010 /%
b10101011 /%
b10101100 /%
b10101101 /%
b10101110 /%
b10101111 /%
b10110000 /%
b10110001 /%
b10110010 /%
b10110011 /%
b10110100 /%
b10110101 /%
b10110110 /%
b10110111 /%
b10111000 /%
b10111001 /%
b10111010 /%
b10111011 /%
b10111100 /%
b10111101 /%
b10111110 /%
b10111111 /%
b11000000 /%
b11000001 /%
b11000010 /%
b11000011 /%
b11000100 /%
b11000101 /%
b11000110 /%
b11000111 /%
b11001000 /%
b11001001 /%
b11001010 /%
b11001011 /%
b11001100 /%
b11001101 /%
b11001110 /%
b11001111 /%
b11010000 /%
b11010001 /%
b11010010 /%
b11010011 /%
b11010100 /%
b11010101 /%
b11010110 /%
b11010111 /%
b11011000 /%
b11011001 /%
b11011010 /%
b11011011 /%
b11011100 /%
b11011101 /%
b11011110 /%
b11011111 /%
b11100000 /%
b11100001 /%
b11100010 /%
b11100011 /%
b11100100 /%
b11100101 /%
b11100110 /%
b11100111 /%
b11101000 /%
b11101001 /%
b11101010 /%
b11101011 /%
b11101100 /%
b11101101 /%
b11101110 /%
b11101111 /%
b11110000 /%
b11110001 /%
b11110010 /%
b11110011 /%
b11110100 /%
b11110101 /%
b11110110 /%
b11110111 /%
b11111000 /%
b11111001 /%
b11111010 /%
b11111011 /%
b11111100 /%
b11111101 /%
b11111110 /%
b11111111 /%
b100000000 /%
b0 1%
b1 1%
b10 1%
b11 1%
b100 1%
b101 1%
b110 1%
b111 1%
b1000 1%
b1001 1%
b1010 1%
b1011 1%
b1100 1%
b1101 1%
b1110 1%
b1111 1%
b10000 1%
b10001 1%
b10010 1%
b10011 1%
b10100 1%
b10101 1%
b10110 1%
b10111 1%
b11000 1%
b11001 1%
b11010 1%
b11011 1%
b11100 1%
b11101 1%
b11110 1%
b11111 1%
b100000 1%
b100001 1%
b100010 1%
b100011 1%
b100100 1%
b100101 1%
b100110 1%
b100111 1%
b101000 1%
b101001 1%
b101010 1%
b101011 1%
b101100 1%
b101101 1%
b101110 1%
b101111 1%
b110000 1%
b110001 1%
b110010 1%
b110011 1%
b110100 1%
b110101 1%
b110110 1%
b110111 1%
b111000 1%
b111001 1%
b111010 1%
b111011 1%
b111100 1%
b111101 1%
b111110 1%
b111111 1%
b1000000 1%
b1000001 1%
b1000010 1%
b1000011 1%
b1000100 1%
b1000101 1%
b1000110 1%
b1000111 1%
b1001000 1%
b1001001 1%
b1001010 1%
b1001011 1%
b1001100 1%
b1001101 1%
b1001110 1%
b1001111 1%
b1010000 1%
b1010001 1%
b1010010 1%
b1010011 1%
b1010100 1%
b1010101 1%
b1010110 1%
b1010111 1%
b1011000 1%
b1011001 1%
b1011010 1%
b1011011 1%
b1011100 1%
b1011101 1%
b1011110 1%
b1011111 1%
b1100000 1%
b1100001 1%
b1100010 1%
b1100011 1%
b1100100 1%
b1100101 1%
b1100110 1%
b1100111 1%
b1101000 1%
b1101001 1%
b1101010 1%
b1101011 1%
b1101100 1%
b1101101 1%
b1101110 1%
b1101111 1%
b1110000 1%
b1110001 1%
b1110010 1%
b1110011 1%
b1110100 1%
b1110101 1%
b1110110 1%
b1110111 1%
b1111000 1%
b1111001 1%
b1111010 1%
b1111011 1%
b1111100 1%
b1111101 1%
b1111110 1%
b1111111 1%
b10000000 1%
b10000001 1%
b10000010 1%
b10000011 1%
b10000100 1%
b10000101 1%
b10000110 1%
b10000111 1%
b10001000 1%
b10001001 1%
b10001010 1%
b10001011 1%
b10001100 1%
b10001101 1%
b10001110 1%
b10001111 1%
b10010000 1%
b10010001 1%
b10010010 1%
b10010011 1%
b10010100 1%
b10010101 1%
b10010110 1%
b10010111 1%
b10011000 1%
b10011001 1%
b10011010 1%
b10011011 1%
b10011100 1%
b10011101 1%
b10011110 1%
b10011111 1%
b10100000 1%
b10100001 1%
b10100010 1%
b10100011 1%
b10100100 1%
b10100101 1%
b10100110 1%
b10100111 1%
b10101000 1%
b10101001 1%
b10101010 1%
b10101011 1%
b10101100 1%
b10101101 1%
b10101110 1%
b10101111 1%
b10110000 1%
b10110001 1%
b10110010 1%
b10110011 1%
b10110100 1%
b10110101 1%
b10110110 1%
b10110111 1%
b10111000 1%
b10111001 1%
b10111010 1%
b10111011 1%
b10111100 1%
b10111101 1%
b10111110 1%
b10111111 1%
b11000000 1%
b11000001 1%
b11000010 1%
b11000011 1%
b11000100 1%
b11000101 1%
b11000110 1%
b11000111 1%
b11001000 1%
b11001001 1%
b11001010 1%
b11001011 1%
b11001100 1%
b11001101 1%
b11001110 1%
b11001111 1%
b11010000 1%
b11010001 1%
b11010010 1%
b11010011 1%
b11010100 1%
b11010101 1%
b11010110 1%
b11010111 1%
b11011000 1%
b11011001 1%
b11011010 1%
b11011011 1%
b11011100 1%
b11011101 1%
b11011110 1%
b11011111 1%
b11100000 1%
b11100001 1%
b11100010 1%
b11100011 1%
b11100100 1%
b11100101 1%
b11100110 1%
b11100111 1%
b11101000 1%
b11101001 1%
b11101010 1%
b11101011 1%
b11101100 1%
b11101101 1%
b11101110 1%
b11101111 1%
b11110000 1%
b11110001 1%
b11110010 1%
b11110011 1%
b11110100 1%
b11110101 1%
b11110110 1%
b11110111 1%
b11111000 1%
b11111001 1%
b11111010 1%
b11111011 1%
b11111100 1%
b11111101 1%
b11111110 1%
b11111111 1%
b100000000 1%
#201
0"!
09
0S,
0~
1p$
1C"
1Z!
1O#
1*"
13%
#250
0!!
08
0R,
0}
#287
16
b1010 4
b100 W
b11 S
b1 O
1z
1Q,
1K
1w
1u
1N,
1L,
b10 V%
1N%
1r%
12
1v%
#300
1!!
b100 #!
18
1R,
1}
14%
1w%
#301
1T%
1M"
02%
03%
1P%
b1000 V%
1M%
1T!
0r%
1p%
1X!
1K"
1L"
1z%
0v%
1r$
1v$
1Q#
1U#
1s!
1q!
#350
0!!
08
0R,
0}
#400
1!!
b101 #!
18
1R,
1}
04%
0w%
1{%
#401
1R%
0T%
0M"
12%
13%
0O%
0H%
0M%
0P%
1K%
b1001 V%
0:
0)!
0y$
1x$
1w$
0X#
1W#
1V#
0X!
0T!
1V!
1s%
1t%
1%'
1['
0K"
0W#
0V#
0L"
0x$
0w$
0r$
0v$
0Q#
0U#
1Y#
1{"
1y"
1z$
1>$
1<$
0s!
0q!
1A"
1("
1:!
1?"
1="
1&"
1$"
1/
1-
#450
0!!
08
0R,
0}
#500
1!!
b110 #!
18
1R,
1}
14%
1u%
1t'
13(
11(
1F)
1D)
1Y*
1W*
1l+
1j+
1',
#501
1-'
1/+
11+
1z)
1|)
1g(
1i(
1T'
1V'
1]'
1s'
1U%
1M"
02%
1&'
03%
b1 G%
b1010 V%
1|
1n'
1m'
1l'
1j'
1f'
1`'
1_'
1(!
1R!
0s%
1r%
1v%
0t%
0%'
0['
0&'
0|
0|&
1}&
1Y!
1$'
1n(
0Y!
#550
0!!
08
0R,
0}
#600
1!!
b111 #!
18
1R,
1}
04%
0u%
1w%
0t'
1D(
1C(
1B(
1@(
1<(
16(
15(
1E(
1))
0',
1&,
1+,
#601
11'
1,'
0-'
1p(
1()
1o'
1<&
1=&
1C&
1G&
1I&
1J&
1K&
0]'
1T%
0U%
0M"
12%
1''
13%
b10 G%
1M%
b1011 V%
1|
0n'
0m'
0l'
0j'
0f'
0`'
0_'
19!
18!
17!
15!
11!
1+!
1*!
1#)
1")
1!)
1~(
1}(
1{(
1z(
1w(
1v(
1u(
1t(
1'!
0R!
1Q!
1X!
1s%
1t%
1K"
1W#
1V#
0$'
0n(
0''
1Q#
1U#
0("
0:!
0Y#
0{"
0y"
0|
0&"
0$"
0}&
1~&
1Y!
1t!
1s!
1r!
1p!
1l!
1f!
1e!
1#'
1#*
0Y!
0/
0-
#650
0!!
08
0R,
0}
#700
1!!
b1000 #!
18
1R,
1}
14%
1u%
03(
01(
0D(
0C(
0B(
0@(
0<(
06(
05(
0E(
1G(
0))
0F)
0D)
1W)
1V)
1U)
1T)
1S)
1Q)
1P)
1M)
1L)
1K)
1J)
1X)
1<*
0Y*
0W*
0l+
0j+
0&,
1%,
0+,
1*,
1/,
#701
15'
10'
01'
1+'
0,'
0/+
01+
0z)
0|)
1%*
1;*
1$)
1N&
1O&
1P&
1Q&
1T&
1U&
1W&
1X&
1Y&
1Z&
1[&
0g(
0i(
0p(
1q'
0o'
0<&
0=&
0C&
0G&
0I&
0J&
0K&
0T'
0V'
1U%
1M"
02%
1('
03%
b1 F%
b11 G%
b1100 V%
1|
0#)
0")
0!)
0~(
0}(
0{(
0z(
0w(
0v(
0u(
0t(
16!
13!
12!
01!
1/!
1.!
1-!
1,!
0+!
0*!
16*
15*
1/*
1-*
1+*
1(*
1&!
1P!
1R!
0s%
0r%
1q%
1x%
0v%
0t%
0#'
0#*
0('
0|
0~&
1!'
1c!
1Y!
1q!
1n!
1m!
0l!
1j!
1i!
1h!
1g!
0f!
0e!
0Q#
1R#
1"'
16+
1|"
1{"
1z"
1x"
1t"
1n"
1m"
0?"
0="
0Y!
#750
0!!
08
0R,
0}
#800
1!!
b1001 #!
18
1R,
1}
04%
0u%
0w%
1y%
0G(
0W)
0V)
0U)
0T)
0S)
0Q)
0P)
0M)
0L)
0K)
0J)
0X)
1Z)
0<*
1j*
1i*
1c*
1a*
1_*
1\*
1k*
1O+
0%,
1$,
0*,
1),
0/,
1.,
#801
14'
05'
1/'
00'
1*'
0+'
18+
1N+
17*
1]&
1`&
1b&
1d&
1j&
1k&
0%*
1&)
0$)
0N&
0O&
0P&
0Q&
0T&
0U&
0W&
0X&
0Y&
0Z&
0[&
0q'
0s'
1S%
0T%
0U%
0M"
12%
1)'
13%
b10 F%
b1101 V%
1|
06*
05*
0/*
0-*
0+*
0(*
07!
06!
05!
03!
10!
0/!
0-!
0,!
1+!
1I+
1H+
1G+
1B+
1>+
1=+
1;+
1:+
0(!
1%!
0P!
1O!
1s%
1t%
0"'
06+
0)'
0|
0c!
1b!
1Y!
0r!
0q!
0p!
0n!
1k!
0j!
0h!
0g!
1f!
1S#
0R#
1.#
1-#
1,#
1+#
1*#
1(#
1'#
1$#
1##
1"#
1!#
#850
0!!
08
0R,
0}
#900
1!!
b1010 #!
18
1R,
1}
14%
1u%
0Z)
0j*
0i*
0c*
0a*
0_*
0\*
0k*
1m*
0O+
1}+
1|+
1{+
1v+
1r+
1q+
1o+
1n+
1~+
0$,
0),
1(,
0.,
1-,
#901
13'
04'
1.'
0/'
0*'
1J+
1l&
1m&
1o&
1p&
1t&
1y&
1z&
1{&
08+
19*
07*
0]&
0`&
0b&
0d&
0j&
0k&
0&)
0()
1U%
1M"
02%
03%
b11 F%
b10 V%
0I+
0H+
0G+
0B+
0>+
0=+
0;+
0:+
17!
00!
1-!
1*!
0'!
1P!
0s%
1r%
0q%
0p%
0z%
0x%
1v%
0t%
1c!
1r!
0k!
1h!
1e!
0S#
1T#
1>#
1=#
17#
15#
13#
10#
#950
0!!
08
0R,
0}
#1000
1!!
b1011 #!
18
1R,
1}
04%
0u%
1w%
0y%
0{%
0m*
0}+
0|+
0{+
0v+
0r+
0q+
0o+
0n+
0~+
1",
0(,
0-,
1,,
#1001
12'
03'
0.'
1L+
0J+
0l&
0m&
0o&
0p&
0t&
0y&
0z&
0{&
09*
0;*
0R%
0S%
1T%
0U%
0M"
12%
13%
1H%
b0 F%
1P%
b1000 V%
0K%
09!
08!
07!
02!
0.!
0-!
0+!
0*!
0&!
1)!
1y$
1X#
0W#
0V#
0P!
0O!
1T!
0r%
1p%
0V!
1z%
0v%
1L"
1u$
1v$
0A"
0z$
0c!
0b!
1Z#
0Y!
0t!
0r!
1q!
0m!
0i!
0h!
0f!
0e!
10"
1N!
1`!
0_!
1Q#
1r$
0T#
0u$
1J"
b1110 V%
1N#
1M#
1L#
1G#
1C#
1B#
1@#
1?#
0>$
0<$
0|"
0{"
0z"
0x"
0t"
0n"
0m"
1r%
1q%
1x%
1v%
#1050
0!!
08
0R,
0}
#1100
1!!
b1100 #!
18
1R,
1}
14%
1y%
1{%
0",
0,,
#1101
02'
0L+
0N+
1R%
1S%
1M"
02%
03%
0P%
b0 V%
1L%
0M%
0%!
0T!
0r%
0q%
0p%
11
0X!
0K"
0L"
0z%
0x%
0v%
0r$
0v$
0Q#
0U#
1Y#
1{"
1y"
1z$
1>$
1<$
0s!
0q!
1A"
1("
1:!
1?"
1="
1&"
1$"
1/
1-
#1102
b1 P
06
0z
0Q,
0K
#1150
0!!
08
0R,
0}
#1200
1!!
b1101 #!
18
1R,
1}
04%
0w%
0y%
0{%
13(
11(
1F)
1D)
1Y*
1W*
1l+
1j+
#1201
1/+
11+
1z)
1|)
1g(
1i(
1T'
1V'
0R%
0S%
0T%
0M"
12%
13%
b0 G%
0L%
0N%
1O%
0R!
0Q!
01
02
1:
1|&
0!'
#1250
0!!
08
0R,
0}
#1287
16
b10 3
b10100 4
b1101 S
b10 O
1z
1Q,
1K
1g
1>,
0w
1v
0u
1t
0N,
1M,
0L,
1K,
b10 V%
1N%
1\!
1r%
12
1v%
#1300
1!!
b1110 #!
18
1R,
1}
14%
1w%
#1301
1T%
1M"
02%
03%
b1 F%
1P%
b1110 V%
1M%
1P!
1T!
1q%
1p%
1X!
1K"
1L"
1z%
1x%
1r$
1v$
0A"
1Q#
1U#
0("
0:!
0Y#
0{"
0y"
0z$
0>$
0<$
0?"
0="
0&"
0$"
1r!
1p!
1c!
0Q#
1R#
0r$
1s$
1>$
1<$
0.#
0-#
0,#
0+#
0*#
0(#
0'#
0$#
0##
0"#
0!#
1{"
1y"
0/
0-
#1350
0!!
08
0R,
0}
#1400
1!!
b1111 #!
18
1R,
1}
04%
1y%
1{%
03(
01(
0F)
0D)
0Y*
0W*
0l+
0j+
#1401
0/+
01+
0z)
0|)
0g(
0i(
0T'
0V'
1R%
1S%
0M"
12%
13%
0P%
b0 V%
1L%
0M%
0T!
0r%
0q%
0p%
11
0X!
0K"
0L"
0z%
0x%
0v%
0s$
0v$
0R#
0U#
1Y#
1,#
1*#
1z$
1M$
1K$
0r!
0p!
1A"
1("
1:!
1>"
1<"
1%"
1#"
1.
1,
#1402
b10 P
b1 Q
06
0z
0Q,
0K
#1450
0!!
08
0R,
0}
#1500
1!!
b10000 #!
18
1R,
1}
14%
0w%
0y%
0{%
12(
10(
1E)
1C)
1X*
1V*
1k+
1i+
#1501
1.+
10+
1y)
1{)
1f(
1h(
1S'
1U'
0R%
0S%
0T%
1M"
02%
03%
b0 F%
0L%
0N%
0P!
01
02
0c!
1&"
0%"
1$"
0#"
1?"
0>"
1="
0<"
1/
0.
1-
0,
#1550
0!!
08
0R,
0}
#1587
16
b100 3
b11110 4
b10000 S
b11 O
1z
1Q,
1K
0g
1f
0>,
1=,
1w
1u
1N,
1L,
b10 V%
1N%
0\!
1[!
1r%
12
1v%
#1600
1!!
b10001 #!
18
1R,
1}
04%
1w%
13(
02(
11(
00(
1F)
0E)
1D)
0C)
1Y*
0X*
1W*
0V*
1l+
0k+
1j+
0i+
#1601
0.+
1/+
00+
11+
0y)
1z)
0{)
1|)
0f(
1g(
0h(
1i(
0S'
1T'
0U'
1V'
1T%
0M"
12%
13%
b10 F%
1P%
b1110 V%
1M%
1O!
1T!
1q%
1p%
1X!
1K"
1L"
1z%
1x%
1r$
1v$
0A"
1Q#
1U#
0("
0:!
0Y#
0{"
0y"
0z$
0>$
0<$
0?"
0="
0&"
0$"
1s!
1r!
1q!
1p!
1b!
0Q#
1S#
0r$
1t$
1>$
1<$
0>#
0=#
07#
05#
03#
00#
1{"
1y"
0/
0-
#1650
0!!
08
0R,
0}
#1700
1!!
b10010 #!
18
1R,
1}
14%
1y%
1{%
03(
01(
0F)
0D)
0Y*
0W*
0l+
0j+
#1701
0/+
01+
0z)
0|)
0g(
0i(
0T'
0V'
1R%
1S%
1M"
02%
03%
0P%
b0 V%
1L%
0M%
0T!
0r%
0q%
0p%
11
0X!
0K"
0L"
0z%
0x%
0v%
0t$
0v$
0S#
0U#
1Y#
1=#
1<#
1;#
1:#
1z$
1^$
1]$
1\$
1[$
0s!
0r!
0q!
0p!
1A"
1("
1:!
1?"
1>"
1="
1<"
1&"
1%"
1$"
1#"
1/
1.
1-
1,
#1702
b11 P
b10 Q
06
0z
0Q,
0K
#1750
0!!
08
0R,
0}
#1800
1!!
b10011 #!
18
1R,
1}
04%
0w%
0y%
0{%
13(
12(
11(
10(
1F)
1E)
1D)
1C)
1Y*
1X*
1W*
1V*
1l+
1k+
1j+
1i+
#1801
1.+
1/+
10+
11+
1y)
1z)
1{)
1|)
1f(
1g(
1h(
1i(
1S'
1T'
1U'
1V'
0R%
0S%
0T%
0M"
12%
13%
b0 F%
0L%
0N%
0O!
01
02
0b!
0%"
0#"
0>"
0<"
0.
0,
#1850
0!!
08
0R,
0}
#1887
16
b110 3
b101000 4
b10011 S
b100 O
1z
1Q,
1K
1g
1>,
0w
0v
0t
1s
0N,
0M,
0K,
1J,
b10 V%
1N%
1\!
1r%
12
1v%
#1900
1!!
b10100 #!
18
1R,
1}
14%
1w%
02(
00(
0E)
0C)
0X*
0V*
0k+
0i+
#1901
0.+
00+
0y)
0{)
0f(
0h(
0S'
0U'
1T%
1M"
02%
03%
b11 F%
1P%
b1110 V%
1M%
1P!
1O!
1T!
1q%
1p%
1X!
1K"
1L"
1z%
1x%
1r$
1v$
0A"
1Q#
1U#
0("
0:!
0Y#
0{"
0y"
0z$
0>$
0<$
0?"
0="
0&"
0$"
1q!
1o!
1c!
1b!
1T#
1u$
0Q#
0r$
1>$
1<$
1{"
1y"
0N#
0M#
0L#
0G#
0C#
0B#
0@#
0?#
0/
0-
#1950
0!!
08
0R,
0}
#2000
1!!
b10101 #!
18
1R,
1}
04%
1y%
1{%
03(
01(
0F)
0D)
0Y*
0W*
0l+
0j+
#2001
0/+
01+
0z)
0|)
0g(
0i(
0T'
0V'
1R%
1S%
0M"
12%
13%
0P%
b0 V%
1L%
0M%
0T!
0r%
0q%
0p%
11
0X!
0K"
0L"
0z%
0x%
0v%
0u$
0v$
0T#
0U#
1Y#
1K#
1I#
1z$
1l$
1j$
0q!
0o!
1A"
1("
1:!
1="
1;"
1$"
1""
1-
1+
#2002
b100 P
b11 Q
06
0z
0Q,
0K
#2050
0!!
08
0R,
0}
#2100
1!!
b10110 #!
18
1R,
1}
14%
0w%
0y%
0{%
11(
1/(
1D)
1B)
1W*
1U*
1j+
1h+
#2101
1-+
1/+
1x)
1z)
1e(
1g(
1R'
1T'
0R%
0S%
0T%
1M"
02%
03%
b0 F%
0L%
0N%
0P!
0O!
01
02
0c!
0b!
1&"
0""
1?"
0;"
1/
0+
#2150
0!!
08
0R,
0}
#2187
16
b100000000000 3
b110111 4
b10110 S
b101 O
1z
1Q,
1K
0g
0f
1]
0>,
0=,
14,
1x
1w
1v
0u
1t
1O,
1N,
1M,
0L,
1K,
b10 V%
1N%
1H!
0\!
0[!
1r%
12
1v%
1:&
0P#
0*"
0N!
0`!
1_!
0q$
0C"
0Z!
13%
#2200
1!!
b10111 #!
18
1R,
1}
1w%
1z'
13(
0/(
1/)
1F)
0B)
1B*
1Y*
0U*
1U+
1l+
0h+
#2201
0-+
11+
1x*
0x)
1|)
1e)
0e(
1i(
1R(
0R'
1V'
1?'
1T%
1P%
b1000 V%
1M%
1T!
0r%
1p%
1X!
1K"
1L"
1z%
0v%
0?"
0="
0&"
0$"
1t!
1s!
1r!
1p!
1o!
0/
0-
#2250
0!!
08
0R,
0}
#2300
1!!
b11000 #!
18
1R,
1}
0w%
1{%
03(
01(
0F)
0D)
0Y*
0W*
0l+
0j+
#2301
0/+
01+
0z)
0|)
0g(
0i(
0T'
0V'
1R%
0T%
0O%
0H%
0M%
0P%
1K%
b1001 V%
0:
0)!
0y$
1x$
1w$
0X#
1W#
1V#
0X!
0T!
1V!
1s%
1t%
1%'
1['
1Q#
1U#
0("
00"
1r$
1v$
0A"
0:!
0K"
0W#
0V#
0L"
0x$
0w$
0r$
0v$
1A"
1:!
0Q#
0U#
1("
10"
1?"
1="
1&"
1$"
0t!
0s!
0r!
0p!
0o!
1/
1-
#2350
0!!
08
0R,
0}
#2400
1!!
b11001 #!
18
1R,
1}
1u%
1t'
13(
11(
1F)
1D)
1Y*
1W*
1l+
1j+
1',
#2401
1-'
1/+
11+
1z)
1|)
1g(
1i(
1T'
1V'
1]'
1s'
1U%
1&'
b1 G%
b1010 V%
1|
1n'
1m'
1l'
1k'
1i'
1h'
1g'
1e'
1d'
1b'
1a'
1_'
1(!
1R!
0s%
1r%
1v%
0t%
0%'
0['
0&'
0|
0|&
1}&
1Y!
1$'
1n(
0Y!
#2450
0!!
08
0R,
0}
#2500
1!!
b11010 #!
18
1R,
1}
0u%
1w%
0t'
1D(
1C(
1B(
1A(
1?(
1>(
1=(
1;(
1:(
18(
17(
15(
1E(
1))
0',
1&,
1+,
#2501
11'
1,'
0-'
1p(
1()
1o'
1<&
1>&
1?&
1A&
1B&
1D&
1E&
1F&
1H&
1I&
1J&
1K&
0]'
1T%
0U%
1''
b10 G%
1M%
b1011 V%
1|
0n'
0m'
0l'
0k'
0i'
0h'
0g'
0e'
0d'
0b'
0a'
0_'
19!
18!
17!
16!
14!
13!
12!
10!
1/!
1-!
1,!
1*!
1{(
1z(
1w(
1v(
1u(
1t(
1'!
0R!
1Q!
1X!
1s%
1t%
1L"
1x$
1w$
0$'
0n(
0''
1r$
1v$
0A"
0:!
0z$
0>$
0<$
0|
0?"
0="
0}&
1~&
1Y!
1t!
1s!
1r!
1q!
1o!
1n!
1m!
1k!
1j!
1h!
1g!
1e!
1#'
1#*
0Y!
0/
0-
#2550
0!!
08
0R,
0}
#2600
1!!
b11011 #!
18
1R,
1}
1u%
03(
01(
0D(
0C(
0B(
0A(
0?(
0>(
0=(
0;(
0:(
08(
07(
05(
0E(
1G(
0))
0F)
0D)
1Q)
1P)
1M)
1L)
1K)
1J)
1X)
1<*
0Y*
0W*
0l+
0j+
0&,
1%,
0+,
1*,
1/,
#2601
15'
10'
01'
1+'
0,'
0/+
01+
0z)
0|)
1%*
1;*
1$)
1N&
1O&
1P&
1Q&
1T&
1U&
0g(
0i(
0p(
1q'
0o'
0<&
0>&
0?&
0A&
0B&
0D&
0E&
0F&
0H&
0I&
0J&
0K&
0T'
0V'
1U%
1('
b1 F%
b11 G%
b1100 V%
1|
0{(
0z(
0w(
0v(
0u(
0t(
09!
08!
07!
06!
04!
00!
1.!
0*!
16*
13*
12*
11*
10*
1-*
1+*
1**
1&!
1P!
1R!
0s%
0r%
1q%
1x%
0v%
0t%
0#'
0#*
0('
0|
0~&
1!'
1c!
1Y!
0t!
0s!
0r!
0q!
0o!
0k!
1i!
0e!
0r$
1s$
1"'
16+
0M$
0K$
1?$
1>$
1=$
1<$
1:$
19$
18$
16$
15$
13$
12$
10$
0&"
1%"
0$"
1#"
0Y!
#2650
0!!
08
0R,
0}
#2700
1!!
b11100 #!
18
1R,
1}
0u%
0w%
1y%
0G(
0Q)
0P)
0M)
0L)
0K)
0J)
0X)
1Z)
0<*
1j*
1g*
1f*
1e*
1d*
1a*
1_*
1^*
1k*
1O+
0%,
1$,
0*,
1),
0/,
1.,
#2701
14'
05'
1/'
00'
1*'
0+'
18+
1N+
17*
1_&
1`&
1b&
1e&
1f&
1g&
1h&
1k&
0%*
1&)
0$)
0N&
0O&
0P&
0Q&
0T&
0U&
0q'
0s'
1S%
0T%
0U%
1)'
b10 F%
b1101 V%
1|
06*
03*
02*
01*
00*
0-*
0+*
0**
19!
16!
15!
14!
02!
10!
0/!
0,!
1F+
1E+
1B+
1A+
1>+
1<+
1:+
0(!
1%!
0P!
1O!
1s%
1t%
0"'
06+
0)'
0|
0c!
1b!
1Y!
1t!
1q!
1p!
1o!
0m!
1k!
0j!
0g!
1t$
0s$
1I$
1H$
1E$
1D$
1C$
1B$
0^$
0]$
0\$
0[$
1&"
1$"
#2750
0!!
08
0R,
0}
#2800
1!!
b11101 #!
18
1R,
1}
1u%
0Z)
0j*
0g*
0f*
0e*
0d*
0a*
0_*
0^*
0k*
1m*
0O+
1z+
1y+
1v+
1u+
1r+
1p+
1n+
1~+
0$,
0),
1(,
0.,
1-,
#2801
13'
04'
1.'
0/'
0*'
1J+
1l&
1n&
1p&
1s&
1t&
1w&
1x&
08+
19*
07*
0_&
0`&
0b&
0e&
0f&
0g&
0h&
0k&
0&)
0()
1U%
b11 F%
b10 V%
0F+
0E+
0B+
0A+
0>+
0<+
0:+
09!
04!
03!
12!
11!
00!
0-!
1,!
1*!
0'!
1P!
0s%
1r%
0q%
0p%
0z%
0x%
1v%
0t%
1c!
0t!
0o!
0n!
1m!
1l!
0k!
0h!
1g!
1e!
0t$
1u$
0l$
0j$
1_$
1\$
1[$
1Z$
1Y$
1V$
1T$
1S$
0&"
0%"
0#"
1""
#2850
0!!
08
0R,
0}
#2900
1!!
b11110 #!
18
1R,
1}
0u%
1w%
0y%
0{%
0m*
0z+
0y+
0v+
0u+
0r+
0p+
0n+
0~+
1",
0(,
0-,
1,,
#2901
12'
03'
0.'
1L+
0J+
0l&
0n&
0p&
0s&
0t&
0w&
0x&
09*
0;*
0R%
0S%
1T%
0U%
1H%
b0 F%
1P%
b1000 V%
0K%
06!
05!
02!
01!
0.!
0,!
0*!
0&!
1)!
1y$
0x$
0w$
1X#
0P!
0O!
1T!
0r%
1p%
0V!
1z%
0v%
0u$
0v$
1K"
0$"
0""
1l$
1k$
1h$
1g$
1d$
1b$
1`$
0c!
0b!
1H"
1{$
0Y!
1t!
1s!
1r!
0q!
1o!
0m!
0l!
0i!
0g!
0e!
1I"
1N!
1q$
1C"
1Z!
1`!
0_!
1M!
1r$
1v$
b1110 V%
0?$
0>$
0=$
0<$
0:$
09$
08$
06$
05$
03$
02$
00$
1r%
1q%
1x%
1v%
#2950
0!!
08
0R,
0}
#3000
1!!
b11111 #!
18
1R,
1}
1y%
1{%
0",
0,,
#3001
02'
0L+
0N+
1R%
1S%
0P%
b0 V%
1L%
0M%
0%!
0T!
0r%
0q%
0p%
11
0X!
0K"
0L"
0z%
0x%
0v%
0r$
0v$
1z$
1?$
1>$
1=$
1;$
1:$
1&"
1$"
0t!
0s!
0r!
0p!
0o!
1A"
1:!
1@"
1?"
1>"
1<"
1;"
10
1/
1.
1,
1+
#3002
b101 P
06
0z
0Q,
0K
#3050
0!!
08
0R,
0}
#3100
1!!
b100000 #!
18
1R,
1}
0w%
0y%
0{%
14(
13(
12(
10(
1/(
1G)
1F)
1E)
1C)
1B)
1Z*
1Y*
1X*
1V*
1U*
1m+
1l+
1k+
1i+
1h+
#3101
1-+
1.+
10+
11+
12+
1x)
1y)
1{)
1|)
1})
1e(
1f(
1h(
1i(
1j(
1R'
1S'
1U'
1V'
1W'
0R%
0S%
0T%
b0 G%
0L%
0N%
1O%
0R!
0Q!
01
02
1:
1|&
0!'
#3150
0!!
08
0R,
0}
#3187
16
b1000000000000 3
b0 4
b100000 S
b110 O
1z
1Q,
1K
0]
1\
04,
13,
0x
0w
0v
0t
0s
0O,
0N,
0M,
0K,
0J,
b10 V%
1N%
0H!
1G!
1r%
12
1v%
0:&
19&
0q$
0C"
0Z!
0`!
1^!
#3200
1!!
b100001 #!
18
1R,
1}
1w%
0z'
1y'
0/)
1.)
0B*
1A*
0U+
1T+
#3201
1w*
0x*
1d)
0e)
1Q(
0R(
1>'
0?'
1T%
1P%
b11 V%
1M%
1T!
1s%
1X!
1K"
1L"
1t%
0@"
0?"
0>"
0<"
0;"
0&"
0$"
00
0/
0.
0,
0+
#3250
0!!
08
0R,
0}
#3300
1!!
b100010 #!
18
1R,
1}
1u%
04(
03(
02(
00(
0/(
0G)
0F)
0E)
0C)
0B)
0Z*
0Y*
0X*
0V*
0U*
0m+
0l+
0k+
0i+
0h+
#3301
0-+
0.+
00+
01+
02+
0x)
0y)
0{)
0|)
0})
0e(
0f(
0h(
0i(
0j(
0R'
0S'
0U'
0V'
0W'
1U%
1E%
0H%
0M%
b100 V%
1U!
0)!
0y$
1x$
1w$
0X#
1W#
1V#
0X!
0s%
0r%
1q%
1x%
0v%
0t%
1Q#
1U#
0("
00"
1r$
1v$
0A"
0:!
1_!
0^!
0I"
0N!
0K"
0W#
0V#
0L"
0x$
0w$
0r$
0v$
1A"
1:!
1I"
1N!
0_!
1^!
0Q#
0U#
1("
10"
1@"
1?"
1>"
1<"
1;"
1&"
1$"
1:&
09&
10
1/
1.
1,
1+
#3350
0!!
08
0R,
0}
#3400
1!!
b100011 #!
18
1R,
1}
0u%
0w%
1y%
1z'
0y'
14(
13(
12(
10(
1/(
1/)
0.)
1G)
1F)
1E)
1C)
1B)
1B*
0A*
1Z*
1Y*
1X*
1V*
1U*
1U+
0T+
1m+
1l+
1k+
1i+
1h+
#3401
1-+
1.+
10+
11+
12+
0w*
1x*
1x)
1y)
1{)
1|)
1})
0d)
1e)
1e(
1f(
1h(
1i(
1j(
0Q(
1R(
1R'
1S'
1U'
1V'
1W'
0>'
1?'
1S%
0T%
0U%
b1 F%
1J%
b101 V%
1P!
1W!
1s%
1t%
1%'
1\'
#3450
0!!
08
0R,
0}
#3500
1!!
b100100 #!
18
1R,
1}
1u%
1u'
1',
#3501
1-'
1^'
1s'
1U%
1&'
b10 F%
b1 G%
b110 V%
1|
1(!
0P!
1O!
1R!
0s%
1r%
1v%
0t%
0%'
0\'
0&'
0|
0|&
1}&
1c!
1Y!
1$'
1o(
0&"
1%"
0$"
1#"
0@"
0?"
0>"
0<"
0;"
1:"
19"
16"
15"
14"
13"
0Y!
00
0/
0.
0,
0+
1*
1)
1&
1%
1$
1#
#3550
0!!
08
0R,
0}
#3600
1!!
b100101 #!
18
1R,
1}
0u%
1w%
0u'
04(
03(
02(
00(
0/(
1.(
1-(
1*(
1)(
1((
1'(
1F(
1*)
0G)
0F)
0E)
0C)
0B)
1A)
1@)
1=)
1<)
1;)
1:)
0Z*
0Y*
0X*
0V*
0U*
1T*
1S*
1P*
1O*
1N*
1M*
0m+
0l+
0k+
0i+
0h+
1g+
1f+
1c+
1b+
1a+
1`+
0',
1&,
1+,
#3601
11'
1,'
0-'
1%+
1&+
1'+
1(+
1++
1,+
0-+
0.+
00+
01+
02+
1p)
1q)
1r)
1s)
1v)
1w)
0x)
0y)
0{)
0|)
0})
1](
1^(
1_(
1`(
1c(
1d(
0e(
0f(
0h(
0i(
0j(
1q(
1()
1p'
1J'
1K'
1L'
1M'
1P'
1Q'
0R'
0S'
0U'
0V'
0W'
0^'
1T%
0U%
1''
b11 F%
b10 G%
b111 V%
1|
1'!
1P!
0R!
1Q!
1s%
1t%
0$'
0o(
0''
0|
0}&
1~&
0c!
1b!
1Y!
1#'
1$*
1&"
1$"
1@"
1="
1<"
1;"
09"
17"
06"
03"
0Y!
10
1-
1,
1+
0)
1'
0&
0#
#3650
0!!
08
0R,
0}
#3700
1!!
b100110 #!
18
1R,
1}
1u%
14(
11(
10(
1/(
0-(
1+(
0*(
0'(
0F(
1H(
0*)
1G)
1D)
1C)
1B)
0@)
1>)
0=)
0:)
1Y)
1=*
1Z*
1W*
1V*
1U*
0S*
1Q*
0P*
0M*
1m+
1j+
1i+
1h+
0f+
1d+
0c+
0`+
0&,
1%,
0+,
1*,
1/,
#3701
15'
10'
01'
1+'
0,'
0%+
0(+
1)+
0++
1-+
1.+
1/+
12+
0p)
0s)
1t)
0v)
1x)
1y)
1z)
1})
1&*
1;*
1%)
0](
0`(
1a(
0c(
1e(
1f(
1g(
1j(
0q(
1r'
0p'
0J'
0M'
1N'
0P'
1R'
1S'
1T'
1W'
1U%
1('
b11 G%
b1000 V%
1|
1&!
1R!
0s%
0r%
0q%
1p%
1z%
0x%
0v%
0t%
0#'
0$*
0('
0|
1c!
0~&
1!'
1Y!
1"'
17+
0Y!
0&"
0%"
0#"
1""
0@"
0;"
0:"
19"
18"
07"
04"
13"
11"
00
0+
0*
1)
1(
0'
0$
1#
1!
#3750
0!!
08
0R,
0}
#3800
1!!
b100111 #!
18
1R,
1}
0u%
0w%
0y%
1{%
04(
0/(
0.(
1-(
1,(
0+(
0((
1'(
1%(
0H(
0G)
0B)
0A)
1@)
1?)
0>)
0;)
1:)
18)
0Y)
1[)
0=*
0Z*
0U*
0T*
1S*
1R*
0Q*
0N*
1M*
1K*
1l*
1P+
0m+
0h+
0g+
1f+
1e+
0d+
0a+
1`+
1^+
0%,
1$,
0*,
1),
0/,
1.,
#3801
14'
05'
1/'
00'
1*'
0+'
1#+
1%+
0&+
0)+
1*+
1++
0,+
0-+
02+
19+
1N+
18*
1n)
1p)
0q)
0t)
1u)
1v)
0w)
0x)
0})
0&*
1')
0%)
1[(
1](
0^(
0a(
1b(
1c(
0d(
0e(
0j(
0r'
0s'
1H'
1J'
0K'
0N'
1O'
1P'
0Q'
0R'
0W'
1R%
0S%
0T%
0U%
1)'
0E%
0O%
0P%
b0 G%
0J%
1K%
b1001 V%
1|
0(!
1%!
0U!
0:
0T!
0R!
0Q!
0W!
07+
1V!
16+
1s%
1t%
0"'
06+
0)'
0|
1|&
0!'
0:&
19&
1Y!
1%'
1['
0Y!
#3850
0!!
08
0R,
0}
#3900
1!!
b101000 #!
18
1R,
1}
1u%
1t'
0z'
1y'
0/)
1.)
0[)
0B*
1A*
0l*
1n*
0P+
0U+
1T+
1!,
1',
0$,
0),
1(,
0.,
1-,
#3901
13'
04'
1.'
0/'
0*'
1-'
1K+
1w*
0x*
09+
1:*
08*
1d)
0e)
0')
0()
1Q(
0R(
1>'
0?'
1]'
1s'
1U%
1&'
b1 G%
b1010 V%
1|
1l'
1g'
1d'
1c'
1b'
1(!
0'!
1R!
0s%
1r%
1v%
0t%
0%'
0['
0&'
0|
0|&
1}&
1Y!
1$'
1n(
0Y!
#3950
0!!
08
0R,
0}
#4000
1!!
b101001 #!
18
1R,
1}
0u%
1w%
0t'
1B(
1=(
1:(
19(
18(
1E(
1))
0n*
0!,
1#,
0',
1&,
1+,
0(,
0-,
1,,
#4001
12'
03'
0.'
11'
1,'
0-'
1M+
0K+
0:*
0;*
1p(
1()
1o'
1?&
1@&
1A&
1D&
1I&
0]'
1T%
0U%
1''
b0 F%
b10 G%
1M%
b1011 V%
1|
0l'
0g'
0d'
0c'
0b'
17!
12!
1/!
1.!
1-!
1#)
1~(
1{(
1z(
1x(
1w(
1r(
1'!
0&!
0P!
0O!
0R!
1Q!
1X!
1s%
1t%
1L"
1x$
1w$
0$'
0n(
0''
1u$
1v$
0A"
0:!
1_!
0^!
0I"
0N!
0z$
0l$
0k$
0h$
0g$
0d$
0b$
0`$
0|
0H"
0{$
0="
0<"
09"
08"
05"
03"
01"
0}&
1~&
0c!
0b!
1Y!
1r!
1m!
1j!
1i!
1h!
1r$
0u$
1#'
1#*
1l$
1k$
1h$
1g$
1d$
1b$
1`$
0?$
0>$
0=$
0;$
0:$
1&"
0""
0Y!
0-
0,
0)
0(
0%
0#
0!
0M!
#4050
0!!
08
0R,
0}
#4100
1!!
b101010 #!
18
1R,
1}
1u%
01(
00(
0-(
0,(
0)(
0'(
0%(
0B(
0=(
0:(
09(
08(
0E(
1G(
0))
0D)
0C)
0@)
0?)
0<)
0:)
08)
1W)
1T)
1Q)
1P)
1N)
1M)
1H)
1X)
1<*
0W*
0V*
0S*
0R*
0O*
0M*
0K*
0j+
0i+
0f+
0e+
0b+
0`+
0^+
0#,
0&,
1%,
0+,
1*,
1/,
0,,
#4101
02'
15'
10'
01'
1+'
0,'
0M+
0N+
0#+
0%+
0'+
0*+
0++
0.+
0/+
0n)
0p)
0r)
0u)
0v)
0y)
0z)
1%*
1;*
1$)
1L&
1Q&
1R&
1T&
1U&
1X&
1[&
0[(
0](
0_(
0b(
0c(
0f(
0g(
0p(
1q'
0o'
0?&
0@&
0A&
0D&
0I&
0H'
0J'
0L'
0O'
0P'
0S'
0T'
1U%
1('
b1 F%
b11 G%
b1100 V%
1|
0#)
0~(
0{(
0z(
0x(
0w(
0r(
19!
07!
16!
13!
10!
0.!
0-!
1*!
16*
14*
13*
12*
1/*
1.*
1**
1&!
0%!
1P!
1R!
0s%
0r%
1q%
1x%
0v%
0t%
0#'
0#*
0('
0|
0~&
1!'
1c!
1Y!
1t!
0r!
1q!
1n!
1k!
0i!
0h!
1e!
0r$
1s$
1"'
16+
0I$
0H$
0E$
0D$
0C$
0B$
1=$
18$
15$
14$
13$
0&"
1%"
0$"
1#"
0Y!
#4150
0!!
08
0R,
0}
#4200
1!!
b101011 #!
18
1R,
1}
0u%
0w%
1y%
0G(
0W)
0T)
0Q)
0P)
0N)
0M)
0H)
0X)
1Z)
0<*
1j*
1h*
1g*
1f*
1c*
1b*
1^*
1k*
1O+
0%,
1$,
0*,
1),
0/,
1.,
#4201
14'
05'
1/'
00'
1*'
0+'
18+
1N+
17*
1_&
1c&
1d&
1g&
1h&
1i&
1k&
0%*
1&)
0$)
0L&
0Q&
0R&
0T&
0U&
0X&
0[&
0q'
0s'
1S%
0T%
0U%
1)'
b10 F%
b1101 V%
1|
06*
04*
03*
02*
0/*
0.*
0**
17!
15!
03!
11!
00!
0/!
1-!
0*!
1F+
1E+
1D+
1A+
1?+
1>+
1<+
1;+
0(!
1%!
0P!
1O!
1s%
1t%
0"'
06+
0)'
0|
0c!
1b!
1Y!
1r!
1p!
0n!
1l!
0k!
0j!
1h!
0e!
1t$
0s$
1O$
1L$
1I$
1H$
1F$
1E$
1@$
0_$
0\$
0[$
0Z$
0Y$
0V$
0T$
0S$
1&"
1$"
#4250
0!!
08
0R,
0}
#4300
1!!
b101100 #!
18
1R,
1}
1u%
0Z)
0j*
0h*
0g*
0f*
0c*
0b*
0^*
0k*
1m*
0O+
1z+
1y+
1x+
1u+
1s+
1r+
1p+
1o+
1~+
0$,
0),
1(,
0.,
1-,
#4301
13'
04'
1.'
0/'
0*'
1J+
1m&
1n&
1p&
1q&
1s&
1v&
1w&
1x&
08+
19*
07*
0_&
0c&
0d&
0g&
0h&
0i&
0k&
0&)
0()
1U%
b11 F%
b10 V%
0F+
0E+
0D+
0A+
0?+
0>+
0<+
0;+
09!
07!
14!
02!
1/!
1.!
0-!
1,!
1+!
0'!
1P!
0s%
1r%
0q%
0p%
0z%
0x%
1v%
0t%
1c!
0t!
0r!
1o!
0m!
1j!
1i!
0h!
1g!
1f!
0t$
1u$
0l$
0k$
0h$
0g$
0d$
0b$
0`$
1_$
1]$
1\$
1[$
1X$
1W$
1S$
0&"
0%"
0#"
1""
#4350
0!!
08
0R,
0}
#4400
1!!
b101101 #!
18
1R,
1}
0u%
1w%
0y%
0{%
0m*
0z+
0y+
0x+
0u+
0s+
0r+
0p+
0o+
0~+
1",
0(,
0-,
1,,
#4401
12'
03'
0.'
1L+
0J+
0m&
0n&
0p&
0q&
0s&
0v&
0w&
0x&
09*
0;*
0R%
0S%
1T%
0U%
1H%
b0 F%
1P%
b1000 V%
0K%
06!
05!
04!
01!
0/!
0.!
0,!
0+!
0&!
1)!
1y$
0x$
0w$
1X#
0P!
0O!
1T!
0r%
1p%
0V!
1z%
0v%
0u$
0v$
1K"
0$"
0""
1l$
1k$
1j$
1g$
1e$
1d$
1b$
1a$
0c!
0b!
1G"
1{$
0Y!
0q!
0p!
0o!
0l!
0j!
0i!
0g!
0f!
1I"
1N!
1q$
1C"
1Z!
1`!
0_!
1L!
1r$
1v$
b1110 V%
0=$
08$
05$
04$
03$
1r%
1q%
1x%
1v%
#4450
0!!
08
0R,
0}
#4500
1!!
b101110 #!
18
1R,
1}
1y%
1{%
0",
0,,
#4501
02'
0L+
0N+
1R%
1S%
0P%
b0 V%
1L%
0M%
0%!
0T!
0r%
0q%
0p%
11
0X!
0K"
0L"
0z%
0x%
0v%
0r$
0v$
1z$
1&"
1$"
1A"
1:!
#4502
b110 P
06
0z
0Q,
0K
#4550
0!!
08
0R,
0}
#4600
1!!
b101111 #!
18
1R,
1}
0w%
0y%
0{%
#4601
0R%
0S%
0T%
b0 G%
0L%
0N%
1O%
0R!
0Q!
01
02
1:
1|&
0!'
#4650
0!!
08
0R,
0}
#4687
15
b0 3
b101111 S
b111 O
1y
1P,
1K
0\
03,
b1010 T,
b1 V%
1N%
0G!
0J
1I
0H
1G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
1s%
12
1t%
09&
1P#
1*"
0q$
0C"
03%
0L!
1/
1-
#4700
1!!
b110000 #!
18
1R,
1}
04%
1u%
0y'
13(
11(
0.)
1F)
1D)
0A*
1Y*
1W*
0T+
1l+
1j+
#4701
1/+
11+
0w*
1z)
1|)
0d)
1g(
1i(
0Q(
1T'
1V'
0>'
1U%
0M"
12%
0J"
13%
b1110 V%
0s%
1r%
1q%
1p%
1z%
1x%
1v%
0t%
#4750
0!!
08
0R,
0}
#4800
1!!
b110001 #!
18
1R,
1}
14%
0u%
1w%
1y%
1{%
#4801
1R%
1S%
1T%
0U%
1M"
02%
1J"
03%
b0 V%
1L%
0r%
0q%
0p%
11
0z%
0x%
0v%
#4802
b111 P
b100 Q
05
0y
0P,
0K
#4850
0!!
08
0R,
0}
#4900
1!!
b110010 #!
18
1R,
1}
04%
0w%
0y%
0{%
#4901
0R%
0S%
0T%
0M"
12%
0J"
13%
0L%
0N%
01
02
#4950
0!!
08
0R,
0}
#4987
15
b10 3
b110010 S
b1000 O
1y
1P,
1K
1g
1>,
b10100 T,
b1 V%
1N%
1\!
0I
1H
0G
1F
1s%
12
1t%
#5000
1!!
b110011 #!
18
1R,
1}
14%
1u%
#5001
1U%
1M"
02%
1J"
03%
b1 F%
b1110 V%
1P!
0s%
1r%
1q%
1p%
1z%
1x%
1v%
0t%
1c!
0&"
1%"
0$"
1#"
1@"
1="
1:"
19"
17"
16"
11"
0/
1.
0-
1,
#5050
0!!
08
0R,
0}
#5100
1!!
b110100 #!
18
1R,
1}
04%
0u%
1w%
1y%
1{%
03(
12(
01(
10(
0F)
1E)
0D)
1C)
0Y*
1X*
0W*
1V*
0l+
1k+
0j+
1i+
#5101
1.+
0/+
10+
01+
1y)
0z)
1{)
0|)
1f(
0g(
1h(
0i(
1S'
0T'
1U'
0V'
1R%
1S%
1T%
0U%
0M"
12%
0J"
13%
b0 V%
1L%
0r%
0q%
0p%
11
0z%
0x%
0v%
#5102
b1000 P
b101 Q
05
0y
0P,
0K
#5150
0!!
08
0R,
0}
#5200
1!!
b110101 #!
18
1R,
1}
14%
0w%
0y%
0{%
#5201
0R%
0S%
0T%
1M"
02%
1J"
03%
b0 F%
0L%
0N%
0P!
01
02
0c!
1&"
0%"
1$"
0#"
0@"
0="
0:"
09"
07"
06"
01"
1/
0.
1-
0,
#5250
0!!
08
0R,
0}
#5287
15
b100 3
b110101 S
b1001 O
1y
1P,
1K
0g
1f
0>,
1=,
b11110 T,
b1 V%
1N%
0\!
1[!
1I
1G
1s%
12
1t%
#5300
1!!
b110110 #!
18
1R,
1}
04%
1u%
13(
02(
11(
00(
1F)
0E)
1D)
0C)
1Y*
0X*
1W*
0V*
1l+
0k+
1j+
0i+
#5301
0.+
1/+
00+
11+
0y)
1z)
0{)
1|)
0f(
1g(
0h(
1i(
0S'
1T'
0U'
1V'
1U%
0M"
12%
0J"
13%
b10 F%
b1110 V%
1O!
0s%
1r%
1q%
1p%
1z%
1x%
1v%
0t%
1b!
1%"
1#"
1@"
1>"
1="
1<"
19"
18"
14"
1.
1,
#5350
0!!
08
0R,
0}
#5400
1!!
b110111 #!
18
1R,
1}
14%
0u%
1w%
1y%
1{%
12(
10(
1E)
1C)
1X*
1V*
1k+
1i+
#5401
1.+
10+
1y)
1{)
1f(
1h(
1S'
1U'
1R%
1S%
1T%
0U%
1M"
02%
1J"
03%
b0 V%
1L%
0r%
0q%
0p%
11
0z%
0x%
0v%
#5402
b1001 P
b110 Q
05
0y
0P,
0K
#5450
0!!
08
0R,
0}
#5500
1!!
b111000 #!
18
1R,
1}
04%
0w%
0y%
0{%
#5501
0R%
0S%
0T%
0M"
12%
0J"
13%
b0 F%
0L%
0N%
0O!
01
02
0b!
0%"
0#"
0@"
0>"
0="
0<"
09"
08"
04"
0.
0,
#5550
0!!
08
0R,
0}
#5587
15
b110 3
b111000 S
b1010 O
1y
1P,
1K
1g
1>,
b101000 T,
b1 V%
1N%
1\!
0I
0H
0F
1E
1s%
12
1t%
#5600
1!!
b111001 #!
18
1R,
1}
14%
1u%
02(
00(
0E)
0C)
0X*
0V*
0k+
0i+
#5601
0.+
00+
0y)
0{)
0f(
0h(
0S'
0U'
1U%
1M"
02%
1J"
03%
b11 F%
b1110 V%
1P!
1O!
0s%
1r%
1q%
1p%
1z%
1x%
1v%
0t%
1c!
1b!
0&"
1""
1="
1<"
1;"
18"
16"
15"
13"
12"
0/
1+
#5650
0!!
08
0R,
0}
#5700
1!!
b111010 #!
18
1R,
1}
04%
0u%
1w%
1y%
1{%
03(
1/(
0F)
1B)
0Y*
1U*
0l+
1h+
#5701
1-+
01+
1x)
0|)
1e(
0i(
1R'
0V'
1R%
1S%
1T%
0U%
0M"
12%
0J"
13%
b0 V%
1L%
0r%
0q%
0p%
11
0z%
0x%
0v%
#5702
b1010 P
b111 Q
05
0y
0P,
0K
#5750
0!!
08
0R,
0}
#5800
1!!
b111011 #!
18
1R,
1}
14%
0w%
0y%
0{%
#5801
0R%
0S%
0T%
1M"
02%
1J"
03%
b0 F%
0L%
0N%
0P!
0O!
01
02
0c!
0b!
1&"
0""
0="
0<"
0;"
08"
06"
05"
03"
02"
1/
0+
#5850
0!!
08
0R,
0}
#5887
b11111111111111111111111111111111 W
